/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},42:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Th,computeFlatOffset:()=>Vh,computeOutShape:()=>Rh,getNormalizedAxes:()=>Mh,isSliceContinous:()=>Wh,maskToAxes:()=>Ah,parseSliceParams:()=>Uh,sliceInfo:()=>Gh,startForAxis:()=>Bh,startIndicesWithElidedDims:()=>Oh,stopForAxis:()=>Ph,stopIndicesWithElidedDims:()=>Lh,stridesForAxis:()=>zh,stridesWithElidedDims:()=>_h});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>cm,computeOutShape:()=>um,segOpComputeOptimalWindowSize:()=>lm});var r={};n.r(r),n.d(r,{ERF_A1:()=>Bg,ERF_A2:()=>Pg,ERF_A3:()=>Wg,ERF_A4:()=>Vg,ERF_A5:()=>Ug,ERF_P:()=>zg,PARALLELIZE_THRESHOLD:()=>$g,SELU_SCALE:()=>Lg,SELU_SCALEALPHA:()=>Og,applyActivation:()=>Cf,assertAndGetBroadcastShape:()=>Kd,assertAxesAreInnerMostDims:()=>Cp,assertParamsConsistent:()=>kg,assignToTypedArray:()=>Jg,axesAreInnerMostDims:()=>kp,calculateShapes:()=>Mg,checkEinsumDimSizes:()=>rm,combineLocations:()=>Ip,complexWithEvenIndex:()=>qg,complexWithOddIndex:()=>Xg,computeConv2DInfo:()=>hd,computeConv3DInfo:()=>dd,computeDefaultPad:()=>pd,computeDilation2DInfo:()=>ld,computeOptimalWindowSize:()=>Ng,computeOutAndReduceShapes:()=>$p,computeOutShape:()=>Ig,computePool2DInfo:()=>ud,computePool3DInfo:()=>cd,convertConv2DDataFormat:()=>vd,decodeEinsumEquation:()=>tm,eitherStridesOrDilationsAreOne:()=>xd,expandShapeToKeepDim:()=>Np,exponent:()=>Qg,exponents:()=>Zg,fromStringArrayToUint8:()=>dm,fromUint8ToStringArray:()=>hm,getAxesPermutation:()=>Sp,getBroadcastDims:()=>Hd,getComplexWithIndex:()=>Yg,getEinsumComputePath:()=>sm,getEinsumPermutation:()=>nm,getFusedBiasGradient:()=>Nf,getFusedDyActivation:()=>$f,getImageCenter:()=>Cg,getInnerMostAxes:()=>Tp,getPermuted:()=>Eg,getReductionAxes:()=>jd,getReshaped:()=>Sg,getReshapedPermuted:()=>Tg,getSliceBeginCoords:()=>Ag,getSliceSize:()=>Rg,getUndoAxesPermutation:()=>Ep,isIdentityPermutation:()=>am,log:()=>Hg,mergeRealAndImagArrays:()=>jg,prepareAndValidate:()=>_g,prepareSplitSize:()=>om,segment_util:()=>t,shouldFuse:()=>Sf,slice_util:()=>e,splitRealAndImagArrays:()=>Kg,tupleValuesAreOne:()=>yd,upcastType:()=>xc,validateInput:()=>Dg,validateUpdateShape:()=>Fg,warn:()=>Gg});var s={};function a(){}function i(e){return e()}function o(){return Object.create(null)}function l(e){e.forEach(i)}function u(e){return"function"==typeof e}function c(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function h(e){return 0===Object.keys(e).length}function d(e,t,n){e.insertBefore(t,n||null)}function p(e){e.parentNode.removeChild(e)}function f(e){return document.createElement(e)}function g(){return e=" ",document.createTextNode(e);var e}function m(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}let b;function y(e){b=e}function x(e){(function(){if(!b)throw new Error("Function called outside component initialization");return b})().$$.on_mount.push(e)}n.r(s),n.d(s,{addImpl:()=>vN,bincountImpl:()=>dC,bincountReduceImpl:()=>pC,ceilImpl:()=>mC,concatImpl:()=>kC,expImpl:()=>gS,expm1Impl:()=>vS,floorImpl:()=>LS,gatherV2Impl:()=>jS,greaterImpl:()=>qS,lessImpl:()=>oE,linSpaceImpl:()=>pE,logImpl:()=>gE,maxImpl:()=>AE,maximumImpl:()=>FE,minimumImpl:()=>UE,multiplyImpl:()=>YC,negImpl:()=>QE,notEqualImpl:()=>oT,prodImpl:()=>vT,rangeImpl:()=>kT,rsqrtImpl:()=>DT,simpleAbsImpl:()=>TN,sliceImpl:()=>lC,sparseFillEmptyRowsImpl:()=>eA,sparseReshapeImpl:()=>nA,squaredDifferenceImpl:()=>uA,stridedSliceImpl:()=>fA,subImpl:()=>CS,tileImpl:()=>xA,topKImpl:()=>vA,transposeImpl:()=>ON,uniqueImpl:()=>NA}),new Set,new Set;const v=[],w=[],k=[],I=[],$=Promise.resolve();let N=!1;function C(e){k.push(e)}let S=!1;const E=new Set;function T(){if(!S){S=!0;do{for(let e=0;e<v.length;e+=1){const t=v[e];y(t),A(t.$$)}for(y(null),v.length=0;w.length;)w.pop()();for(let e=0;e<k.length;e+=1){const t=k[e];E.has(t)||(E.add(t),t())}k.length=0}while(v.length);for(;I.length;)I.pop()();N=!1,S=!1,E.clear()}}function A(e){if(null!==e.fragment){e.update(),l(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(C)}}const R=new Set;let _;function F(e,t){const n=e.$$;null!==n.fragment&&(l(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function D(e,t,n,r,s,c,h=[-1]){const d=b;y(e);const f=e.$$={fragment:null,ctx:null,props:c,update:a,not_equal:s,bound:o(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(d?d.$$.context:t.context||[]),callbacks:o(),dirty:h,skip_bound:!1};let g=!1;if(f.ctx=n?n(e,t.props||{},((t,n,...r)=>{const a=r.length?r[0]:n;return f.ctx&&s(f.ctx[t],f.ctx[t]=a)&&(!f.skip_bound&&f.bound[t]&&f.bound[t](a),g&&function(e,t){-1===e.$$.dirty[0]&&(v.push(e),N||(N=!0,$.then(T)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}(e,t)),n})):[],f.update(),g=!0,l(f.before_update),f.fragment=!!r&&r(f.ctx),t.target){if(t.hydrate){const e=(w=t.target,Array.from(w.childNodes));f.fragment&&f.fragment.l(e),e.forEach(p)}else f.fragment&&f.fragment.c();t.intro&&((m=e.$$.fragment)&&m.i&&(R.delete(m),m.i(x))),function(e,t,n,r){const{fragment:s,on_mount:a,on_destroy:o,after_update:c}=e.$$;s&&s.m(t,n),r||C((()=>{const t=a.map(i).filter(u);o?o.push(...t):l(t),e.$$.on_mount=[]})),c.forEach(C)}(e,t.target,t.anchor,t.customElement),T()}var m,x,w;y(d)}"undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global,new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]),"function"==typeof HTMLElement&&(_=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:e}=this.$$;this.$$.on_disconnect=e.map(i).filter(u);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(e,t,n){this[e]=n}disconnectedCallback(){l(this.$$.on_disconnect)}$destroy(){F(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!h(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}});class M{$destroy(){F(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!h(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function O(e,t){let n,r;if(void 0===t)for(const t of e)null!=t&&(void 0===n?t>=t&&(n=r=t):(n>t&&(n=t),r<t&&(r=t)));else{let s=-1;for(let a of e)null!=(a=t(a,++s,e))&&(void 0===n?a>=a&&(n=r=a):(n>a&&(n=a),r<a&&(r=a)))}return[n,r]}var L=Array.prototype.slice;function z(e){return e}var B=1e-6;function P(e){return"translate("+e+",0)"}function W(e){return"translate(0,"+e+")"}function V(e){return t=>+e(t)}function U(e,t){return t=Math.max(0,e.bandwidth()-2*t)/2,e.round()&&(t=Math.round(t)),n=>+e(n)+t}function G(){return!this.__axis}function H(e,t){var n=[],r=null,s=null,a=6,i=6,o=3,l="undefined"!=typeof window&&window.devicePixelRatio>1?0:.5,u=1===e||4===e?-1:1,c=4===e||2===e?"x":"y",h=1===e||3===e?P:W;function d(d){var p=null==r?t.ticks?t.ticks.apply(t,n):t.domain():r,f=null==s?t.tickFormat?t.tickFormat.apply(t,n):z:s,g=Math.max(a,0)+o,m=t.range(),b=+m[0]+l,y=+m[m.length-1]+l,x=(t.bandwidth?U:V)(t.copy(),l),v=d.selection?d.selection():d,w=v.selectAll(".domain").data([null]),k=v.selectAll(".tick").data(p,t).order(),I=k.exit(),$=k.enter().append("g").attr("class","tick"),N=k.select("line"),C=k.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),k=k.merge($),N=N.merge($.append("line").attr("stroke","currentColor").attr(c+"2",u*a)),C=C.merge($.append("text").attr("fill","currentColor").attr(c,u*g).attr("dy",1===e?"0em":3===e?"0.71em":"0.32em")),d!==v&&(w=w.transition(d),k=k.transition(d),N=N.transition(d),C=C.transition(d),I=I.transition(d).attr("opacity",B).attr("transform",(function(e){return isFinite(e=x(e))?h(e+l):this.getAttribute("transform")})),$.attr("opacity",B).attr("transform",(function(e){var t=this.parentNode.__axis;return h((t&&isFinite(t=t(e))?t:x(e))+l)}))),I.remove(),w.attr("d",4===e||2===e?i?"M"+u*i+","+b+"H"+l+"V"+y+"H"+u*i:"M"+l+","+b+"V"+y:i?"M"+b+","+u*i+"V"+l+"H"+y+"V"+u*i:"M"+b+","+l+"H"+y),k.attr("opacity",1).attr("transform",(function(e){return h(x(e)+l)})),N.attr(c+"2",u*a),C.attr(c,u*g).text(f),v.filter(G).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===e?"start":4===e?"end":"middle"),v.each((function(){this.__axis=x}))}return d.scale=function(e){return arguments.length?(t=e,d):t},d.ticks=function(){return n=L.call(arguments),d},d.tickArguments=function(e){return arguments.length?(n=null==e?[]:L.call(e),d):n.slice()},d.tickValues=function(e){return arguments.length?(r=null==e?null:L.call(e),d):r&&r.slice()},d.tickFormat=function(e){return arguments.length?(s=e,d):s},d.tickSize=function(e){return arguments.length?(a=i=+e,d):a},d.tickSizeInner=function(e){return arguments.length?(a=+e,d):a},d.tickSizeOuter=function(e){return arguments.length?(i=+e,d):i},d.tickPadding=function(e){return arguments.length?(o=+e,d):o},d.offset=function(e){return arguments.length?(l=+e,d):l},d}function j(){}function K(e){return null==e?j:function(){return this.querySelector(e)}}function q(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function X(){return[]}function Y(e){return null==e?X:function(){return this.querySelectorAll(e)}}function J(e){return function(){return this.matches(e)}}function Z(e){return function(t){return t.matches(e)}}var Q=Array.prototype.find;function ee(){return this.firstElementChild}var te=Array.prototype.filter;function ne(){return this.children}function re(e){return new Array(e.length)}function se(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function ae(e){return function(){return e}}function ie(e,t,n,r,s,a){for(var i,o=0,l=t.length,u=a.length;o<u;++o)(i=t[o])?(i.__data__=a[o],r[o]=i):n[o]=new se(e,a[o]);for(;o<l;++o)(i=t[o])&&(s[o]=i)}function oe(e,t,n,r,s,a,i){var o,l,u,c=new Map,h=t.length,d=a.length,p=new Array(h);for(o=0;o<h;++o)(l=t[o])&&(p[o]=u=i.call(l,l.__data__,o,t)+"",c.has(u)?s[o]=l:c.set(u,l));for(o=0;o<d;++o)u=i.call(e,a[o],o,a)+"",(l=c.get(u))?(r[o]=l,l.__data__=a[o],c.delete(u)):n[o]=new se(e,a[o]);for(o=0;o<h;++o)(l=t[o])&&c.get(p[o])===l&&(s[o]=l)}function le(e){return e.__data__}function ue(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}se.prototype={constructor:se,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var ce="http://www.w3.org/1999/xhtml";const he={svg:"http://www.w3.org/2000/svg",xhtml:ce,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function de(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),he.hasOwnProperty(t)?{space:he[t],local:e}:e}function pe(e){return function(){this.removeAttribute(e)}}function fe(e){return function(){this.removeAttributeNS(e.space,e.local)}}function ge(e,t){return function(){this.setAttribute(e,t)}}function me(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function be(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}function ye(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function xe(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function ve(e){return function(){this.style.removeProperty(e)}}function we(e,t,n){return function(){this.style.setProperty(e,t,n)}}function ke(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function Ie(e,t){return e.style.getPropertyValue(t)||xe(e).getComputedStyle(e,null).getPropertyValue(t)}function $e(e){return function(){delete this[e]}}function Ne(e,t){return function(){this[e]=t}}function Ce(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}function Se(e){return e.trim().split(/^|\s+/)}function Ee(e){return e.classList||new Te(e)}function Te(e){this._node=e,this._names=Se(e.getAttribute("class")||"")}function Ae(e,t){for(var n=Ee(e),r=-1,s=t.length;++r<s;)n.add(t[r])}function Re(e,t){for(var n=Ee(e),r=-1,s=t.length;++r<s;)n.remove(t[r])}function _e(e){return function(){Ae(this,e)}}function Fe(e){return function(){Re(this,e)}}function De(e,t){return function(){(t.apply(this,arguments)?Ae:Re)(this,e)}}function Me(){this.textContent=""}function Oe(e){return function(){this.textContent=e}}function Le(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function ze(){this.innerHTML=""}function Be(e){return function(){this.innerHTML=e}}function Pe(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function We(){this.nextSibling&&this.parentNode.appendChild(this)}function Ve(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ue(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===ce&&t.documentElement.namespaceURI===ce?t.createElement(e):t.createElementNS(n,e)}}function Ge(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function He(e){var t=de(e);return(t.local?Ge:Ue)(t)}function je(){return null}function Ke(){var e=this.parentNode;e&&e.removeChild(this)}function qe(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function Xe(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function Ye(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}function Je(e){return function(){var t=this.__on;if(t){for(var n,r=0,s=-1,a=t.length;r<a;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++s]=n:this.removeEventListener(n.type,n.listener,n.options);++s?t.length=s:delete this.__on}}}function Ze(e,t,n){return function(){var r,s=this.__on,a=function(e){return function(t){e.call(this,t,this.__data__)}}(t);if(s)for(var i=0,o=s.length;i<o;++i)if((r=s[i]).type===e.type&&r.name===e.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=a,r.options=n),void(r.value=t);this.addEventListener(e.type,a,n),r={type:e.type,name:e.name,value:t,listener:a,options:n},s?s.push(r):this.__on=[r]}}function Qe(e,t,n){var r=xe(e),s=r.CustomEvent;"function"==typeof s?s=new s(t,n):(s=r.document.createEvent("Event"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e.dispatchEvent(s)}function et(e,t){return function(){return Qe(this,e,t)}}function tt(e,t){return function(){return Qe(this,e,t.apply(this,arguments))}}Te.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var nt=[null];function rt(e,t){this._groups=e,this._parents=t}function st(){return new rt([[document.documentElement]],nt)}rt.prototype=st.prototype={constructor:rt,select:function(e){"function"!=typeof e&&(e=K(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i,o=t[s],l=o.length,u=r[s]=new Array(l),c=0;c<l;++c)(a=o[c])&&(i=e.call(a,a.__data__,c,o))&&("__data__"in a&&(i.__data__=a.__data__),u[c]=i);return new rt(r,this._parents)},selectAll:function(e){e="function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);return null==t?[]:q(t)}}(e):Y(e);for(var t=this._groups,n=t.length,r=[],s=[],a=0;a<n;++a)for(var i,o=t[a],l=o.length,u=0;u<l;++u)(i=o[u])&&(r.push(e.call(i,i.__data__,u,o)),s.push(i));return new rt(r,s)},selectChild:function(e){return this.select(null==e?ee:function(e){return function(){return Q.call(this.children,e)}}("function"==typeof e?e:Z(e)))},selectChildren:function(e){return this.selectAll(null==e?ne:function(e){return function(){return te.call(this.children,e)}}("function"==typeof e?e:Z(e)))},filter:function(e){"function"!=typeof e&&(e=J(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new rt(r,this._parents)},data:function(e,t){if(!arguments.length)return Array.from(this,le);var n=t?oe:ie,r=this._parents,s=this._groups;"function"!=typeof e&&(e=ae(e));for(var a=s.length,i=new Array(a),o=new Array(a),l=new Array(a),u=0;u<a;++u){var c=r[u],h=s[u],d=h.length,p=q(e.call(c,c&&c.__data__,u,r)),f=p.length,g=o[u]=new Array(f),m=i[u]=new Array(f),b=l[u]=new Array(d);n(c,h,g,m,b,p,t);for(var y,x,v=0,w=0;v<f;++v)if(y=g[v]){for(v>=w&&(w=v+1);!(x=m[w])&&++w<f;);y._next=x||null}}return(i=new rt(i,r))._enter=o,i._exit=l,i},enter:function(){return new rt(this._enter||this._groups.map(re),this._parents)},exit:function(){return new rt(this._exit||this._groups.map(re),this._parents)},join:function(e,t,n){var r=this.enter(),s=this,a=this.exit();return r="function"==typeof e?e(r):r.append(e+""),null!=t&&(s=t(s)),null==n?a.remove():n(a),r&&s?r.merge(s).order():s},merge:function(e){if(!(e instanceof rt))throw new Error("invalid merge");for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new rt(i,this._parents)},selection:function(){return this},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,s=e[t],a=s.length-1,i=s[a];--a>=0;)(r=s[a])&&(i&&4^r.compareDocumentPosition(i)&&i.parentNode.insertBefore(r,i),i=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=ue);for(var n=this._groups,r=n.length,s=new Array(r),a=0;a<r;++a){for(var i,o=n[a],l=o.length,u=s[a]=new Array(l),c=0;c<l;++c)(i=o[c])&&(u[c]=i);u.sort(t)}return new rt(s,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],s=0,a=r.length;s<a;++s){var i=r[s];if(i)return i}return null},size:function(){let e=0;for(const t of this)++e;return e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var s,a=t[n],i=0,o=a.length;i<o;++i)(s=a[i])&&e.call(s,s.__data__,i,a);return this},attr:function(e,t){var n=de(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?fe:pe:"function"==typeof t?n.local?ye:be:n.local?me:ge)(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?ve:"function"==typeof t?ke:we)(e,t,null==n?"":n)):Ie(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?$e:"function"==typeof t?Ce:Ne)(e,t)):this.node()[e]},classed:function(e,t){var n=Se(e+"");if(arguments.length<2){for(var r=Ee(this.node()),s=-1,a=n.length;++s<a;)if(!r.contains(n[s]))return!1;return!0}return this.each(("function"==typeof t?De:t?_e:Fe)(n,t))},text:function(e){return arguments.length?this.each(null==e?Me:("function"==typeof e?Le:Oe)(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?ze:("function"==typeof e?Pe:Be)(e)):this.node().innerHTML},raise:function(){return this.each(We)},lower:function(){return this.each(Ve)},append:function(e){var t="function"==typeof e?e:He(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))},insert:function(e,t){var n="function"==typeof e?e:He(e),r=null==t?je:"function"==typeof t?t:K(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(Ke)},clone:function(e){return this.select(e?Xe:qe)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,s,a=Ye(e+""),i=a.length;if(!(arguments.length<2)){for(o=t?Ze:Je,r=0;r<i;++r)this.each(o(a[r],t,n));return this}var o=this.node().__on;if(o)for(var l,u=0,c=o.length;u<c;++u)for(r=0,l=o[u];r<i;++r)if((s=a[r]).type===l.type&&s.name===l.name)return l.value},dispatch:function(e,t){return this.each(("function"==typeof t?tt:et)(e,t))},[Symbol.iterator]:function*(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r,s=e[t],a=0,i=s.length;a<i;++a)(r=s[a])&&(yield r)}};const at=st;var it={value:()=>{}};function ot(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new lt(r)}function lt(e){this._=e}function ut(e,t){return e.trim().split(/^|\s+/).map((function(e){var n="",r=e.indexOf(".");if(r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}}))}function ct(e,t){for(var n,r=0,s=e.length;r<s;++r)if((n=e[r]).name===t)return n.value}function ht(e,t,n){for(var r=0,s=e.length;r<s;++r)if(e[r].name===t){e[r]=it,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}lt.prototype=ot.prototype={constructor:lt,on:function(e,t){var n,r=this._,s=ut(e+"",r),a=-1,i=s.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++a<i;)if(n=(e=s[a]).type)r[n]=ht(r[n],e.name,t);else if(null==t)for(n in r)r[n]=ht(r[n],e.name,null);return this}for(;++a<i;)if((n=(e=s[a]).type)&&(n=ct(r[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new lt(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,s=new Array(n),a=0;a<n;++a)s[a]=arguments[a+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(a=0,n=(r=this._[e]).length;a<n;++a)r[a].value.apply(t,s)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],s=0,a=r.length;s<a;++s)r[s].value.apply(t,n)}};const dt=ot;var pt,ft,gt=0,mt=0,bt=0,yt=0,xt=0,vt=0,wt="object"==typeof performance&&performance.now?performance:Date,kt="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function It(){return xt||(kt($t),xt=wt.now()+vt)}function $t(){xt=0}function Nt(){this._call=this._time=this._next=null}function Ct(e,t,n){var r=new Nt;return r.restart(e,t,n),r}function St(){xt=(yt=wt.now())+vt,gt=mt=0;try{!function(){It(),++gt;for(var e,t=pt;t;)(e=xt-t._time)>=0&&t._call.call(null,e),t=t._next;--gt}()}finally{gt=0,function(){for(var e,t,n=pt,r=1/0;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:pt=t);ft=e,Tt(r)}(),xt=0}}function Et(){var e=wt.now(),t=e-yt;t>1e3&&(vt-=t,yt=e)}function Tt(e){gt||(mt&&(mt=clearTimeout(mt)),e-xt>24?(e<1/0&&(mt=setTimeout(St,e-wt.now()-vt)),bt&&(bt=clearInterval(bt))):(bt||(yt=wt.now(),bt=setInterval(Et,1e3)),gt=1,kt(St)))}function At(e,t,n){var r=new Nt;return t=null==t?0:+t,r.restart((n=>{r.stop(),e(n+t)}),t,n),r}Nt.prototype=Ct.prototype={constructor:Nt,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?It():+n)+(null==t?0:+t),this._next||ft===this||(ft?ft._next=this:pt=this,ft=this),this._call=e,this._time=n,Tt()},stop:function(){this._call&&(this._call=null,this._time=1/0,Tt())}};var Rt=dt("start","end","cancel","interrupt"),_t=[];function Ft(e,t,n,r,s,a){var i=e.__transition;if(i){if(n in i)return}else e.__transition={};!function(e,t,n){var r,s=e.__transition;function a(l){var u,c,h,d;if(1!==n.state)return o();for(u in s)if((d=s[u]).name===n.name){if(3===d.state)return At(a);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete s[u]):+u<t&&(d.state=6,d.timer.stop(),d.on.call("cancel",e,e.__data__,d.index,d.group),delete s[u])}if(At((function(){3===n.state&&(n.state=4,n.timer.restart(i,n.delay,n.time),i(l))})),n.state=2,n.on.call("start",e,e.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(h=n.tween.length),u=0,c=-1;u<h;++u)(d=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function i(t){for(var s=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(o),n.state=5,1),a=-1,i=r.length;++a<i;)r[a].call(e,s);5===n.state&&(n.on.call("end",e,e.__data__,n.index,n.group),o())}function o(){for(var r in n.state=6,n.timer.stop(),delete s[t],s)return;delete e.__transition}s[t]=n,n.timer=Ct((function(e){n.state=1,n.timer.restart(a,n.delay,n.time),n.delay<=e&&a(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:s,on:Rt,tween:_t,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:0})}function Dt(e,t){var n=Ot(e,t);if(n.state>0)throw new Error("too late; already scheduled");return n}function Mt(e,t){var n=Ot(e,t);if(n.state>3)throw new Error("too late; already running");return n}function Ot(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function Lt(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}var zt,Bt=180/Math.PI,Pt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Wt(e,t,n,r,s,a){var i,o,l;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(l=e*n+t*r)&&(n-=e*l,r-=t*l),(o=Math.sqrt(n*n+r*r))&&(n/=o,r/=o,l/=o),e*r<t*n&&(e=-e,t=-t,l=-l,i=-i),{translateX:s,translateY:a,rotate:Math.atan2(t,e)*Bt,skewX:Math.atan(l)*Bt,scaleX:i,scaleY:o}}function Vt(e,t,n,r){function s(e){return e.length?e.pop()+" ":""}return function(a,i){var o=[],l=[];return a=e(a),i=e(i),function(e,r,s,a,i,o){if(e!==s||r!==a){var l=i.push("translate(",null,t,null,n);o.push({i:l-4,x:Lt(e,s)},{i:l-2,x:Lt(r,a)})}else(s||a)&&i.push("translate("+s+t+a+n)}(a.translateX,a.translateY,i.translateX,i.translateY,o,l),function(e,t,n,a){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),a.push({i:n.push(s(n)+"rotate(",null,r)-2,x:Lt(e,t)})):t&&n.push(s(n)+"rotate("+t+r)}(a.rotate,i.rotate,o,l),function(e,t,n,a){e!==t?a.push({i:n.push(s(n)+"skewX(",null,r)-2,x:Lt(e,t)}):t&&n.push(s(n)+"skewX("+t+r)}(a.skewX,i.skewX,o,l),function(e,t,n,r,a,i){if(e!==n||t!==r){var o=a.push(s(a)+"scale(",null,",",null,")");i.push({i:o-4,x:Lt(e,n)},{i:o-2,x:Lt(t,r)})}else 1===n&&1===r||a.push(s(a)+"scale("+n+","+r+")")}(a.scaleX,a.scaleY,i.scaleX,i.scaleY,o,l),a=i=null,function(e){for(var t,n=-1,r=l.length;++n<r;)o[(t=l[n]).i]=t.x(e);return o.join("")}}}var Ut=Vt((function(e){const t=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?Pt:Wt(t.a,t.b,t.c,t.d,t.e,t.f)}),"px, ","px)","deg)"),Gt=Vt((function(e){return null==e?Pt:(zt||(zt=document.createElementNS("http://www.w3.org/2000/svg","g")),zt.setAttribute("transform",e),(e=zt.transform.baseVal.consolidate())?Wt((e=e.matrix).a,e.b,e.c,e.d,e.e,e.f):Pt)}),", ",")",")");function Ht(e,t){var n,r;return function(){var s=Mt(this,e),a=s.tween;if(a!==n)for(var i=0,o=(r=n=a).length;i<o;++i)if(r[i].name===t){(r=r.slice()).splice(i,1);break}s.tween=r}}function jt(e,t,n){var r,s;if("function"!=typeof n)throw new Error;return function(){var a=Mt(this,e),i=a.tween;if(i!==r){s=(r=i).slice();for(var o={name:t,value:n},l=0,u=s.length;l<u;++l)if(s[l].name===t){s[l]=o;break}l===u&&s.push(o)}a.tween=s}}function Kt(e,t,n){var r=e._id;return e.each((function(){var e=Mt(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return Ot(e,r).value[t]}}function qt(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function Xt(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function Yt(){}var Jt=.7,Zt=1/Jt,Qt="\\s*([+-]?\\d+)\\s*",en="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",tn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",nn=/^#([0-9a-f]{3,8})$/,rn=new RegExp("^rgb\\("+[Qt,Qt,Qt]+"\\)$"),sn=new RegExp("^rgb\\("+[tn,tn,tn]+"\\)$"),an=new RegExp("^rgba\\("+[Qt,Qt,Qt,en]+"\\)$"),on=new RegExp("^rgba\\("+[tn,tn,tn,en]+"\\)$"),ln=new RegExp("^hsl\\("+[en,tn,tn]+"\\)$"),un=new RegExp("^hsla\\("+[en,tn,tn,en]+"\\)$"),cn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function hn(){return this.rgb().formatHex()}function dn(){return this.rgb().formatRgb()}function pn(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=nn.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?fn(t):3===n?new yn(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?gn(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?gn(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=rn.exec(e))?new yn(t[1],t[2],t[3],1):(t=sn.exec(e))?new yn(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=an.exec(e))?gn(t[1],t[2],t[3],t[4]):(t=on.exec(e))?gn(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=ln.exec(e))?kn(t[1],t[2]/100,t[3]/100,1):(t=un.exec(e))?kn(t[1],t[2]/100,t[3]/100,t[4]):cn.hasOwnProperty(e)?fn(cn[e]):"transparent"===e?new yn(NaN,NaN,NaN,0):null}function fn(e){return new yn(e>>16&255,e>>8&255,255&e,1)}function gn(e,t,n,r){return r<=0&&(e=t=n=NaN),new yn(e,t,n,r)}function mn(e){return e instanceof Yt||(e=pn(e)),e?new yn((e=e.rgb()).r,e.g,e.b,e.opacity):new yn}function bn(e,t,n,r){return 1===arguments.length?mn(e):new yn(e,t,n,null==r?1:r)}function yn(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function xn(){return"#"+wn(this.r)+wn(this.g)+wn(this.b)}function vn(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function wn(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function kn(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new $n(e,t,n,r)}function In(e){if(e instanceof $n)return new $n(e.h,e.s,e.l,e.opacity);if(e instanceof Yt||(e=pn(e)),!e)return new $n;if(e instanceof $n)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,s=Math.min(t,n,r),a=Math.max(t,n,r),i=NaN,o=a-s,l=(a+s)/2;return o?(i=t===a?(n-r)/o+6*(n<r):n===a?(r-t)/o+2:(t-n)/o+4,o/=l<.5?a+s:2-a-s,i*=60):o=l>0&&l<1?0:i,new $n(i,o,l,e.opacity)}function $n(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function Nn(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function Cn(e,t,n,r,s){var a=e*e,i=a*e;return((1-3*e+3*a-i)*t+(4-6*a+3*i)*n+(1+3*e+3*a-3*i)*r+i*s)/6}qt(Yt,pn,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:hn,formatHex:hn,formatHsl:function(){return In(this).formatHsl()},formatRgb:dn,toString:dn}),qt(yn,bn,Xt(Yt,{brighter:function(e){return e=null==e?Zt:Math.pow(Zt,e),new yn(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?Jt:Math.pow(Jt,e),new yn(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:xn,formatHex:xn,formatRgb:vn,toString:vn})),qt($n,(function(e,t,n,r){return 1===arguments.length?In(e):new $n(e,t,n,null==r?1:r)}),Xt(Yt,{brighter:function(e){return e=null==e?Zt:Math.pow(Zt,e),new $n(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Jt:Math.pow(Jt,e),new $n(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,s=2*n-r;return new yn(Nn(e>=240?e-240:e+120,s,r),Nn(e,s,r),Nn(e<120?e+240:e-120,s,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));const Sn=e=>()=>e;function En(e,t){var n=t-e;return n?function(e,t){return function(n){return e+n*t}}(e,n):Sn(isNaN(e)?t:e)}const Tn=function e(t){var n=function(e){return 1==(e=+e)?En:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Sn(isNaN(t)?n:t)}}(t);function r(e,t){var r=n((e=bn(e)).r,(t=bn(t)).r),s=n(e.g,t.g),a=n(e.b,t.b),i=En(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=s(t),e.b=a(t),e.opacity=i(t),e+""}}return r.gamma=e,r}(1);function An(e){return function(t){var n,r,s=t.length,a=new Array(s),i=new Array(s),o=new Array(s);for(n=0;n<s;++n)r=bn(t[n]),a[n]=r.r||0,i[n]=r.g||0,o[n]=r.b||0;return a=e(a),i=e(i),o=e(o),r.opacity=1,function(e){return r.r=a(e),r.g=i(e),r.b=o(e),r+""}}}An((function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),s=e[r],a=e[r+1],i=r>0?e[r-1]:2*s-a,o=r<t-1?e[r+2]:2*a-s;return Cn((n-r/t)*t,i,s,a,o)}})),An((function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),s=e[(r+t-1)%t],a=e[r%t],i=e[(r+1)%t],o=e[(r+2)%t];return Cn((n-r/t)*t,s,a,i,o)}}));var Rn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_n=new RegExp(Rn.source,"g");function Fn(e,t){var n,r,s,a=Rn.lastIndex=_n.lastIndex=0,i=-1,o=[],l=[];for(e+="",t+="";(n=Rn.exec(e))&&(r=_n.exec(t));)(s=r.index)>a&&(s=t.slice(a,s),o[i]?o[i]+=s:o[++i]=s),(n=n[0])===(r=r[0])?o[i]?o[i]+=r:o[++i]=r:(o[++i]=null,l.push({i,x:Lt(n,r)})),a=_n.lastIndex;return a<t.length&&(s=t.slice(a),o[i]?o[i]+=s:o[++i]=s),o.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,r=0;r<t;++r)o[(n=l[r]).i]=n.x(e);return o.join("")})}function Dn(e,t){var n;return("number"==typeof t?Lt:t instanceof pn?Tn:(n=pn(t))?(t=n,Tn):Fn)(e,t)}function Mn(e){return function(){this.removeAttribute(e)}}function On(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Ln(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttribute(e);return i===a?null:i===r?s:s=t(r=i,n)}}function zn(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttributeNS(e.space,e.local);return i===a?null:i===r?s:s=t(r=i,n)}}function Bn(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttribute(e))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttribute(e)}}function Pn(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttributeNS(e.space,e.local))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttributeNS(e.space,e.local)}}function Wn(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}function Vn(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}function Un(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&Vn(e,s)),n}return s._value=t,s}function Gn(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&Wn(e,s)),n}return s._value=t,s}function Hn(e,t){return function(){Dt(this,e).delay=+t.apply(this,arguments)}}function jn(e,t){return t=+t,function(){Dt(this,e).delay=t}}function Kn(e,t){return function(){Mt(this,e).duration=+t.apply(this,arguments)}}function qn(e,t){return t=+t,function(){Mt(this,e).duration=t}}function Xn(e,t){if("function"!=typeof t)throw new Error;return function(){Mt(this,e).ease=t}}function Yn(e,t,n){var r,s,a=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?Dt:Mt;return function(){var i=a(this,e),o=i.on;o!==r&&(s=(r=o).copy()).on(t,n),i.on=s}}var Jn=at.prototype.constructor;function Zn(e){return function(){this.style.removeProperty(e)}}function Qn(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}function er(e,t,n){var r,s;function a(){var a=t.apply(this,arguments);return a!==s&&(r=(s=a)&&Qn(e,a,n)),r}return a._value=t,a}function tr(e){return function(t){this.textContent=e.call(this,t)}}function nr(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&tr(r)),t}return r._value=e,r}var rr=0;function sr(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function ar(){return++rr}var ir=at.prototype;sr.prototype=function(e){return at().transition(e)}.prototype={constructor:sr,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=K(e));for(var r=this._groups,s=r.length,a=new Array(s),i=0;i<s;++i)for(var o,l,u=r[i],c=u.length,h=a[i]=new Array(c),d=0;d<c;++d)(o=u[d])&&(l=e.call(o,o.__data__,d,u))&&("__data__"in o&&(l.__data__=o.__data__),h[d]=l,Ft(h[d],t,n,d,h,Ot(o,n)));return new sr(a,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=Y(e));for(var r=this._groups,s=r.length,a=[],i=[],o=0;o<s;++o)for(var l,u=r[o],c=u.length,h=0;h<c;++h)if(l=u[h]){for(var d,p=e.call(l,l.__data__,h,u),f=Ot(l,n),g=0,m=p.length;g<m;++g)(d=p[g])&&Ft(d,t,n,g,p,f);a.push(p),i.push(l)}return new sr(a,i,t,n)},filter:function(e){"function"!=typeof e&&(e=J(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new sr(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new sr(i,this._parents,this._name,this._id)},selection:function(){return new Jn(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=ar(),r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)if(i=o[u]){var c=Ot(i,t);Ft(i,e,n,u,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new sr(r,this._parents,e,n)},call:ir.call,nodes:ir.nodes,node:ir.node,size:ir.size,empty:ir.empty,each:ir.each,on:function(e,t){var n=this._id;return arguments.length<2?Ot(this.node(),n).on.on(e):this.each(Yn(n,e,t))},attr:function(e,t){var n=de(e),r="transform"===n?Gt:Dn;return this.attrTween(e,"function"==typeof t?(n.local?Pn:Bn)(n,r,Kt(this,"attr."+e,t)):null==t?(n.local?On:Mn)(n):(n.local?zn:Ln)(n,r,t))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=de(e);return this.tween(n,(r.local?Un:Gn)(r,t))},style:function(e,t,n){var r="transform"==(e+="")?Ut:Dn;return null==t?this.styleTween(e,function(e,t){var n,r,s;return function(){var a=Ie(this,e),i=(this.style.removeProperty(e),Ie(this,e));return a===i?null:a===n&&i===r?s:s=t(n=a,r=i)}}(e,r)).on("end.style."+e,Zn(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,s,a;return function(){var i=Ie(this,e),o=n(this),l=o+"";return null==o&&(this.style.removeProperty(e),l=o=Ie(this,e)),i===l?null:i===r&&l===s?a:(s=l,a=t(r=i,o))}}(e,r,Kt(this,"style."+e,t))).each(function(e,t){var n,r,s,a,i="style."+t,o="end."+i;return function(){var l=Mt(this,e),u=l.on,c=null==l.value[i]?a||(a=Zn(t)):void 0;u===n&&s===c||(r=(n=u).copy()).on(o,s=c),l.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,s,a=n+"";return function(){var i=Ie(this,e);return i===a?null:i===r?s:s=t(r=i,n)}}(e,r,t),n).on("end.style."+e,null)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,er(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(Kt(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},textTween:function(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,nr(e))},remove:function(){return this.on("end.remove",function(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}(this._id))},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,s=Ot(this.node(),n).tween,a=0,i=s.length;a<i;++a)if((r=s[a]).name===e)return r.value;return null}return this.each((null==t?Ht:jt)(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Hn:jn)(t,e)):Ot(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Kn:qn)(t,e)):Ot(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(Xn(t,e)):Ot(this.node(),t).ease},easeVarying:function(e){if("function"!=typeof e)throw new Error;return this.each(function(e,t){return function(){var n=t.apply(this,arguments);if("function"!=typeof n)throw new Error;Mt(this,e).ease=n}}(this._id,e))},end:function(){var e,t,n=this,r=n._id,s=n.size();return new Promise((function(a,i){var o={value:i},l={value:function(){0==--s&&a()}};n.each((function(){var n=Mt(this,r),s=n.on;s!==e&&((t=(e=s).copy())._.cancel.push(o),t._.interrupt.push(o),t._.end.push(l)),n.on=t})),0===s&&a()}))},[Symbol.iterator]:ir[Symbol.iterator]};var or={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function lr(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}at.prototype.interrupt=function(e){return this.each((function(){!function(e,t){var n,r,s,a=e.__transition,i=!0;if(a){for(s in t=null==t?null:t+"",a)(n=a[s]).name===t?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete a[s]):i=!1;i&&delete e.__transition}}(this,e)}))},at.prototype.transition=function(e){var t,n;e instanceof sr?(t=e._id,e=e._name):(t=ar(),(n=or).time=It(),e=null==e?null:e+"");for(var r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)(i=o[u])&&Ft(i,e,t,u,o,n||lr(i,t));return new sr(r,this._parents,e,t)};const{abs:ur,max:cr,min:hr}=Math;function dr(e){return{type:e}}function pr(e){return Math.ceil(Math.log(function(e,t){let n=0;for(let t of e)null!=t&&(t=+t)>=t&&++n;return n}(e))/Math.LN2)+1}["w","e"].map(dr),["n","s"].map(dr),["n","w","e","s","nw","ne","sw","se"].map(dr);var fr=Math.sqrt(50),gr=Math.sqrt(10),mr=Math.sqrt(2);function br(e,t,n){var r=(t-e)/Math.max(0,n),s=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,s);return s>=0?(a>=fr?10:a>=gr?5:a>=mr?2:1)*Math.pow(10,s):-Math.pow(10,-s)/(a>=fr?10:a>=gr?5:a>=mr?2:1)}function yr(e,t,n){var r=Math.abs(t-e)/Math.max(0,n),s=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/s;return a>=fr?s*=10:a>=gr?s*=5:a>=mr&&(s*=2),t<e?-s:s}var xr=Array.prototype.slice;function vr(e,t){return e-t}const wr=e=>()=>e;function kr(e,t){for(var n,r=-1,s=t.length;++r<s;)if(n=Ir(e,t[r]))return n;return 0}function Ir(e,t){for(var n=t[0],r=t[1],s=-1,a=0,i=e.length,o=i-1;a<i;o=a++){var l=e[a],u=l[0],c=l[1],h=e[o],d=h[0],p=h[1];if($r(l,h,t))return 0;c>r!=p>r&&n<(d-u)*(r-c)/(p-c)+u&&(s=-s)}return s}function $r(e,t,n){var r;return function(e,t,n){return(t[0]-e[0])*(n[1]-e[1])==(n[0]-e[0])*(t[1]-e[1])}(e,t,n)&&function(e,t,n){return e<=t&&t<=n||n<=t&&t<=e}(e[r=+(e[0]===t[0])],n[r],t[r])}function Nr(){}var Cr=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function Sr(e){return"string"==typeof e?new rt([[document.querySelector(e)]],[document.documentElement]):new rt([[e]],nt)}function Er(e,t){if(e=function(e){let t;for(;t=e.sourceEvent;)e=t;return e}(e),void 0===t&&(t=e.currentTarget),t){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}if(t.getBoundingClientRect){var s=t.getBoundingClientRect();return[e.clientX-s.left-t.clientLeft,e.clientY-s.top-t.clientTop]}}return[e.pageX,e.pageY]}function Tr(e){e.stopImmediatePropagation()}function Ar(e){e.preventDefault(),e.stopImmediatePropagation()}const Rr=e=>()=>e;function _r(e,{sourceEvent:t,subject:n,target:r,identifier:s,active:a,x:i,y:o,dx:l,dy:u,dispatch:c}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},subject:{value:n,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},identifier:{value:s,enumerable:!0,configurable:!0},active:{value:a,enumerable:!0,configurable:!0},x:{value:i,enumerable:!0,configurable:!0},y:{value:o,enumerable:!0,configurable:!0},dx:{value:l,enumerable:!0,configurable:!0},dy:{value:u,enumerable:!0,configurable:!0},_:{value:c}})}function Fr(e){return!e.ctrlKey&&!e.button}function Dr(){return this.parentNode}function Mr(e,t){return null==t?{x:e.x,y:e.y}:t}function Or(){return navigator.maxTouchPoints||"ontouchstart"in this}function Lr(){var e,t,n,r,s=Fr,a=Dr,i=Mr,o=Or,l={},u=dt("start","drag","end"),c=0,h=0;function d(e){e.on("mousedown.drag",p).filter(o).on("touchstart.drag",m).on("touchmove.drag",b).on("touchend.drag touchcancel.drag",y).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(i,o){if(!r&&s.call(this,i,o)){var l=x(this,a.call(this,i,o),i,o,"mouse");l&&(Sr(i.view).on("mousemove.drag",f,!0).on("mouseup.drag",g,!0),function(e){var t=e.document.documentElement,n=Sr(e).on("dragstart.drag",Ar,!0);"onselectstart"in t?n.on("selectstart.drag",Ar,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")}(i.view),Tr(i),n=!1,e=i.clientX,t=i.clientY,l("start",i))}}function f(r){if(Ar(r),!n){var s=r.clientX-e,a=r.clientY-t;n=s*s+a*a>h}l.mouse("drag",r)}function g(e){Sr(e.view).on("mousemove.drag mouseup.drag",null),function(e,t){var n=e.document.documentElement,r=Sr(e).on("dragstart.drag",null);t&&(r.on("click.drag",Ar,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}(e.view,n),Ar(e),l.mouse("end",e)}function m(e,t){if(s.call(this,e,t)){var n,r,i=e.changedTouches,o=a.call(this,e,t),l=i.length;for(n=0;n<l;++n)(r=x(this,o,e,t,i[n].identifier,i[n]))&&(Tr(e),r("start",e,i[n]))}}function b(e){var t,n,r=e.changedTouches,s=r.length;for(t=0;t<s;++t)(n=l[r[t].identifier])&&(Ar(e),n("drag",e,r[t]))}function y(e){var t,n,s=e.changedTouches,a=s.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),t=0;t<a;++t)(n=l[s[t].identifier])&&(Tr(e),n("end",e,s[t]))}function x(e,t,n,r,s,a){var o,h,p,f=u.copy(),g=Er(a||n,t);if(null!=(p=i.call(e,new _r("beforestart",{sourceEvent:n,target:d,identifier:s,active:c,x:g[0],y:g[1],dx:0,dy:0,dispatch:f}),r)))return o=p.x-g[0]||0,h=p.y-g[1]||0,function n(a,i,u){var m,b=g;switch(a){case"start":l[s]=n,m=c++;break;case"end":delete l[s],--c;case"drag":g=Er(u||i,t),m=c}f.call(a,e,new _r(a,{sourceEvent:i,subject:p,target:d,identifier:s,active:m,x:g[0]+o,y:g[1]+h,dx:g[0]-b[0],dy:g[1]-b[1],dispatch:f}),r)}}return d.filter=function(e){return arguments.length?(s="function"==typeof e?e:Rr(!!e),d):s},d.container=function(e){return arguments.length?(a="function"==typeof e?e:Rr(e),d):a},d.subject=function(e){return arguments.length?(i="function"==typeof e?e:Rr(e),d):i},d.touchable=function(e){return arguments.length?(o="function"==typeof e?e:Rr(!!e),d):o},d.on=function(){var e=u.on.apply(u,arguments);return e===u?d:e},d.clickDistance=function(e){return arguments.length?(h=(e=+e)*e,d):Math.sqrt(h)},d}_r.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e};const zr=e=>e;function Br(e,t){e&&Wr.hasOwnProperty(e.type)&&Wr[e.type](e,t)}var Pr={Feature:function(e,t){Br(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,s=n.length;++r<s;)Br(n[r].geometry,t)}},Wr={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){Vr(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)Vr(n[r],t,0)},Polygon:function(e,t){Ur(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)Ur(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,s=n.length;++r<s;)Br(n[r],t)}};function Vr(e,t,n){var r,s=-1,a=e.length-n;for(t.lineStart();++s<a;)r=e[s],t.point(r[0],r[1],r[2]);t.lineEnd()}function Ur(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)Vr(e[n],t,1);t.polygonEnd()}function Gr(e,t){e&&Pr.hasOwnProperty(e.type)?Pr[e.type](e,t):Br(e,t)}class Hr{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const t=this._partials;let n=0;for(let r=0;r<this._n&&r<32;r++){const s=t[r],a=e+s,i=Math.abs(e)<Math.abs(s)?e-(a-s):s-(a-e);i&&(t[n++]=i),e=a}return t[n]=e,this._n=n+1,this}valueOf(){const e=this._partials;let t,n,r,s=this._n,a=0;if(s>0){for(a=e[--s];s>0&&(t=a,n=e[--s],a=t+n,r=n-(a-t),!r););s>0&&(r<0&&e[s-1]<0||r>0&&e[s-1]>0)&&(n=2*r,t=a+n,n==t-a&&(a=t))}return a}}var jr=1e-6,Kr=Math.PI,qr=2*Kr,Xr=180/Kr,Yr=Kr/180,Jr=Math.abs,Zr=(Math.atan,Math.atan2,Math.cos),Qr=(Math.ceil,Math.exp,Math.floor,Math.hypot,Math.log,Math.pow,Math.sin),es=(Math.sign,Math.sqrt);function ts(){}Math.tan;var ns,rs,ss,as,is=new Hr,os=new Hr,ls={point:ts,lineStart:ts,lineEnd:ts,polygonStart:function(){ls.lineStart=us,ls.lineEnd=ds},polygonEnd:function(){ls.lineStart=ls.lineEnd=ls.point=ts,is.add(Jr(os)),os=new Hr},result:function(){var e=is/2;return is=new Hr,e}};function us(){ls.point=cs}function cs(e,t){ls.point=hs,ns=ss=e,rs=as=t}function hs(e,t){os.add(as*e-ss*t),ss=e,as=t}function ds(){hs(ns,rs)}const ps=ls;var fs=1/0,gs=fs,ms=-fs,bs=ms;const ys={point:function(e,t){e<fs&&(fs=e),e>ms&&(ms=e),t<gs&&(gs=t),t>bs&&(bs=t)},lineStart:ts,lineEnd:ts,polygonStart:ts,polygonEnd:ts,result:function(){var e=[[fs,gs],[ms,bs]];return ms=bs=-(gs=fs=1/0),e}};var xs,vs,ws,ks,Is=0,$s=0,Ns=0,Cs=0,Ss=0,Es=0,Ts=0,As=0,Rs=0,_s={point:Fs,lineStart:Ds,lineEnd:Ls,polygonStart:function(){_s.lineStart=zs,_s.lineEnd=Bs},polygonEnd:function(){_s.point=Fs,_s.lineStart=Ds,_s.lineEnd=Ls},result:function(){var e=Rs?[Ts/Rs,As/Rs]:Es?[Cs/Es,Ss/Es]:Ns?[Is/Ns,$s/Ns]:[NaN,NaN];return Is=$s=Ns=Cs=Ss=Es=Ts=As=Rs=0,e}};function Fs(e,t){Is+=e,$s+=t,++Ns}function Ds(){_s.point=Ms}function Ms(e,t){_s.point=Os,Fs(ws=e,ks=t)}function Os(e,t){var n=e-ws,r=t-ks,s=es(n*n+r*r);Cs+=s*(ws+e)/2,Ss+=s*(ks+t)/2,Es+=s,Fs(ws=e,ks=t)}function Ls(){_s.point=Fs}function zs(){_s.point=Ps}function Bs(){Ws(xs,vs)}function Ps(e,t){_s.point=Ws,Fs(xs=ws=e,vs=ks=t)}function Ws(e,t){var n=e-ws,r=t-ks,s=es(n*n+r*r);Cs+=s*(ws+e)/2,Ss+=s*(ks+t)/2,Es+=s,Ts+=(s=ks*e-ws*t)*(ws+e),As+=s*(ks+t),Rs+=3*s,Fs(ws=e,ks=t)}const Vs=_s;function Us(e){this._context=e}Us.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._context.moveTo(e,t),this._point=1;break;case 1:this._context.lineTo(e,t);break;default:this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,qr)}},result:ts};var Gs,Hs,js,Ks,qs,Xs=new Hr,Ys={point:ts,lineStart:function(){Ys.point=Js},lineEnd:function(){Gs&&Zs(Hs,js),Ys.point=ts},polygonStart:function(){Gs=!0},polygonEnd:function(){Gs=null},result:function(){var e=+Xs;return Xs=new Hr,e}};function Js(e,t){Ys.point=Zs,Hs=Ks=e,js=qs=t}function Zs(e,t){Ks-=e,qs-=t,Xs.add(es(Ks*Ks+qs*qs)),Ks=e,qs=t}const Qs=Ys;function ea(){this._string=[]}function ta(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}function na(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function ra(e){if(t=e.length){for(var t,n,r=0,s=e[0];++r<t;)s.n=n=e[r],n.p=s,s=n;s.n=n=e[0],n.p=s}}ea.prototype={_radius:4.5,_circle:ta(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._string.push("M",e,",",t),this._point=1;break;case 1:this._string.push("L",e,",",t);break;default:null==this._circle&&(this._circle=ta(this._radius)),this._string.push("M",e,",",t,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}};var sa=1e9,aa=-sa;function ia(e,t,n,r){function s(s,a){return e<=s&&s<=n&&t<=a&&a<=r}function a(s,a,o,u){var c=0,h=0;if(null==s||(c=i(s,o))!==(h=i(a,o))||l(s,a)<0^o>0)do{u.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+o+4)%4)!==h);else u.point(a[0],a[1])}function i(r,s){return Jr(r[0]-e)<jr?s>0?0:3:Jr(r[0]-n)<jr?s>0?2:1:Jr(r[1]-t)<jr?s>0?1:0:s>0?3:2}function o(e,t){return l(e.x,t.x)}function l(e,t){var n=i(e,1),r=i(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(i){var l,u,c,h,d,p,f,g,m,b,y,x,v,w=i,k=(v=[],{point:function(e,t,n){x.push([e,t,n])},lineStart:function(){v.push(x=[])},lineEnd:ts,rejoin:function(){v.length>1&&v.push(v.pop().concat(v.shift()))},result:function(){var e=v;return v=[],x=null,e}}),I={point:$,lineStart:function(){I.point=N,u&&u.push(c=[]),b=!0,m=!1,f=g=NaN},lineEnd:function(){l&&(N(h,d),p&&m&&k.rejoin(),l.push(k.result())),I.point=$,m&&w.lineEnd()},polygonStart:function(){w=k,l=[],u=[],y=!0},polygonEnd:function(){var t,n=function(){for(var t=0,n=0,s=u.length;n<s;++n)for(var a,i,o=u[n],l=1,c=o.length,h=o[0],d=h[0],p=h[1];l<c;++l)a=d,i=p,d=(h=o[l])[0],p=h[1],i<=r?p>r&&(d-a)*(r-i)>(p-i)*(e-a)&&++t:p<=r&&(d-a)*(r-i)<(p-i)*(e-a)&&--t;return t}(),s=y&&n,h=(t=l,l=Array.from(function*(e){for(const t of e)yield*t}(t))).length;(s||h)&&(i.polygonStart(),s&&(i.lineStart(),a(null,null,1,i),i.lineEnd()),h&&function(e,t,n,r,s){var a,i,o=[],l=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n,r,i,u=e[0],c=e[t];if(i=c,Jr((r=u)[0]-i[0])<jr&&Jr(r[1]-i[1])<jr){if(!u[2]&&!c[2]){for(s.lineStart(),a=0;a<t;++a)s.point((u=e[a])[0],u[1]);return void s.lineEnd()}c[0]+=2e-6}o.push(n=new na(u,e,null,!0)),l.push(n.o=new na(u,null,n,!1)),o.push(n=new na(c,e,null,!1)),l.push(n.o=new na(c,null,n,!0))}})),o.length){for(l.sort(t),ra(o),ra(l),a=0,i=l.length;a<i;++a)l[a].e=n=!n;for(var u,c,h=o[0];;){for(var d=h,p=!0;d.v;)if((d=d.n)===h)return;u=d.z,s.lineStart();do{if(d.v=d.o.v=!0,d.e){if(p)for(a=0,i=u.length;a<i;++a)s.point((c=u[a])[0],c[1]);else r(d.x,d.n.x,1,s);d=d.n}else{if(p)for(u=d.p.z,a=u.length-1;a>=0;--a)s.point((c=u[a])[0],c[1]);else r(d.x,d.p.x,-1,s);d=d.p}u=(d=d.o).z,p=!p}while(!d.v);s.lineEnd()}}}(l,o,n,a,i),i.polygonEnd()),w=i,l=u=c=null}};function $(e,t){s(e,t)&&w.point(e,t)}function N(a,i){var o=s(a,i);if(u&&c.push([a,i]),b)h=a,d=i,p=o,b=!1,o&&(w.lineStart(),w.point(a,i));else if(o&&m)w.point(a,i);else{var l=[f=Math.max(aa,Math.min(sa,f)),g=Math.max(aa,Math.min(sa,g))],x=[a=Math.max(aa,Math.min(sa,a)),i=Math.max(aa,Math.min(sa,i))];!function(e,t,n,r,s,a){var i,o=e[0],l=e[1],u=0,c=1,h=t[0]-o,d=t[1]-l;if(i=n-o,h||!(i>0)){if(i/=h,h<0){if(i<u)return;i<c&&(c=i)}else if(h>0){if(i>c)return;i>u&&(u=i)}if(i=s-o,h||!(i<0)){if(i/=h,h<0){if(i>c)return;i>u&&(u=i)}else if(h>0){if(i<u)return;i<c&&(c=i)}if(i=r-l,d||!(i>0)){if(i/=d,d<0){if(i<u)return;i<c&&(c=i)}else if(d>0){if(i>c)return;i>u&&(u=i)}if(i=a-l,d||!(i<0)){if(i/=d,d<0){if(i>c)return;i>u&&(u=i)}else if(d>0){if(i<u)return;i<c&&(c=i)}return u>0&&(e[0]=o+u*h,e[1]=l+u*d),c<1&&(t[0]=o+c*h,t[1]=l+c*d),!0}}}}}(l,x,e,t,n,r)?o&&(w.lineStart(),w.point(a,i),y=!1):(m||(w.lineStart(),w.point(l[0],l[1])),w.point(x[0],x[1]),o||w.lineEnd(),y=!1)}f=a,g=i,m=o}return I}}function oa(){}function la(e,t,n){var r=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=r&&e.clipExtent(null),Gr(n,e.stream(ys)),t(ys.result()),null!=r&&e.clipExtent(r),e}function ua(e,t,n){return la(e,(function(n){var r=t[1][0]-t[0][0],s=t[1][1]-t[0][1],a=Math.min(r/(n[1][0]-n[0][0]),s/(n[1][1]-n[0][1])),i=+t[0][0]+(r-a*(n[1][0]+n[0][0]))/2,o=+t[0][1]+(s-a*(n[1][1]+n[0][1]))/2;e.scale(150*a).translate([i,o])}),n)}function ca(){var e,t,n,r,s,a,i,o,l=1,u=0,c=0,h=1,d=1,p=0,f=null,g=1,m=1,b=(o={point:function(e,t){var n=v([e,t]);this.stream.point(n[0],n[1])}},function(e){var t=new oa;for(var n in o)t[n]=o[n];return t.stream=e,t}),y=zr;function x(){return g=l*h,m=l*d,a=i=null,v}function v(n){var r=n[0]*g,s=n[1]*m;if(p){var a=s*e-r*t;r=r*e+s*t,s=a}return[r+u,s+c]}return v.invert=function(n){var r=n[0]-u,s=n[1]-c;if(p){var a=s*e+r*t;r=r*e-s*t,s=a}return[r/g,s/m]},v.stream=function(e){return a&&i===e?a:a=b(y(i=e))},v.postclip=function(e){return arguments.length?(y=e,f=n=r=s=null,x()):y},v.clipExtent=function(e){return arguments.length?(y=null==e?(f=n=r=s=null,zr):ia(f=+e[0][0],n=+e[0][1],r=+e[1][0],s=+e[1][1]),x()):null==f?null:[[f,n],[r,s]]},v.scale=function(e){return arguments.length?(l=+e,x()):l},v.translate=function(e){return arguments.length?(u=+e[0],c=+e[1],x()):[u,c]},v.angle=function(n){return arguments.length?(t=Qr(p=n%360*Yr),e=Zr(p),x()):p*Xr},v.reflectX=function(e){return arguments.length?(h=e?-1:1,x()):h<0},v.reflectY=function(e){return arguments.length?(d=e?-1:1,x()):d<0},v.fitExtent=function(e,t){return ua(v,e,t)},v.fitSize=function(e,t){return function(e,t,n){return ua(e,[[0,0],t],n)}(v,e,t)},v.fitWidth=function(e,t){return function(e,t,n){return la(e,(function(n){var r=+t,s=r/(n[1][0]-n[0][0]),a=(r-s*(n[1][0]+n[0][0]))/2,i=-s*n[0][1];e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v.fitHeight=function(e,t){return function(e,t,n){return la(e,(function(n){var r=+t,s=r/(n[1][1]-n[0][1]),a=-s*n[0][0],i=(r-s*(n[1][1]+n[0][1]))/2;e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v}function ha(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function da(e){let t=e,n=e;function r(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)<0?r=a+1:s=a}return r}return 1===e.length&&(t=(t,n)=>e(t)-n,n=function(e){return(t,n)=>ha(e(t),n)}(e)),{left:r,center:function(e,n,s,a){null==s&&(s=0),null==a&&(a=e.length);const i=r(e,n,s,a-1);return i>s&&t(e[i-1],n)>-t(e[i],n)?i-1:i},right:function(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)>0?s=a:r=a+1}return r}}}oa.prototype={constructor:oa,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};const pa=da(ha),fa=pa.right,ga=(pa.left,da((function(e){return null===e?NaN:+e})).center,fa);function ma(e,t){var n,r=t?t.length:0,s=e?Math.min(r,e.length):0,a=new Array(s),i=new Array(r);for(n=0;n<s;++n)a[n]=va(e[n],t[n]);for(;n<r;++n)i[n]=t[n];return function(e){for(n=0;n<s;++n)i[n]=a[n](e);return i}}function ba(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}function ya(e,t){var n,r={},s={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?r[n]=va(e[n],t[n]):s[n]=t[n];return function(e){for(n in r)s[n]=r[n](e);return s}}function xa(e,t){t||(t=[]);var n,r=e?Math.min(t.length,e.length):0,s=t.slice();return function(a){for(n=0;n<r;++n)s[n]=e[n]*(1-a)+t[n]*a;return s}}function va(e,t){var n,r,s=typeof t;return null==t||"boolean"===s?Sn(t):("number"===s?Lt:"string"===s?(n=pn(t))?(t=n,Tn):Fn:t instanceof pn?Tn:t instanceof Date?ba:(r=t,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(t)?ma:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?ya:Lt:xa))(e,t)}function wa(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function ka(e){return+e}var Ia=[0,1];function $a(e){return e}function Na(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:(n=isNaN(t)?NaN:.5,function(){return n});var n}function Ca(e,t,n){var r=e[0],s=e[1],a=t[0],i=t[1];return s<r?(r=Na(s,r),a=n(i,a)):(r=Na(r,s),a=n(a,i)),function(e){return a(r(e))}}function Sa(e,t,n){var r=Math.min(e.length,t.length)-1,s=new Array(r),a=new Array(r),i=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<r;)s[i]=Na(e[i],e[i+1]),a[i]=n(t[i],t[i+1]);return function(t){var n=ga(e,t,1,r)-1;return a[n](s[n](t))}}function Ea(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function Ta(){return function(){var e,t,n,r,s,a,i=Ia,o=Ia,l=va,u=$a;function c(){var e,t,n,l=Math.min(i.length,o.length);return u!==$a&&(e=i[0],t=i[l-1],e>t&&(n=e,e=t,t=n),u=function(n){return Math.max(e,Math.min(t,n))}),r=l>2?Sa:Ca,s=a=null,h}function h(t){return null==t||isNaN(t=+t)?n:(s||(s=r(i.map(e),o,l)))(e(u(t)))}return h.invert=function(n){return u(t((a||(a=r(o,i.map(e),Lt)))(n)))},h.domain=function(e){return arguments.length?(i=Array.from(e,ka),c()):i.slice()},h.range=function(e){return arguments.length?(o=Array.from(e),c()):o.slice()},h.rangeRound=function(e){return o=Array.from(e),l=wa,c()},h.clamp=function(e){return arguments.length?(u=!!e||$a,c()):u!==$a},h.interpolate=function(e){return arguments.length?(l=e,c()):l},h.unknown=function(e){return arguments.length?(n=e,h):n},function(n,r){return e=n,t=r,c()}}()($a,$a)}function Aa(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}var Ra,_a=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Fa(e){if(!(t=_a.exec(e)))throw new Error("invalid format: "+e);var t;return new Da({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function Da(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function Ma(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function Oa(e){return(e=Ma(Math.abs(e)))?e[1]:NaN}function La(e,t){var n=Ma(e,t);if(!n)return e+"";var r=n[0],s=n[1];return s<0?"0."+new Array(-s).join("0")+r:r.length>s+1?r.slice(0,s+1)+"."+r.slice(s+1):r+new Array(s-r.length+2).join("0")}Fa.prototype=Da.prototype,Da.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const za={"%":(e,t)=>(100*e).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>La(100*e,t),r:La,s:function(e,t){var n=Ma(e,t);if(!n)return e+"";var r=n[0],s=n[1],a=s-(Ra=3*Math.max(-8,Math.min(8,Math.floor(s/3))))+1,i=r.length;return a===i?r:a>i?r+new Array(a-i+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+new Array(1-a).join("0")+Ma(e,Math.max(0,t+a-1))[0]},X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function Ba(e){return e}var Pa,Wa,Va,Ua=Array.prototype.map,Ga=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function Ha(e){var t=e.domain;return e.ticks=function(e){var n=t();return function(e,t,n){var r,s,a,i,o=-1;if(n=+n,(e=+e)==(t=+t)&&n>0)return[e];if((r=t<e)&&(s=e,e=t,t=s),0===(i=br(e,t,n))||!isFinite(i))return[];if(i>0){let n=Math.round(e/i),r=Math.round(t/i);for(n*i<e&&++n,r*i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)*i}else{i=-i;let n=Math.round(e*i),r=Math.round(t*i);for(n/i<e&&++n,r/i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)/i}return r&&a.reverse(),a}(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var r=t();return function(e,t,n,r){var s,a=yr(e,t,n);switch((r=Fa(null==r?",f":r)).type){case"s":var i=Math.max(Math.abs(e),Math.abs(t));return null!=r.precision||isNaN(s=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Oa(t)/3)))-Oa(Math.abs(e)))}(a,i))||(r.precision=s),Va(r,i);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(s=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Oa(t)-Oa(e))+1}(a,Math.max(Math.abs(e),Math.abs(t))))||(r.precision=s-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(s=function(e){return Math.max(0,-Oa(Math.abs(e)))}(a))||(r.precision=s-2*("%"===r.type))}return Wa(r)}(r[0],r[r.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var r,s,a=t(),i=0,o=a.length-1,l=a[i],u=a[o],c=10;for(u<l&&(s=l,l=u,u=s,s=i,i=o,o=s);c-- >0;){if((s=br(l,u,n))===r)return a[i]=l,a[o]=u,t(a);if(s>0)l=Math.floor(l/s)*s,u=Math.ceil(u/s)*s;else{if(!(s<0))break;l=Math.ceil(l*s)/s,u=Math.floor(u*s)/s}r=s}return e},e}function ja(){var e=Ta();return e.copy=function(){return Ea(e,ja())},Aa.apply(e,arguments),Ha(e)}function Ka(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}function qa(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}Pa=function(e){var t,n,r=void 0===e.grouping||void 0===e.thousands?Ba:(t=Ua.call(e.grouping,Number),n=e.thousands+"",function(e,r){for(var s=e.length,a=[],i=0,o=t[0],l=0;s>0&&o>0&&(l+o+1>r&&(o=Math.max(1,r-l)),a.push(e.substring(s-=o,s+o)),!((l+=o+1)>r));)o=t[i=(i+1)%t.length];return a.reverse().join(n)}),s=void 0===e.currency?"":e.currency[0]+"",a=void 0===e.currency?"":e.currency[1]+"",i=void 0===e.decimal?".":e.decimal+"",o=void 0===e.numerals?Ba:function(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}(Ua.call(e.numerals,String)),l=void 0===e.percent?"%":e.percent+"",u=void 0===e.minus?"−":e.minus+"",c=void 0===e.nan?"NaN":e.nan+"";function h(e){var t=(e=Fa(e)).fill,n=e.align,h=e.sign,d=e.symbol,p=e.zero,f=e.width,g=e.comma,m=e.precision,b=e.trim,y=e.type;"n"===y?(g=!0,y="g"):za[y]||(void 0===m&&(m=12),b=!0,y="g"),(p||"0"===t&&"="===n)&&(p=!0,t="0",n="=");var x="$"===d?s:"#"===d&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",v="$"===d?a:/[%p]/.test(y)?l:"",w=za[y],k=/[defgprs%]/.test(y);function I(e){var s,a,l,d=x,I=v;if("c"===y)I=w(e)+I,e="";else{var $=(e=+e)<0||1/e<0;if(e=isNaN(e)?c:w(Math.abs(e),m),b&&(e=function(e){e:for(var t,n=e.length,r=1,s=-1;r<n;++r)switch(e[r]){case".":s=t=r;break;case"0":0===s&&(s=r),t=r;break;default:if(!+e[r])break e;s>0&&(s=0)}return s>0?e.slice(0,s)+e.slice(t+1):e}(e)),$&&0==+e&&"+"!==h&&($=!1),d=($?"("===h?h:u:"-"===h||"("===h?"":h)+d,I=("s"===y?Ga[8+Ra/3]:"")+I+($&&"("===h?")":""),k)for(s=-1,a=e.length;++s<a;)if(48>(l=e.charCodeAt(s))||l>57){I=(46===l?i+e.slice(s+1):e.slice(s))+I,e=e.slice(0,s);break}}g&&!p&&(e=r(e,1/0));var N=d.length+e.length+I.length,C=N<f?new Array(f-N+1).join(t):"";switch(g&&p&&(e=r(C+e,C.length?f-I.length:1/0),C=""),n){case"<":e=d+e+I+C;break;case"=":e=d+C+e+I;break;case"^":e=C.slice(0,N=C.length>>1)+d+e+I+C.slice(N);break;default:e=C+d+e+I}return o(e)}return m=void 0===m?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),I.toString=function(){return e+""},I}return{format:h,formatPrefix:function(e,t){var n=h(((e=Fa(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(Oa(t)/3))),s=Math.pow(10,-r),a=Ga[8+r/3];return function(e){return n(s*e)+a}}}}({thousands:",",grouping:[3],currency:["$",""]}),Wa=Pa.format,Va=Pa.formatPrefix;const Xa=qa(Ka("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));function Ya(e,t,n){this.k=e,this.x=t,this.y=n}qa(Ka("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),qa(Ka("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),qa(Ka("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Ya.prototype={constructor:Ya,scale:function(e){return 1===e?this:new Ya(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new Ya(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new Ya(1,0,0),Ya.prototype;class Ja{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Za{refCount(e){return Qa("refCount")}incRef(e){return Qa("incRef")}timerAvailable(){return!0}time(e){return Qa("time")}read(e){return Qa("read")}readSync(e){return Qa("readSync")}numDataIds(){return Qa("numDataIds")}disposeData(e,t){return Qa("disposeData")}write(e,t,n){return Qa("write")}move(e,t,n,r,s){return Qa("move")}memory(){return Qa("memory")}floatPrecision(){return Qa("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Qa("dispose")}}function Qa(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ei(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function ti(e,t,n){return Math.max(e,Math.min(t,n))}function ni(e){return e%2==0?e:e+1}function ri(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function si(e,t,n=""){ri(li(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ai(e){ri(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ii(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||xi(e)&&!n)for(let r=0;r<e.length;++r)ii(e[r],t,n);else t.push(e);return t}function oi(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function li(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ui(e){return e%1==0}function ci(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function hi(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function di(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function pi(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function fi(e,t){const n=t.length;return ri((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ri(e.every((e=>ui(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function gi(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:fi(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function mi(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function bi(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function yi(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function xi(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function vi(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function wi(e){return"string"==typeof e||e instanceof String}function ki(e){return"number"==typeof e}function Ii(e){return Array.isArray(e)?Ii(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":ki(e)?"float32":wi(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function $i(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ni(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ci(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Si(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Si(e+t*o,i,n,r)}return s}function Ei(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Si(0,e,t,n)}function Ti(e,t){const n=Ai(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Ai(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ri(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ei(e,new Float32Array(n));if("int32"===t)return Ei(e,new Int32Array(n));if("bool"===t)return Ei(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _i(e){e.forEach((t=>{ri(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Fi(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Di(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Mi(e){return e&&e.then&&"function"==typeof e.then}class Oi{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Li,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Mi(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Li(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function zi(){return Pi}let Bi,Pi=null;function Wi(){if(null==Bi){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Bi=e}return Bi}function Vi(e,t){const n=function(){const e=Wi();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ui="Abs",Gi="Acos",Hi="Acosh",ji="Add",Ki="AddN",qi="All",Xi="Any",Yi="ArgMax",Ji="ArgMin",Zi="Asin",Qi="Asinh",eo="Atan",to="Atanh",no="Atan2",ro="AvgPool",so="AvgPoolGrad",ao="AvgPool3D",io="AvgPool3DGrad",oo="BatchMatMul",lo="BatchToSpaceND",uo="Bincount",co="Cast",ho="Ceil",po="ClipByValue",fo="Complex",go="ComplexAbs",mo="Concat",bo="Conv2D",yo="Conv2DBackpropFilter",xo="Conv2DBackpropInput",vo="Conv3D",wo="Conv3DBackpropFilterV2",ko="Conv3DBackpropInputV2",Io="Cos",$o="Cosh",No="Cumsum",Co="CropAndResize",So="DenseBincount",Eo="DepthToSpace",To="DepthwiseConv2dNative",Ao="DepthwiseConv2dNativeBackpropFilter",Ro="DepthwiseConv2dNativeBackpropInput",_o="Diag",Fo="Dilation2D",Do="Dilation2DBackpropInput",Mo="Dilation2DBackpropFilter",Oo="RealDiv",Lo="Einsum",zo="Elu",Bo="EluGrad",Po="Erf",Wo="Equal",Vo="Exp",Uo="ExpandDims",Go="Expm1",Ho="FFT",jo="Fill",Ko="FlipLeftRight",qo="Floor",Xo="FloorDiv",Yo="FusedBatchNorm",Jo="GatherV2",Zo="GatherNd",Qo="Greater",el="GreaterEqual",tl="Identity",nl="IFFT",rl="Imag",sl="IsFinite",al="IsInf",il="IsNan",ol="LeakyRelu",ll="Less",ul="LessEqual",cl="LinSpace",hl="Log",dl="Log1p",pl="LogicalAnd",fl="LogicalNot",gl="LogicalOr",ml="LRN",bl="LRNGrad",yl="Max",xl="Maximum",vl="MaxPool",wl="MaxPoolGrad",kl="MaxPool3D",Il="MaxPool3DGrad",$l="MaxPoolWithArgmax",Nl="Mean",Cl="Min",Sl="Minimum",El="MirrorPad",Tl="Mod",Al="Multinomial",Rl="Multiply",_l="Neg",Fl="NotEqual",Dl="NonMaxSuppressionV3",Ml="NonMaxSuppressionV4",Ol="NonMaxSuppressionV5",Ll="OnesLike",zl="OneHot",Bl="Pack",Pl="PadV2",Wl="Pow",Vl="Prelu",Ul="Prod",Gl="Range",Hl="Real",jl="Reciprocal",Kl="Relu",ql="Reshape",Xl="ResizeNearestNeighbor",Yl="ResizeNearestNeighborGrad",Jl="ResizeBilinear",Zl="ResizeBilinearGrad",Ql="Relu6",eu="Reverse",tu="Round",nu="Rsqrt",ru="ScatterNd",su="Select",au="Selu",iu="Slice",ou="Sin",lu="Sinh",uu="Sign",cu="Sigmoid",hu="Softplus",du="Sqrt",pu="Sum",fu="SpaceToBatchND",gu="SplitV",mu="Softmax",bu="SparseFillEmptyRows",yu="SparseReshape",xu="SparseToDense",vu="SquaredDifference",wu="Square",ku="StridedSlice",Iu="Sub",$u="Tan",Nu="Tanh",Cu="Tile",Su="TopK",Eu="Transform",Tu="Transpose",Au="Unique",Ru="Unpack",_u="UnsortedSegmentSum",Fu="ZerosLike",Du="Step",Mu="RotateWithOffset",Ou="_FusedMatMul",Lu="FusedConv2D",zu="FusedDepthwiseConv2D",Bu=Vi("kernelRegistry",(()=>new Map)),Pu=Vi("gradRegistry",(()=>new Map));function Wu(e,t){const n=ju(e,t);return Bu.get(n)}function Vu(e){return Pu.get(e)}function Uu(e){const t=Bu.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Gu(e){const{kernelName:t,backendName:n}=e,r=ju(t,n);Bu.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Bu.set(r,e)}function Hu(e){const{kernelName:t}=e;Pu.has(t)&&zi().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Pu.set(t,e)}function ju(e,t){return`${t}_${e}`}function Ku(e,t){return"string"===t?Yu(e):qu([e],t)}function qu(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ii(e)),zi().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Xu(){return zi().platform.now()}function Yu(e,t="utf-8"){return t=t||"utf-8",zi().platform.encode(e,t)}function Ju(e,t="utf-8"){return t=t||"utf-8",zi().platform.decode(e,t)}class Zu{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ec)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Xu();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Xu()-i})}if(zi().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Qu(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Qu(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ec{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?hi(`${r}ms`,9):r.error,o=hi(e,25),l=t.rank,u=t.size,c=hi(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function tc(e,t,n,r){const s=Ci(t),a=function(e,t,n,r){const s=oi(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?ac(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],nc(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=sc(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function nc(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:wi(e)?`'${e}'`:"bool"===n?rc(e):parseFloat(e.toFixed(7)).toString(),hi(r,t)}function rc(e){return 0===e?"false":"true"}function sc(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[nc(ac(e)[0],0,n)]:"bool"===n?[rc(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ac(r),a=ac(a)),["["+r.map(((e,t)=>nc(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>nc(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ac(e):Array.from(e)).map(((e,t)=>nc(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...sc(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...sc(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...sc(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function ac(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class ic{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=oi(e),null!=n){const e=n.length;ri(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||bi(t,this.size),this.strides=Ci(e)}set(e,...t){0===t.length&&(t=[0]),ri(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return oc().makeTensor(this.values,this.shape,this.dtype)}}let oc=null,lc=null,uc=null;class cc{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oi(e),this.strides=Ci(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return lc.buffer(this.shape,this.dtype,e)}bufferSync(){return lc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ei(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ei(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=oc().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Ju(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=oc().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ju(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await oc().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(oc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return lc.print(this,e)}clone(){return this.throwIfDisposed(),lc.clone(this)}toString(e=!1){return tc(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),lc.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),oc().makeVariable(this,e,t,n)}}function hc(){return Vi("Tensor",(()=>cc))}Object.defineProperty(cc,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),hc();class dc extends cc{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!li(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);oc().disposeTensor(this),this.dataId=e.dataId,oc().incRef(this,null)}dispose(){oc().disposeVariable(this),this.isDisposedInternal=!0}}var pc,fc,gc,mc,bc;Object.defineProperty(dc,Symbol.hasInstance,{value:e=>e instanceof cc&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(pc||(pc={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(fc||(fc={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(gc||(gc={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(mc||(mc={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(bc||(bc={}));const yc={float32:mc,int32:fc,bool:gc,complex64:bc};function xc(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return yc[e][t]}function vc(e){return xc(e,"int32")}function wc(e,t){if(e.dtype===t.dtype)return[e,t];const n=xc(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function kc(e,t){return t.some((t=>t.id===e.id))}function Ic(e){const t=[];return $c(e,t,new Set),t}function $c(e,t,n){if(null==e)return;if(e instanceof cc)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),$c(r,t,n))}}function Nc(e){return null!=e.kernelName}class Cc{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Sc{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Cc}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zu(this.backendInstance),!0}setupRegisteredKernels(){Uu(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Uu(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Za||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Sc.nextTensorId++}nextVariableId(){return Sc.nextVariableId++}clone(e){const t=Tc.runKernel(tl,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Tc.runKernel(co,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==Wu(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Nc(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Nc(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Wu(t,this.backendName);ri(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Nc(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Vu(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ri(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&wi(e[0])&&(s=e.map((e=>Yu(e))));const a=r.write(s,t,n),i=new cc(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new cc(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new dc(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*vi(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof dc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*vi(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Vu(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Ai(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ic(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ri(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ri(s instanceof cc,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Ti(oi(e),"float32");return Tc.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!li(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Ac);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return ri($i(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ri(t.every((e=>e instanceof cc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ri(n.value instanceof cc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ri($i(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ri(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ri(a.every((e=>e instanceof cc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Xu(),n=await this.backend.time(e);return n.wallMs=Xu()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Cc;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Ec(){const e=Wi();if(null==e._tfengine){const t=new Oi(e);e._tfengine=new Sc(t)}var t;return t=e._tfengine.ENV,Pi=t,oc=()=>e._tfengine,e._tfengine}Sc.nextTensorId=0,Sc.nextVariableId=0;const Tc=Ec();function Ac(e,t){const n={a:e,b:t};return Tc.runKernel(ji,n)}function Rc(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function _c(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Fc=zi();function Dc(e,t){let n=e;if(xi(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||xi(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&zi().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Mc(e,r,[]),r}function Mc(e,t,n){if(n=n||[],!Array.isArray(e)&&!xi(e))return void ri(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ri(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ri(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Mc(e[t],r,n.concat(t))}function Oc(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Lc(e,t,n,r="numeric"){if(e instanceof cc)return Oc(r,e.dtype,t,n),e;let s=Ii(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Oc(r,s,t,n),null==e||!xi(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Dc(e,s);xi(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?qu(e,s):ii(e,[],!0);return Tc.makeTensor(i,a,s)}function zc(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Lc(e,`${t}[${s}]`,n,r)))}function Bc(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Tc.startScope(n);try{const t=r(...e);return Mi(t)&&console.error("Cannot return a Promise inside of tidy."),Tc.endScope(t),t}catch(e){throw Tc.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Fc.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Fc.registerFlag("IS_BROWSER",(()=>_c())),Fc.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Fc.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Fc.registerFlag("PROD",(()=>!1)),Fc.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Fc.getBool("DEBUG"))),Fc.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Fc.registerFlag("IS_TEST",(()=>!1)),Fc.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Fc.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Pc=Bc({complex_:function(e,t){const n=Lc(e,"real","complex"),r=Lc(t,"imag","complex");si(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Tc.runKernel(fo,s)}});function Wc(e,t,n,r){if(null==r&&(r=Ii(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xi(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){_i(t);const e=oi(t),r=oi(n);ri(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==oi(t.slice(e));ri(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return xi(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?qu(e,r):ii(e,[],!0),Tc.makeTensor(e,t,r)}function Vc(e,t,n){return Wc(e,t,Dc(e,n),n)}async function Uc(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Gc(await Promise.all(r)),specs:n}}function Gc(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Hc="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function jc(e){return Hc?Buffer.byteLength(e):new Blob([e]).size}function Kc(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function qc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:jc(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:jc(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Xc{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Xc.instance&&(Xc.instance=new Xc),Xc.instance}static registerSaveRouter(e){Xc.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Xc.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Xc.getHandlers(e,"save")}static getLoadHandlers(e,t){return Xc.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Xc.getInstance().loadRouters:Xc.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Yc="tensorflowjs",Jc="models_store",Zc="model_info_store";function Qc(){if(!zi().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function eh(e){const t=e.result;t.createObjectStore(Jc,{keyPath:"modelPath"}),t.createObjectStore(Zc,{keyPath:"modelPath"})}class th{constructor(e){if(this.indexedDB=Qc(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Yc,1);r.onupgradeneeded=()=>eh(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Jc,"readonly"),r=t.objectStore(Jc).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=qc(t),a=s.transaction(Zc,"readwrite");let i=a.objectStore(Zc);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Jc,"readwrite");const o=l.objectStore(Jc).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Zc);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}th.URL_SCHEME="indexeddb://";const nh=e=>{return zi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(th.URL_SCHEME)?(t=e.slice(th.URL_SCHEME.length),new th(t)):null;var t};Xc.registerSaveRouter(nh),Xc.registerLoadRouter(nh);class rh{constructor(){this.indexedDB=Qc()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Yc,1);n.onupgradeneeded=()=>eh(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Zc,"readonly"),a=s.objectStore(Zc).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(th.URL_SCHEME)?t.slice(th.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Yc,1);r.onupgradeneeded=()=>eh(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Zc,"readwrite"),i=a.objectStore(Zc),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Jc,"readwrite");const r=l.objectStore(Jc).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const sh="/",ah="tensorflowjs_models",ih="info",oh="model_topology",lh="weight_specs",uh="weight_data",ch="model_metadata";function hh(e){return{info:[ah,e,ih].join(sh),topology:[ah,e,oh].join(sh),weightSpecs:[ah,e,lh].join(sh),weightData:[ah,e,uh].join(sh),modelMetadata:[ah,e,ch].join(sh)}}function dh(e){const t=e.split(sh);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(sh)}class ph{constructor(e){if(!zi().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hh(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=qc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Hc)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Hc){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ph.URL_SCHEME="localstorage://";const fh=e=>{return zi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ph.URL_SCHEME)?(t=e.slice(ph.URL_SCHEME.length),new ph(t)):null;var t};Xc.registerSaveRouter(fh),Xc.registerLoadRouter(fh);class gh{constructor(){ri(zi().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ri("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ah+sh,n=sh+ih;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[dh(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=hh(e=(t=e).startsWith(ph.URL_SCHEME)?t.slice(ph.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class mh{constructor(){this.managers={}}static getInstance(){return null==mh.instance&&(mh.instance=new mh),mh.instance}static registerManager(e,t){ri(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),ri(e.length>0,(()=>"scheme must not be an empty string."));const n=mh.getInstance();ri(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class bh{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(zi().get("IS_BROWSER")){zi().setPlatform("browser",new bh);try{mh.registerManager(ph.URL_SCHEME,new gh)}catch(e){}try{mh.registerManager(th.URL_SCHEME,new rh)}catch(e){}}let yh;function xh(e,t="float32",n){return t=t||"float32",_i(e),new ic(e,t,n)}zi().get("IS_NODE")&&zi().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=zi().global.fetch?zi().global.fetch(e,t):(null==yh&&(yh=n(410)),yh(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const vh=Bc({cast_:function(e,t){const n=Lc(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Tc.runKernel(co,r,s)}}),wh=Bc({clone_:function(e){const t={x:Lc(e,"x","clone","string_or_numeric")};return Tc.runKernel(tl,t)}});function kh(e){return new Promise((e=>setTimeout(e))).then(e)}Ec(),lc={buffer:xh,cast:vh,clone:wh,print:function(e,t=!1){console.log(e.toString(t))}};class Ih{constructor(e){if(!zi().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ih.URL_SCHEME)&&(e=e.slice(Ih.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await kh((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await kh((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:qc(e)}}}}function $h(e,t,n,r){!function(e){ri(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ri(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ri(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ri(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Nh(e,t){null==t&&(t={});const n=null==t.fetchFunc?zi().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await $h(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await $h(s,t.onProgress,.5,1)}Ih.URL_SCHEME="downloads://",Xc.registerSaveRouter((e=>zi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ih.URL_SCHEME)?function(e="model"){return new Ih(e)}(e.slice(Ih.URL_SCHEME.length)):null));class Ch{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ri("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=zi().platform.fetch,ri(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ri(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:qc(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Kc(await Nh(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Sh(e){return null!=e.match(Ch.URL_SCHEME_REGEX)}Ch.URL_SCHEME_REGEX=/^https?:\/\//;const Eh=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Sh(e))):Sh(e),n)return function(e,t){return new Ch(e,t)}(e,t)}return null};function Th(e,t,n){const r=e.shape.length;ri(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ri(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)ri(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Ah(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Rh(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function _h(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Fh(e,t,n){return n<=e?n:n-(t-1)}function Dh(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Mh(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Oh(i,l,u,r,e),h=Lh(o,l,u,s,e),d=_h(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Bh(i,r,a,e,t,l),h[t]=Ph(o,s,a,e,t,l),d[t]=zh(a,t,l);return{begin:c,end:h,strides:d}}function Oh(e,t,n,r,s){const a=[...s],i=Dh(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Fh(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Lh(e,t,n,r,s){const a=[...s],i=Dh(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Fh(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=ti(0,a[e],s[e])}return a}function zh(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Bh(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=ti(0,i,l-1),i}function Ph(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?ti(0,i,l):ti(-1,i,l-1),i}function Wh(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Vh(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Uh(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{ri(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ri(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Gh(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Ah(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Ah(o),g=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,g.splice(e,0,1)}));const{begin:m,end:b,strides:y}=Mh(g,d,p,u,c,h,s,a,i);u=m,c=b,h=y;const x=Ah(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const v=Rh(u,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:v,newShape:g,outShape:w}}Xc.registerSaveRouter(Eh),Xc.registerLoadRouter(Eh);class Hh{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class jh{constructor(){this.classNameMap={}}static getMap(){return null==jh.instance&&(jh.instance=new jh),jh.instance}static register(e){jh.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Kh(e){ri(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ri("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ri(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),jh.register(e)}function qh(){return Tc}function Xh(){return Tc.memory()}function Yh(e,t){return Tc.tidy(e,t)}function Jh(e){Ic(e).forEach((e=>e.dispose()))}function Zh(e){return Tc.keep(e)}function Qh(e,t,n=1){return Tc.registerBackend(e,t,n)}function ed(e){return Tc.customGrad(e)}function td(e,t){if((xi(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&xi(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Wc(e,[],[],t)}uc=function(e){zi().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class nd extends Hh{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Jh(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){ri($i(e),(()=>"The f passed in variableGrads(f) must be a function")),ri(null==t||Array.isArray(t)&&t.every((e=>e instanceof dc)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Tc.registeredVariables)t.push(Tc.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;ri((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Tc.gradients(e,t,null,!0);ri(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ri(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Jh(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:td(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(nd,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const rd=Bc({abs_:function(e){const t=Lc(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Tc.runKernel(go,e)}{const e={x:t};return Tc.runKernel(Ui,e)}}}),sd=Bc({add_:function(e,t){let n=Lc(e,"a","add"),r=Lc(t,"b","add");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(ji,s)}}),ad=Bc({all_:function(e,t=null,n=!1){const r={x:Lc(e,"x","all","bool")},s={axis:t,keepDims:n};return Tc.runKernel(qi,r,s)}}),id=Bc({any_:function(e,t=null,n=!1){const r={x:Lc(e,"x","any","bool")},s={axis:t,keepDims:n};return Tc.runKernel(Xi,r,s)}}),od=Bc({argMax_:function(e,t=0){const n={x:Lc(e,"x","argMax")},r={axis:t};return Tc.runKernel(Yi,n,r)}});function ld(e,t,n,r,s="NHWC",a){return hd(e,[...t,e[3]],n,a,r,null,null,vd(s))}function ud(e,t,n,r,s,a,i="channelsLast"){const[o,l]=fd(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return hd(e,u,n,r,s,a,!1,i)}function cd(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=gd(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return dd(e,c,n,r,s,!1,h,a)}function hd(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=fd(n),[b,y]=fd(r),x=md(d,b),v=md(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=pd(e,t,n));const a=e[1];return[bd((e[0]-t+2*r)/n+1,s),bd((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=bd((t-a+d+p)/r+1,o),h=bd((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,a,o),$=i?f*h:f;let N;return"channelsFirst"===o?N=[l,$,k,I]:"channelsLast"===o&&(N=[l,k,I,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function dd(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=gd(n),[v,w,k]=gd(r),I=md(p,v),$=md(f,w),N=md(g,k),{padInfo:C,outDepth:S,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=pd(e,t,r));const i=e[1],o=e[2];return[bd((e[0]-t+2*s)/r+1,a),bd((i-t+2*s)/r+1,a),bd((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,$,N,o),A=a?m*d:m;let R;return"channelsFirst"===i?R=[l,A,S,E,T]:"channelsLast"===i&&(R=[l,S,E,T,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:T,outChannels:A,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function pd(e,t,n,r=1){const s=md(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function fd(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function gd(e){return"number"==typeof e?[e,e,e]:e}function md(e,t){return t<=1?e:e+(e-1)*(t-1)}function bd(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function yd(e){const[t,n,r]=fd(e);return 1===t&&1===n&&1===r}function xd(e,t){return yd(e)||yd(t)}function vd(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const wd=Bc({reshape_:function(e,t){const n={x:Lc(e,"x","reshape","string_or_numeric")},r={shape:t};return Tc.runKernel(ql,n,r)}}),kd=Bc({avgPool_:function(e,t,n,r,s){const a=Lc(e,"x","avgPool","float32");ri(xd(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=wd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ri(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&ri(ui(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Tc.runKernel(ro,l,u);return c=vh(c,a.dtype),o?wd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Id=Bc({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Lc(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=wd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ri(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ri("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&ri(ui(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Tc.runKernel(ao,u,c);return h=vh(h,o.dtype),l?wd(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),$d=Bc({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Lc(e,"x","batchNorm"),o=Lc(t,"mean","batchNorm"),l=Lc(n,"variance","batchNorm");let u,c;null!=s&&(u=Lc(s,"scale","batchNorm")),null!=r&&(c=Lc(r,"offset","batchNorm")),ri(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ri(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ri(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?wd(e,[1,1,1,e.size]):2===e.rank?wd(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wd(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=Tc.runKernel(Yo,h,d);return wd(p,i.shape)}}),Nd=Bc({batchNorm2d_:function(e,t,n,r,s,a){const i=Lc(e,"x","batchNorm"),o=Lc(t,"mean","batchNorm"),l=Lc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Lc(s,"scale","batchNorm")),null!=r&&(c=Lc(r,"offset","batchNorm")),ri(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ri(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ri(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ri(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ri(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),$d(i,o,l,c,u,a)}}),Cd=Bc({batchNorm3d_:function(e,t,n,r,s,a){const i=Lc(e,"x","batchNorm"),o=Lc(t,"mean","batchNorm"),l=Lc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Lc(s,"scale","batchNorm")),null!=r&&(c=Lc(r,"offset","batchNorm")),ri(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ri(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ri(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ri(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ri(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),$d(i,o,l,c,u,a)}}),Sd=Bc({batchNorm4d_:function(e,t,n,r,s,a){const i=Lc(e,"x","batchNorm"),o=Lc(t,"mean","batchNorm"),l=Lc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Lc(s,"scale","batchNorm")),null!=r&&(c=Lc(r,"offset","batchNorm")),ri(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ri(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ri(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ri(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ri(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),$d(i,o,l,c,u,a)}}),Ed=Bc({clipByValue_:function(e,t,n){const r=Lc(e,"x","clipByValue");ri(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Tc.runKernel(po,s,a)}}),Td=Bc({concat_:function(e,t=0){ri(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=zc(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return wh(n[0]);const r=n,s={axis:t};return Tc.runKernel(mo,r,s)}}),Ad=Bc({concat1d_:function(e){return Td(e,0)}}),Rd=Bc({concat2d_:function(e,t){return Td(e,t)}}),_d=Bc({concat3d_:function(e,t){return Td(e,t)}}),Fd=Bc({concat4d_:function(e,t){return Td(e,t)}}),Dd=Bc({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Lc(e,"x","conv2d"),l=Lc(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=wd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ri(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ri(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&ri(ui(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];ri(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),ri(xd(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Tc.runKernel(bo,d,p);return c?wd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Md=Bc({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Lc(e,"x","conv1d"),l=Lc(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=wd(o,[1,o.shape[0],o.shape[1]])),ri(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ri(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&ri(ui(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ri(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ri(xd(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),ri("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=wd(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=wd(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Dd(d,h,[1,n],r,"NHWC",[1,a],i);return wd(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Od=Bc({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ri(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=wd(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ri(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ri(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ri(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];ri(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ri(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&ri(ui(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Tc.runKernel(xo,d,p);return u?wd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ld=Bc({conv2dTranspose_:function(e,t,n,r,s,a){const i=Lc(e,"x","conv2dTranspose"),o=Lc(t,"filter","conv2dTranspose");return Od(n,i,o,r,s,"NHWC",a)}}),zd=Bc({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Lc(e,"x","conv3d"),o=Lc(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=wd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ri(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ri(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ri(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ri(xd(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ri("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Tc.runKernel(vo,c,h);return u?wd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Bd=Bc({conv3DBackpropInput_:function(e,t,n,r,s){ri(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=wd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];ri(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),ri(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ri(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ri(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ri(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Tc.runKernel(ko,c,h);return o?wd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Pd=Bc({conv3dTranspose_:function(e,t,n,r,s){const a=Lc(e,"x","conv3dTranspose"),i=Lc(t,"filter","conv3dTranspose");return Bd(n,a,i,r,s)}}),Wd=Bc({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Lc(e,"x","depthwiseConv2d"),l=Lc(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=wd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ri(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ri(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),ri(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&ri(ui(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=Tc.runKernel(To,h,d);return c?wd(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Vd=Bc({floorDiv_:function(e,t){let n=Lc(e,"a","floorDiv"),r=Lc(t,"b","floorDiv");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(Xo,s)}}),Ud=Bc({div_:function(e,t){let n=Lc(e,"a","div"),r=Lc(t,"b","div");if([n,r]=wc(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Vd(n,r);const s={a:n,b:r};return Tc.runKernel(Oo,s,{})}}),Gd=Bc({elu_:function(e){const t={x:Lc(e,"x","elu")};return Tc.runKernel(zo,t)}});function Hd(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function jd(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Kd(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const qd=Bc({equal_:function(e,t){let n=Lc(e,"a","equal"),r=Lc(t,"b","equal");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(Wo,s)}}),Xd=Bc({expandDims_:function(e,t=0){const n=Lc(e,"x","expandDims","string_or_numeric");ri(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Tc.runKernel(Uo,r,s)}}),Yd=Bc({tile_:function(e,t){const n=Lc(e,"x","tile","string_or_numeric");ri(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Tc.runKernel(Cu,r,s)}}),Jd=Bc({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=xh([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=wd(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Yd(Xd(i,0),[n[0],1,1]);if(2===n.length)return Yd(Xd(Xd(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Yd(Xd(Xd(Xd(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Zd(e,t,n){const r={shape:e,value:t,dtype:n};return Tc.runKernel(jo,{},r)}const Qd=Bc({floor_:function(e){const t={x:Lc(e,"x","floor")};return Tc.runKernel(qo,t)}}),ep=Bc({gather_:function(e,t,n=0,r=0){const s={x:Lc(e,"x","gather"),indices:Lc(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Tc.runKernel(Jo,s,a)}}),tp=Bc({greater_:function(e,t){let n=Lc(e,"a","greater"),r=Lc(t,"b","greater");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(Qo,s)}}),np=Bc({greaterEqual_:function(e,t){let n=Lc(e,"a","greaterEqual"),r=Lc(t,"b","greaterEqual");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(el,s)}}),rp=Bc({leakyRelu_:function(e,t=.2){const n={x:Lc(e,"x","leakyRelu")},r={alpha:t};return Tc.runKernel(ol,n,r)}});function sp(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Tc.runKernel(cl,{},r)}const ap=Bc({log_:function(e){const t={x:Lc(e,"x","log")};return Tc.runKernel(hl,t)}}),ip=Bc({exp_:function(e){const t={x:Lc(e,"x","exp")};return Tc.runKernel(Vo,t)}}),op=Bc({max_:function(e,t=null,n=!1){const r={x:Lc(e,"x","max")},s={reductionIndices:t,keepDims:n};return Tc.runKernel(yl,r,s)}}),lp=Bc({mul_:function(e,t){let n=Lc(e,"a","mul"),r=Lc(t,"b","mul");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(Rl,s)}}),up=Bc({sub_:function(e,t){let n=Lc(e,"a","sub"),r=Lc(t,"b","sub");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(Iu,s)}}),cp=Bc({sum_:function(e,t=null,n=!1){let r=Lc(e,"x","sum");"bool"===r.dtype&&(r=vh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Tc.runKernel(pu,s,a)}}),hp=Bc({logSoftmax_:function(e,t=-1){const n=Lc(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ed(((e,n)=>{const r=op(e,t,!0),s=up(e,r),a=up(vh(s,"float32"),ap(cp(ip(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=ip(r);return up(e,lp(cp(e,t,!0),s))}}}))(n)}}),dp=Bc({logicalAnd_:function(e,t){const n=Lc(e,"a","logicalAnd","bool"),r=Lc(t,"b","logicalAnd","bool");Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(pl,s)}}),pp=Bc({maxPool_:function(e,t,n,r,s){const a=Lc(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=wd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ri(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ri(xd(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&ri(ui(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Tc.runKernel(vl,l,u);return o?wd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),fp=Bc({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Lc(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=wd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ri(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ri("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&ri(ui(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Tc.runKernel(kl,u,c);return l?wd(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),gp=Bc({maximum_:function(e,t){let n=Lc(e,"a","maximum"),r=Lc(t,"b","maximum");[n,r]=wc(n,r),"bool"===n.dtype&&(n=vh(n,"int32"),r=vh(r,"int32")),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(xl,s)}}),mp=Bc({mean_:function(e,t=null,n=!1){const r={x:Lc(e,"x","mean")},s={axis:t,keepDims:n};return Tc.runKernel(Nl,r,s)}}),bp=Bc({matMul_:function(e,t,n=!1,r=!1){let s=Lc(e,"a","matMul"),a=Lc(t,"b","matMul");[s,a]=wc(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Tc.runKernel(oo,i,o)}});function yp(e,t="float32"){if("complex64"===t){const t=yp(e,"float32"),n=yp(e,"float32");return Pc(t,n)}const n=Ai(oi(e),t);return Tc.makeTensor(n,e,t)}function xp(e,t="float32"){if("complex64"===t){const t=xp(e,"float32"),n=yp(e,"float32");return Pc(t,n)}const n=Ti(oi(e),t);return Tc.makeTensor(n,e,t)}const vp=Bc({min_:function(e,t=null,n=!1){const r={x:Lc(e,"x","min")},s={axis:t,keepDims:n};return Tc.runKernel(Cl,r,s)}}),wp=Bc({minimum_:function(e,t){let n=Lc(e,"a","minimum"),r=Lc(t,"b","minimum");[n,r]=wc(n,r),"bool"===n.dtype&&(n=vh(n,"int32"),r=vh(r,"int32")),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(Sl,s)}});function kp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ip(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function $p(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Np(e,t){return Ip(e,t.map((e=>1)),t)}function Cp(e,t,n){ri(kp(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Sp(e,t){if(kp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ep(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Tp(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ap=Bc({square_:function(e){const t=Lc(e,"x","square");return Tc.runKernel("Square",{x:t},{})}}),Rp=Bc({moments_:function(e,t=null,n=!1){const r=fi(t,(e=Lc(e,"x","moments")).shape),s=mp(e,r,n);let a=s.shape;n||(a=Np(s.shape,r));const i=Ap(up(vh(e,"float32"),wd(s,a)));return{mean:s,variance:mp(i,r,n)}}}),_p=Bc({neg_:function(e){const t={x:Lc(e,"x","neg")};return Tc.runKernel(_l,t)}}),Fp=Bc({notEqual_:function(e,t){let n=Lc(e,"a","notEqual"),r=Lc(t,"b","notEqual");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(Fl,s)}}),Dp=Bc({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Lc(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Tc.runKernel(zl,s,a)}}),Mp=Bc({onesLike_:function(e){const t={x:Lc(e,"x","onesLike")};return Tc.runKernel(Ll,t)}}),Op=Bc({pad_:function(e,t,n=0){const r=Lc(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Tc.runKernel(Pl,a,s)}}),Lp=Bc({prelu_:function(e,t){const n={x:Lc(e,"x","prelu"),alpha:Lc(t,"alpha","prelu")};return Tc.runKernel(Vl,n)}});var zp=n(377);class Bp{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=zp.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Pp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=zp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Wp=Bc({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Bp(t,n,r,!1,s),i=xh(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Vp=Bc({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=xh(e,r),i=new Pp(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Up=Bc({relu_:function(e){const t={x:Lc(e,"x","relu")};return Tc.runKernel(Kl,t)}}),Gp=Bc({reverse_:function(e,t){const n={x:Lc(e,"x","reverse")},r={dims:t};return Tc.runKernel(eu,n,r)}}),Hp=Bc({selu_:function(e){const t={x:Lc(e,"x","selu")};return Tc.runKernel(au,t)}}),jp=Bc({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Lc(e,"x","separableConv2d"),l=Lc(t,"depthwiseFilter","separableConv2d"),u=Lc(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=wd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ri(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ri(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ri(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ri(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ri(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];ri(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Wd(c,l,r,s,i,a),g=Dd(f,u,1,"valid",i);return h?wd(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Kp=Bc({sigmoid_:function(e){const t={x:Lc(e,"x","sigmoid")};return Tc.runKernel(cu,t)}}),qp=Bc({slice_:function(e,t,n){const r=Lc(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Tc.runKernel(iu,s,a)}}),Xp=Bc({slice1d_:function(e,t,n){const r=Lc(e,"x","slice1d");return ri(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),qp(r,[t],[n])}}),Yp=Bc({slice2d_:function(e,t,n){const r=Lc(e,"x","slice2d");return ri(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Jp=Bc({slice3d_:function(e,t,n){const r=Lc(e,"x","slice3d");return ri(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Zp=Bc({slice4d_:function(e,t,n){const r=Lc(e,"x","slice4d");return ri(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),qp(r,t,n)}}),Qp=Bc({softmax_:function(e,t=-1){const n=Lc(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Tc.runKernel(mu,r,s)}}),ef=Bc({softplus_:function(e){const t={x:Lc(e,"x","softplus")};return Tc.runKernel(hu,t)}}),tf=Bc({split_:function(e,t,n=0){const r={x:Lc(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Tc.runKernel(gu,r,s)}}),nf=Bc({sqrt_:function(e){const t={x:Lc(e,"x","sqrt")};return Tc.runKernel(du,t)}}),rf=Bc({squeeze_:function(e,t){const n=Lc(e,"x","squeeze");return wd(n,gi(n.shape,t).newShape)}}),sf=Bc({stack_:function(e,t=0){const n=zc(e,"tensors","stack","string_or_numeric");ri(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ri(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Tc.runKernel(Bl,r,s)}}),af=Bc({tanh_:function(e){const t={x:Lc(e,"x","tanh")};return Tc.runKernel(Nu,t)}});function of(e,t){ai(e);const n=Dc(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Wc(e,null,n,t)}const lf=Bc({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Bp(t,n,r,!0,s),i=xh(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),uf=Bc({unstack_:function(e,t=0){const n=Lc(e,"x","unstack","string_or_numeric");ri(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Tc.runKernel(Ru,r,s)}}),cf=Bc({broadcastTo_:function(e,t){let n=Lc(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=wd(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return wh(n);const i={x:n},o={reps:a};return Tc.runKernel(Cu,i,o)}}),hf=Bc({where_:function(e,t,n){const r=Lc(t,"a","where"),s=Lc(n,"b","where"),a=Lc(e,"condition","where","bool"),i=Kd(Kd(a.shape,r.shape),s.shape),o={condition:cf(a,i),t:cf(r,i),e:cf(s,i)};return Tc.runKernel(su,o)}}),df=Bc({zerosLike_:function(e){const t={x:Lc(e,"x","zerosLike")};return Tc.runKernel(Fu,t)}}),pf=Bc({transpose_:function(e,t){const n=Lc(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ri(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ri(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Tc.runKernel(Tu,r,s)}}),ff=Bc({dropout_:function(e,t,n,r){const s=Lc(e,"x","dropout");if(ri("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),ri(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof cc?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(li(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ud(Qd(sd(Vp(a,0,1,"float32",r),i)),i);return lp(s,o)}}),gf=Bc({imag_:function(e){const t={input:Lc(e,"input","imag")};return Tc.runKernel(rl,t)}}),mf=Bc({real_:function(e){const t={input:Lc(e,"input","real")};return Tc.runKernel(Hl,t)}}),bf=Bc({fft_:function(e){ri("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Tc.runKernel(Ho,t)}}),yf=Bc({rfft_:function(e,t){ri("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=qp(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Td([e,yp(r)],e.shape.length-1),n=t}else s=e;const a=df(s),i=wd(Pc(s,a),[r,n]),o=bf(i),l=Math.floor(n/2)+1,u=mf(o),c=gf(o),h=tf(u,[l,n-l],u.shape.length-1),d=tf(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,wd(Pc(h[0],d[0]),p)}}),xf=Bc({ifft_:function(e){ri("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Tc.runKernel(nl,t)}}),vf=Bc({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=wd(e,[n,t]);r=xf(s)}else{const s=[n,2*(t-1)],a=wd(mf(e),[n,t]),i=wd(gf(e),[n,t]),o=Gp(qp(a,[0,1],[n,t-2]),1),l=lp(Gp(qp(i,[0,1],[n,t-2]),1),td(-1)),u=Td([a,o],1),c=Td([i,l],1),h=wd(Pc(u,c),[s[0],s[1]]);r=xf(h)}if(r=mf(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=wd(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),wf=Bc({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=wd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=wd(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ri(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ri(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ri(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];ri(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ri(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&ri(ui(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Tc.runKernel(yo,h,d)}}),kf=Bc({relu6_:function(e){const t={x:Lc(e,"x","relu6")};return Tc.runKernel(Ql,t)}}),If=Bc({step_:function(e,t=0){const n={x:Lc(e,"x","step")},r={alpha:t};return Tc.runKernel(Du,n,r)}});function $f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return lp(e,If(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Nf(e,t){let n=t;const r=jd(e.shape,t.shape);return r.length>0&&(n=cp(n,r)),wd(n,e.shape)}function Cf(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Up(e);if("elu"===t)return Gd(e);if("relu6"===t)return kf(e);if("prelu"===t)return Lp(e,n);if("leakyrelu"===t)return rp(e,r);if("sigmoid"===t)return Kp(e);throw new Error(`Unknown fused activation ${t}.`)}const Sf=(e,t)=>!(e>0)||"linear"===t,Ef=Bc({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Sf(Tc.state.gradientDepth,l)){let h=Dd(e,t,n,r,s,a,i);return null!=o&&(h=sd(h,o)),Cf(h,l,u,c)}const h=Lc(e,"x","conv2d"),d=Lc(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=wd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ri(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),ri(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&ri(ui(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ri(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),ri(xd(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ri("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=hd(p.shape,d.shape,n,a,r,i);let m,b;null!=o&&(m=Lc(o,"bias","fused conv2d"),[m]=wc(m,h),Kd(g.outShape,m.shape)),null!=u&&(b=Lc(u,"prelu weights","fused conv2d"));const y=(e,t)=>{const[s,i,o,u]=t,c=$f(e,o,l);ri(yd(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Od(i.shape,c,s,n,r),wf(i,c,s.shape,n,r)];if(null!=u){const e=Nf(u,c);h.push(e)}return h},x={x:p,filter:d,bias:m,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?ed(((e,t,n)=>{let r=Tc.runKernel(Lu,x,v);return n([t,e,r]),f&&(r=wd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):ed(((e,t,n,r)=>{let s=Tc.runKernel(Lu,x,v);return r([t,e,s,n]),f&&(s=wd(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}}),Tf=Bc({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=wd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=wd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Tc.runKernel(Ao,u,c)}}),Af=Bc({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=wd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Tc.runKernel(Ro,u,c);return l?wd(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Bc({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Sf(Tc.state.gradientDepth,l)){let h=Wd(e,t,n,r,s,a,i);return null!=o&&(h=sd(h,o)),Cf(h,l,u,c)}const h=Lc(e,"x","depthwiseConv2d"),d=Lc(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=wd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ri(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),ri(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ri(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),ri(xd(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&ri(ui(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=hd(p.shape,d.shape,n,a,r,i,!0);let m,b;null!=o&&(m=Lc(o,"bias","fused conv2d"),[m]=wc(m,h),Kd(g.outShape,m.shape)),null!=u&&(b=Lc(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{ri(yd(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=$f(e,u,l),d=Af(o.shape,h,s,n,r,a,i),p=Tf(o,h,s.shape,n,r,a,i);return null!=c?[d,p,Nf(m,h)]:[d,p]},x={x:p,filter:d,bias:m,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?ed(((e,t,n)=>{let r=Tc.runKernel(zu,x,v);return n([t,e,r]),f&&(r=wd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):ed(((e,t,n,r)=>{let s=Tc.runKernel(zu,x,v);return r([t,e,s,n]),f&&(s=wd(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}});const Rf=Bc({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Sf(Tc.state.gradientDepth,a)){let l=bp(e,t,n,r);return null!=s&&(l=sd(l,s)),Cf(l,a,i,o)}let l=Lc(e,"a","fused matMul"),u=Lc(t,"b","fused matMul");[l,u]=wc(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=oi(f),b=oi(g);ri(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),ri(li(f,g),(()=>`Error in fused matMul: outer dimensions (${f}) and (${g}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),ri(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=l.shape.slice(0,-2).concat([d,p]),x=wd(l,n?[m,c,d]:[m,d,c]),v=wd(u,r?[b,p,h]:[b,h,p]);let w,k;null!=s&&(w=Lc(s,"bias","fused matMul"),[w]=wc(w,l),Kd(y,w.shape)),null!=i&&(k=Lc(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=$f(wd(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=bp(c,o,!1,!1),d=bp(c,i,!0,!1)):n&&!r?(h=bp(o,c,!1,!0),d=bp(i,c,!1,!1)):(h=bp(o,c,!0,!0),d=bp(c,i,!0,!0)):(h=bp(c,o,!1,!0),d=bp(i,c,!0,!1)),null!=s?[h,d,Nf(u,c)]:[h,d]},$={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?ed(((e,t,n)=>{const r=Tc.runKernel(Ou,$,N);return n([e,t,r]),{value:wd(r,y),gradFunc:I}}))(x,v):ed(((e,t,n,r)=>{const s=Tc.runKernel(Ou,$,N);return r([e,t,s,n]),{value:wd(s,y),gradFunc:I}}))(x,v,w)}});function _f(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return of(s,"float32")}Bc({hammingWindow_:function(e){return _f(e,.54,.46)}});const Ff=Bc({hannWindow_:function(e){return _f(e,.5,.5)}});function Df(e,t,n){if(ai(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Dc(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Wc(e,t,r,n)}const Mf=Bc({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(qp(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Td([qp(e,a,t-r),Zd([r],s)]);i.push(o),a+=n}return 0===i.length?Df([],[0,t]):wd(Td(i),[i.length,t])}});function Of(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ri(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ri(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ri(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ri(1===t.rank,(()=>"scores must be a 1D tensor")),ri(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ri(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Lf(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||zf)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function zf(e,t){return e>t?1:e<t?-1:0}function Bf(e,t,n,r,s){return Vf(e,t,n,r,s,0)}function Pf(e,t,n,r,s,a){return Vf(e,t,n,r,s,0,!1,a,!0)}function Wf(e,t,n,r,s,a){return Vf(e,t,n,r,s,a,!0)}function Vf(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Hf);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Uf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Gf(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Lf(u,t,Hf))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Uf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function Gf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Hf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Bc({stft_:function(e,t,n,r,s=Ff){null==r&&(r=function(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}(t));const a=Mf(e,t,n),i=lp(a,s(t));return yf(i,r)}}),Bc({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Lc(e,"image","cropAndResize"),o=Lc(t,"boxes","cropAndResize","float32"),l=Lc(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ri(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ri(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ri(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ri(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ri(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ri("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Tc.runKernel(Co,c,h)}}),Bc({flipLeftRight_:function(e){const t=Lc(e,"image","flipLeftRight","float32");ri(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Tc.runKernel(Ko,n,{})}}),Bc({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Lc(e,"image","rotateWithOffset","float32");ri(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Tc.runKernel(Mu,a,i)}}),Bc({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Lc(e,"boxes","nonMaxSuppression"),i=Lc(t,"scores","nonMaxSuppression"),o=Of(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Tc.runKernel(Dl,{boxes:a,scores:i},l)}}),Bc({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Lc(e,"boxes","nonMaxSuppression"),o=Lc(t,"scores","nonMaxSuppression"),l=Of(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Tc.runKernel(Ol,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Bc({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Lc(e,"boxes","nonMaxSuppression"),o=Lc(t,"scores","nonMaxSuppression"),l=Of(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Tc.runKernel(Ml,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const jf=Bc({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Lc(e,"images","resizeBilinear");ri(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),ri(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ri(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=wd(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Tc.runKernel(Jl,o,l);return i?wd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Kf=Bc({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Lc(e,"images","resizeNearestNeighbor");ri(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),ri(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ri("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ri(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=wd(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Tc.runKernel(Xl,o,l);return i?wd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),qf=Bc({bincount_:function(e,t,n){const r=Lc(e,"x","bincount"),s=Lc(t,"weights","bincount");ri("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ri(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ri(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Tc.runKernel(uo,a,i)}}),Xf=Bc({lessEqual_:function(e,t){let n=Lc(e,"a","lessEqual"),r=Lc(t,"b","lessEqual");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(ul,s)}}),Yf=Bc({round_:function(e){const t={x:Lc(e,"x","round")};return Tc.runKernel(tu,t)}});function Jf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Tc.runKernel(Gl,{},s)}Bc({threshold_:function(e,t="binary",n=!1,r=.5){const s=Lc(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=lp(of([r]),255);if(ri(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),ri(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),ri("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),ri("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=tf(s,[1,1,1],-1);const e=lp(i,.2989),t=lp(o,.587),n=lp(l,.114);u=sd(sd(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=of([-1]),u=of([0]),c=of([0]);for(let h=0;h<e.size-1;h++){n=qp(e,0,h+1),r=qp(e,h+1),i=Ud(cp(n),t),o=Ud(cp(r),t);const d=cp(lp(n,Jf(0,n.size)));s=Ud(d,cp(n));const p=Zd(r.shape,n.size),f=sd(Jf(0,r.size),p),g=lp(r,f);a=Ud(cp(g),cp(r));const m=up(s,a),b=up(s,a),y=lp(i,o);c=lp(lp(y,m),b);const x=tp(c,u);u=hf(x,c,u),l=hf(x,of([h]),l)}return l}(qf(vh(Yf(u),"int32"),Vc([]),256),a));const h=n?Xf(u,c):tp(u,c);return vh(lp(h,255),"int32")}}),Bc({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Lc(e,"image","transform","float32"),o=Lc(t,"transforms","transform","float32");ri(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ri(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ri(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Tc.runKernel(Eu,l,u)}});const Zf=Bc({bandPart_:function(e,t,n){ri(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ri(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Lc(e,"a","bandPart");ri(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=wd(Jf(0,a,1,"int32"),[-1,1]),l=Jf(0,i,1,"int32"),u=up(o,l),c=dp(Xf(u,td(+t,"int32")),np(u,td(-n,"int32"))),h=yp([a,i],r.dtype);return wd(sf(uf(wd(r,[-1,a,i])).map((e=>hf(c,e,h)))),s)}}),Qf=Bc({pow_:function(e,t){let n=Lc(e,"base","pow"),r=Lc(t,"exp","pow");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(Wl,s)}});function eg(e,t,n=null){if(0===e.rank)return rd(e);if(1!==e.rank&&null===n)return eg(wd(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return cp(rd(e),n);if(t===1/0)return op(rd(e),n);if(t===-1/0)return vp(rd(e),n);if("euclidean"===t||2===t)return nf(cp(Qf(rd(e),td(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return op(cp(rd(e),n[0]),n[1]-1);if(t===1/0)return op(cp(rd(e),n[1]),n[0]);if(t===-1/0)return vp(cp(rd(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return nf(cp(Ap(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const tg=Bc({norm_:function(e,t="euclidean",n=null,r=!1){const s=eg(e=Lc(e,"x","norm"),t,n);let a=s.shape;if(r){const t=fi(n,e.shape);a=Np(s.shape,t)}return wd(s,a)}}),ng=Bc({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ri(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ri(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=tf(e,e.shape[0],0).map((e=>rf(e,[0])));ri(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Tc.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=lp(cp(lp(n[r],e)),n[r]);e=up(e,t)}return Ud(e,tg(e,"euclidean"))})));return t?sf(n,0):n}});function rg(e,t=!1){return Tc.tidy((()=>{ri(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Jd(n),a=wh(e);const i=Df([[1]],[1,1]);let o=wh(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Tc.tidy((()=>{const t=qp(a,[e,e],[n-e,1]),l=tg(t),u=qp(a,[e,e],[1,1]),c=hf(tp(u,0),Df([[-1]]),Df([[1]])),h=up(u,lp(c,l)),d=Ud(t,h);o=1===d.shape[0]?wh(i):Td([i,qp(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=_p(Ud(bp(c,h),l)),f=qp(a,[e,0],[n-e,r]),g=lp(p,o),m=pf(o);if(0===e)a=up(f,bp(g,bp(m,f)));else{const t=up(f,bp(g,bp(m,f)));a=Td([qp(a,[0,0],[e,r]),t],0)}const b=pf(g),y=qp(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=up(y,bp(bp(y,o),b));else{const t=up(y,bp(bp(y,o),b));s=Td([qp(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Jh([t,l,u])}return!t&&n>r&&(s=qp(s,[0,0],[n,r]),a=qp(a,[0,0],[r,r])),[s,a]}))}const sg=Bc({qr_:function(e,t=!1){if(ri(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return rg(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=uf(wd(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=rg(e,t);s.push(n),a.push(r)})),[wd(sf(s,0),e.shape),wd(sf(a,0),e.shape)]}}});var ag;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ag||(ag={}));const ig=Bc({computeWeightedLoss_:function(e,t,n=ag.SUM_BY_NONZERO_WEIGHTS){const r=Lc(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Lc(t,"weights","computeWeightedLoss"));const a=null==s?r:lp(r,s);if(n===ag.NONE)return a;if(n===ag.SUM)return cp(a);if(n===ag.MEAN){if(null==s)return mp(a);{const e=r.size/s.size,t=Ud(cp(a),cp(s));return e>1?Ud(t,td(e)):t}}if(n===ag.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Ud(cp(a),td(r.size));{const e=lp(s,xp(r.shape)),t=vh(cp(Fp(e,td(0))),"float32");return Ud(cp(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Bc({absoluteDifference_:function(e,t,n,r=ag.SUM_BY_NONZERO_WEIGHTS){const s=Lc(e,"labels","absoluteDifference"),a=Lc(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Lc(n,"weights","absoluteDifference")),si(s.shape,a.shape,"Error in absoluteDifference: ");const o=rd(up(s,a));return ig(o,i,r)}}),Bc({cosineDistance_:function(e,t,n,r,s=ag.SUM_BY_NONZERO_WEIGHTS){const a=Lc(e,"labels","cosineDistance"),i=Lc(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Lc(r,"weights","cosineDistance")),si(a.shape,i.shape,"Error in cosineDistance: ");const l=td(1),u=up(l,cp(lp(a,i),n,!0));return ig(u,o,s)}}),Bc({hingeLoss_:function(e,t,n,r=ag.SUM_BY_NONZERO_WEIGHTS){let s=Lc(e,"labels","hingeLoss");const a=Lc(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Lc(n,"weights","hingeLoss")),si(s.shape,a.shape,"Error in hingeLoss: ");const o=td(1);s=up(lp(td(2),s),o);const l=Up(up(o,lp(s,a)));return ig(l,i,r)}}),Bc({huberLoss_:function(e,t,n,r=1,s=ag.SUM_BY_NONZERO_WEIGHTS){const a=Lc(e,"labels","huberLoss"),i=Lc(t,"predictions","huberLoss");let o=null;null!=n&&(o=Lc(n,"weights","huberLoss")),si(a.shape,i.shape,"Error in huberLoss: ");const l=td(r),u=rd(up(i,a)),c=wp(u,l),h=up(u,c),d=sd(lp(td(.5),Ap(c)),lp(l,h));return ig(d,o,s)}}),Bc({logLoss_:function(e,t,n,r=1e-7,s=ag.SUM_BY_NONZERO_WEIGHTS){const a=Lc(e,"labels","logLoss"),i=Lc(t,"predictions","logLoss");let o=null;null!=n&&(o=Lc(n,"weights","logLoss")),si(a.shape,i.shape,"Error in logLoss: ");const l=td(1),u=td(r),c=_p(lp(a,ap(sd(i,u)))),h=lp(up(l,a),ap(sd(up(l,i),u))),d=up(c,h);return ig(d,o,s)}});const og=Bc({squaredDifference_:function(e,t){let n=Lc(e,"a","squaredDifference"),r=Lc(t,"b","squaredDifference");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(vu,s,{})}});Bc({meanSquaredError_:function(e,t,n,r=ag.SUM_BY_NONZERO_WEIGHTS){const s=Lc(e,"labels","meanSquaredError"),a=Lc(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Lc(n,"weights","meanSquaredError")),si(s.shape,a.shape,"Error in meanSquaredError: ");const o=og(s,a);return ig(o,i,r)}});const lg=Bc({log1p_:function(e){const t={x:Lc(e,"x","log1p")};return Tc.runKernel(dl,t)}});Bc({sigmoidCrossEntropy_:function(e,t,n,r=0,s=ag.SUM_BY_NONZERO_WEIGHTS){let a=Lc(e,"multiClassLabels","sigmoidCrossEntropy");const i=Lc(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Lc(n,"weights","sigmoidCrossEntropy")),si(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=td(r),t=td(1),n=td(.5);a=sd(lp(a,up(t,e)),lp(n,e))}const l=function(e,t){const n=Lc(e,"labels","sigmoidCrossEntropyWithLogits"),r=Lc(t,"logits","sigmoidCrossEntropyWithLogits");si(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Up(r),a=lp(r,n),i=lg(ip(_p(rd(r))));return sd(up(s,a),i)}(a,i);return ig(l,o,s)}});const ug=Bc({logSumExp_:function(e,t=null,n=!1){const r=Lc(e,"x","logSumExp"),s=fi(t,r.shape),a=op(r,s,!0),i=up(r,a),o=ip(i),l=cp(o,s),u=ap(l),c=sd(wd(a,u.shape),u);if(n){const e=Np(c.shape,s);return wd(c,e)}return c}});Bc({softmaxCrossEntropy_:function(e,t,n,r=0,s=ag.SUM_BY_NONZERO_WEIGHTS){let a=Lc(e,"onehotLabels","softmaxCrossEntropy");const i=Lc(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Lc(n,"weights","softmaxCrossEntropy")),si(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=td(r),t=td(1),n=td(a.shape[1]);a=sd(lp(a,up(t,e)),Ud(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return ed(((e,t,r)=>{const s=ug(t,[n],!0),a=up(vh(t,"float32"),s);r([e,a]);const i=_p(lp(a,e));return{value:cp(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Np(e.shape,[n]);return[lp(wd(e,a),up(vh(r,"float32"),ip(s))),lp(wd(e,a),up(ip(s),vh(r,"float32")))]}}}))(e,t)}(a,i);return ig(l,o,s)}}),Bc({sparseFillEmptyRows_:function(e,t,n,r){const s=Lc(e,"indices","sparseFillEmptyRows"),a=Lc(t,"values","sparseFillEmptyRows"),i=Lc(n,"denseShape","sparseFillEmptyRows"),o=Lc(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Tc.runKernel(bu,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Bc({sparseReshape_:function(e,t,n){const r=Lc(e,"inputIndices","sparseReshape"),s=Lc(t,"inputShape","sparseReshape"),a=Lc(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Tc.runKernel(yu,i);return{outputIndices:o[0],outputShape:o[1]}}});const cg={bandPart:Zf,gramSchmidt:ng,qr:sg};class hg extends nd{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Tc.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Tc.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Yh((()=>df(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Yh((()=>df(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Yh((()=>{const e=sd(lp(a,this.rho),lp(Ap(s),1-this.rho)),t=lp(Ud(nf(sd(i,this.epsilon)),nf(sd(a,this.epsilon))),s),n=sd(lp(i,this.rho),lp(Ap(t),1-this.rho));a.assign(e),i.assign(n);const o=sd(lp(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Jh(this.accumulatedGrads.map((e=>e.variable))),Jh(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}hg.className="Adadelta",Kh(hg);class dg extends nd{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Tc.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Yh((()=>Zd(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Yh((()=>{const e=sd(a,Ap(s));a.assign(e);const t=sd(lp(Ud(s,nf(sd(e,Tc.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Jh(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}dg.className="Adagrad",Kh(dg);class pg extends nd{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Yh((()=>{this.accBeta1=td(t).variable(),this.accBeta2=td(n).variable()})),null==r&&(this.epsilon=Tc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yh((()=>{const n=up(1,this.accBeta1),r=up(1,this.accBeta2);t.forEach(((t,s)=>{const a=Tc.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Yh((()=>df(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Yh((()=>df(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=sd(lp(o,this.beta1),lp(i,1-this.beta1)),c=sd(lp(l,this.beta2),lp(Ap(i),1-this.beta2)),h=Ud(u,n),d=Ud(c,r);o.assign(u),l.assign(c);const p=sd(lp(Ud(h,sd(nf(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(lp(this.accBeta1,this.beta1)),this.accBeta2.assign(lp(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Jh(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Jh(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Yh((()=>{this.accBeta1.assign(Qf(this.beta1,this.iterations_+1)),this.accBeta2.assign(Qf(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}pg.className="Adam",Kh(pg);class fg extends nd{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Yh((()=>{this.iteration=td(0).variable(),this.accBeta1=td(t).variable()})),null==r&&(this.epsilon=Tc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yh((()=>{const n=up(1,this.accBeta1),r=Ud(-this.learningRate,sd(lp(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Tc.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:df(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:df(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=sd(lp(o,this.beta1),lp(i,1-this.beta1)),c=lp(l,this.beta2),h=rd(i),d=gp(c,h);o.assign(u),l.assign(d);const p=sd(lp(Ud(r,n),Ud(u,sd(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(sd(this.iteration,1)),this.accBeta1.assign(lp(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Jh(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Jh(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}fg.className="Adamax",Kh(fg);class gg extends nd{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Tc.registeredVariables[t];Yh((()=>{const e=sd(lp(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Zh(td(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}gg.className="SGD",Kh(gg);class mg extends gg{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=td(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Tc.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Yh((()=>df(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Yh((()=>{let e;const t=sd(lp(this.m,s),a);e=this.useNesterov?sd(lp(this.c,sd(a,lp(t,this.m))),r):sd(lp(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Jh(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}mg.className="Momentum",Kh(mg);class bg extends nd{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Tc.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Tc.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Yh((()=>df(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Yh((()=>df(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Yh((()=>df(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Yh((()=>{const e=sd(lp(i,this.decay),lp(Ap(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=sd(lp(t,this.decay),lp(a,1-this.decay)),l=Ud(lp(a,this.learningRate),nf(up(e,sd(Ap(s),this.epsilon)))),u=sd(lp(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=up(r,u);r.assign(c)}else{const e=sd(lp(i,this.decay),lp(Ap(a),1-this.decay)),t=sd(lp(o,this.momentum),Ud(lp(a,this.learningRate),nf(sd(e,this.epsilon))));i.assign(e),o.assign(t);const n=up(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Jh(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Jh(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Jh(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}bg.className="RMSProp",Kh(bg);class yg{static sgd(e){return new gg(e)}static momentum(e,t,n=!1){return new mg(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new bg(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new pg(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new hg(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new fg(e,t,n,r,s)}static adagrad(e,t=.1){return new dg(e,t)}}const xg={sgd:yg.sgd,momentum:yg.momentum,adadelta:yg.adadelta,adagrad:yg.adagrad,rmsprop:yg.rmsprop,adamax:yg.adamax,adam:yg.adam},vg="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function wg(){return new Promise((e=>vg((()=>e()))))}function kg(e,t){const n=e[0].length;e.forEach(((e,t)=>{ri(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ri(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)ri(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Ig(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const $g=30;function Ng(e){return e<=$g?e:Ni(e,Math.floor(Math.sqrt(e)))}function Cg(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Sg(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Eg(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Tg(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Ag(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Rg(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function _g(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===oi(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Ci(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Fg(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Dg(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Fg(n,t,e)}function Mg(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:oi(t.shape)/o,sliceSize:i,strides:[...Ci(n.slice(0,s)),1],outputSize:oi(n)}}const Og=1.7580993408473768,Lg=1.0507009873554805,zg=.3275911,Bg=.254829592,Pg=-.284496736,Wg=1.421413741,Vg=-1.453152027,Ug=1.061405429;function Gg(...e){zi().getBool("IS_TEST")||console.warn(...e)}function Hg(...e){zi().getBool("IS_TEST")||console.log(...e)}function jg(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Kg(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function qg(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Xg(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Yg(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Jg(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Zg(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Qg(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const em=/->/g;function tm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(em,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");ri(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function nm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function rm(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ri(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function sm(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=im(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function am(e){return e.every(((e,t)=>e===t))}function im(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function om(e,t,n=0){let r=[];if("number"==typeof t)ri(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{ri(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}ri(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function lm(e,t){let n,r=!1;for(e<=$g?(n=e,r=!0):n=Ni(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Ni(e,n+1);return n}function um(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function cm(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function hm(e){try{return e.map((e=>Ju(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function dm(e){return e.map((e=>Yu(e)))}function pm(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=xh(e,"int32"),s=xh([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const fm={kernelName:Ui,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,If(vh(n,"float32"),-1))}}},gm={kernelName:Gi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ap(vh(n,"float32")),r=nf(up(td(1),t));return _p(Ud(e,r))}}}},mm={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=nf(up(Ap(vh(n,"float32")),1));return Ud(e,t)}}}},bm={kernelName:ji,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{let t=e;const r=jd(n.shape,s);return r.length>0&&(t=cp(t,r)),wd(t,n.shape)},b:()=>{let t=e;const n=jd(r.shape,s);return n.length>0&&(t=cp(t,n)),wd(t,r.shape)}}}},ym={kernelName:Ki,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},xm={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>df(n)}}},vm={kernelName:Ji,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>df(n)}}},wm={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,nf(up(td(1),Ap(vh(n,"float32")))))}}},km={kernelName:Qi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=nf(sd(td(1),Ap(vh(n,"float32"))));return Ud(e,t)}}}},Im={kernelName:no,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{const t=sd(Ap(n),Ap(r));let a=lp(e,Ud(r,t));const i=jd(n.shape,s);return i.length>0&&(a=cp(a,i)),wd(a,n.shape)},b:()=>{const t=sd(Ap(n),Ap(r));let a=_p(lp(e,Ud(n,t)));const i=jd(r.shape,s);return i.length>0&&(a=cp(a,i)),wd(a,r.shape)}}}},$m={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,sd(Ap(vh(n,"float32")),1))}}},Nm={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,up(td(1),Ap(vh(n,"float32"))))}}},Cm=Bc({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Lc(e,"dy","avgPool3dGrad"),o=Lc(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=wd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=wd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ri(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ri(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&ri(ui(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Tc.runKernel(io,h,d);return c?wd(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Sm={kernelName:ao,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Cm(e,r,s,a,i,o)}}},Em=Bc({avgPoolGrad_:function(e,t,n,r,s){const a=Lc(e,"dy","avgPoolGrad"),i=Lc(t,"input","avgPoolGrad");ri(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=wd(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=wd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ri(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ri(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Tc.runKernel(so,c,h);return u?wd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Tm={kernelName:ro,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Em(e,r,s,a,i)}}},Am={kernelName:oo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>bp(e,s,!1,!1),b:()=>bp(e,r,!0,!1)}:a&&!i?{a:()=>bp(s,e,!1,!0),b:()=>bp(r,e,!1,!1)}:{a:()=>bp(s,e,!0,!0),b:()=>bp(e,r,!0,!0)}:{a:()=>bp(e,s,!1,!0),b:()=>bp(r,e,!0,!1)}}},Rm=Bc({spaceToBatchND_:function(e,t,n){const r=Lc(e,"x","spaceToBatchND");ri(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ri(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ri(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Tc.runKernel(fu,s,a)}}),_m={kernelName:lo,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Rm(e,r,s)}}},Fm={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>cp(e,o,!0)}}},Dm={kernelName:co,gradFunc:e=>({x:()=>e.clone()})},Mm={kernelName:ho,gradFunc:e=>({x:()=>df(e)})},Om={kernelName:po,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>hf(dp(np(r,s),Xf(r,a)),e,df(e))}}},Lm={kernelName:go,inputsToSave:["x"],gradFunc:fm.gradFunc},zm={kernelName:mo,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=fi(s,t[0].shape)[0],i=r.map((e=>e[a]));return tf(e,i,a).map((e=>()=>e))}},Bm={kernelName:bo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ri(yd(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Od(r.shape,e,s,i,o,l),filter:()=>wf(r,e,s.shape,i,o,l)}}},Pm={kernelName:xo,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Dd(e,s,a,i,o,1,l),filter:()=>wf(e,r,s.shape,a,i,o,l)}}},Wm=Bc({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=wd(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=wd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ri(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ri(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ri(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ri(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ri(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Tc.runKernel(wo,o,l)}}),Vm={kernelName:vo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ri(yd(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Bd(i.shape,e,o,s,a),filter:()=>Wm(i,e,o.shape,s,a)}}},Um=Bc({sin_:function(e){const t={x:Lc(e,"x","sin")};return Tc.runKernel(ou,t)}}),Gm={kernelName:Io,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(_p(Um(vh(n,"float32"))),e)}}},Hm=Bc({sinh_:function(e){const t={x:Lc(e,"x","sinh")};return Tc.runKernel(lu,t)}}),jm={kernelName:$o,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(Hm(vh(n,"float32")),e)}}},Km=Bc({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Lc(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Tc.runKernel(No,s,a)}}),qm={kernelName:No,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Sp([s],r.rank);let n=Km(e,s,a,!i);return null!=t&&(n=pf(n,t)),n}}}},Xm={kernelName:To,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ri(yd(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ri(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ri(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ri(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ri(xd(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&ri(ui(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Af(l.shape,e,u,s,a,r,i),filter:()=>Tf(l,e,u.shape,s,a,r,i)}}},Ym={kernelName:Fo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Tc.runKernel(Do,a,n),filter:()=>Tc.runKernel(Mo,i,n)}}},Jm={kernelName:zo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Tc.runKernel(Bo,r)}}},Zm={kernelName:Po,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=lp(ip(_p(Ap(n))),2/Math.sqrt(Math.PI));return{x:()=>lp(e,r)}}},Qm={kernelName:Vo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,n)}}},eb={kernelName:Uo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>wd(e,n.shape)}}},tb={kernelName:Go,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,ip(n))}}},nb={kernelName:qo,gradFunc:e=>({x:()=>df(e)})},rb={kernelName:Xo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{const t=Ud(e,vh(r,"float32")),a=jd(n.shape,s);return a.length>0?wd(cp(t,a),n.shape):t},b:()=>{let t=lp(e,vh(n,"float32"));const a=jd(r.shape,s);a.length>0&&(t=wd(cp(t,a),r.shape));const i=Ap(r);return _p(Ud(t,vh(i,"float32")))}}}},sb=Bc({rsqrt_:function(e){const t={x:Lc(e,"x","rsqrt")};return Tc.runKernel(nu,t)}}),ab={kernelName:Yo,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?td(1):o,u=jd(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=up(s,a),d=lp(e,l),p=sb(sd(i,td(r))),f=lp(lp(lp(p,p),p),td(-.5));return{x:()=>1===a.rank?wd(lp(lp(e,Yd(wd(p,[1,1,1,a.shape[0]]),c)),l),s.shape):wd(lp(lp(e,p),l),s.shape),mean:()=>{let e=lp(lp(p,td(-1)),d);return 1===a.rank&&(e=cp(e,u)),wd(e,a.shape)},variance:()=>{let e=lp(lp(f,h),d);return 1===a.rank&&(e=cp(e,u)),wd(e,a.shape)},scale:()=>{const t=lp(h,p);let n=lp(e,t);return 1===a.rank&&(n=cp(n,u)),wd(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=cp(t,u)),wd(t,a.shape)}}}},ib=Bc({unsortedSegmentSum_:function(e,t,n){const r=Lc(e,"x","unsortedSegmentSum"),s=Lc(t,"segmentIds","unsortedSegmentSum","int32");ri(ui(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Tc.runKernel(_u,a,i)}}),ob={kernelName:Jo,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=fi(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=lb(0,l),d=lb(l+1,l+1+c),p=ub([o,[n],u]),f=wd(e,p),g=wd(s,[n]),m=ub([[l],h,d]),b=pf(f,m);let y=ib(b,g,r.shape[i]);const x=Ep(m);return y=pf(y,x),y},indices:()=>s}}};function lb(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ub(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const cb={kernelName:el,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>df(n),b:()=>df(r)}}},hb={kernelName:tl,gradFunc:e=>({x:()=>vh(e,"float32")})},db={kernelName:sl,gradFunc:e=>({x:()=>df(e)})},pb={kernelName:al,gradFunc:e=>({x:()=>df(e)})},fb={kernelName:il,gradFunc:e=>({x:()=>df(e)})},gb={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=tp(r,0);return{x:()=>hf(a,e,lp(e,s))}}},mb={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,sd(n,1))}}},bb={kernelName:hl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,vh(n,"float32"))}}},yb={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=ip(r);return up(e,lp(cp(e,s,!0),t))}}}},xb=Bc({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Tc.runKernel(bl,o,l)}}),vb={kernelName:ml,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>xb(r,s,e,a,i,o,l)}}};function wb(e,t,n,r){return t.rank<n.rank&&(t=wd(t,Np(t.shape,r))),e.rank<n.rank&&(e=wd(e,Np(e.shape,r))),{x:()=>lp(e,vh(qd(n,t),e.dtype))}}const kb={kernelName:yl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=wb(e,t[1],a,fi(s,a.shape));return{x:()=>i.x()}}},Ib=Bc({less_:function(e,t){let n=Lc(e,"a","less"),r=Lc(t,"b","less");[n,r]=wc(n,r),Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(ll,s)}}),$b={kernelName:xl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lp(e,vh(np(n,r),"float32")),b:()=>lp(e,vh(Ib(n,r),"float32"))}}},Nb=Bc({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Lc(e,"dy","maxPool3dGrad"),l=Lc(t,"input","maxPool3dGrad"),u=Lc(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=wd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=wd(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=wd(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ri(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ri(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ri(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&ri(ui(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:a,dimRoundingMode:i},m=Tc.runKernel(Il,f,g);return p?wd(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Cb={kernelName:kl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Nb(e,r,s,a,i,o,l)}}},Sb=Bc({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Lc(e,"dy","maxPoolGrad"),l=Lc(t,"input","maxPoolGrad"),u=Lc(n,"output","maxPoolGrad");ri(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ri(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ri(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&ri(ui(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Tc.runKernel(wl,c,h)}}),Eb={kernelName:vl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Sb(e,r,s,a,i,o)}}},Tb={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=fi(s,r.shape),i=oi($p(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=wd(e,t);return Ud(lp(n,xp(r.shape,"float32")),i)}}}},Ab={kernelName:Cl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=wb(e,i,a,fi(s,a.shape));return{x:()=>o.x()}}},Rb={kernelName:Sl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>lp(e,vh(Xf(n,r),"float32")),b:()=>lp(e,vh(tp(n,r),"float32"))}}},_b={kernelName:El,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>qp(e,a,r.shape)}}},Fb={kernelName:Tl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{const t=jd(n.shape,s);return t.length>0?wd(cp(e,t),n.shape):e},b:()=>{const t=lp(e,_p(Qd(Ud(n,r)))),a=jd(r.shape,s);return a.length>0?wd(cp(t,a),r.shape):t}}}},Db={kernelName:Rl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{const t=lp(e,vh(r,"float32")),a=jd(n.shape,s);return a.length>0?wd(cp(t,a),n.shape):t},b:()=>{const t=lp(e,vh(n,"float32")),a=jd(r.shape,s);return a.length>0?wd(cp(t,a),r.shape):t}}}},Mb={kernelName:_l,gradFunc:e=>({x:()=>_p(e)})},Ob={kernelName:zl,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>yp(n.shape,"float32")}}},Lb={kernelName:Ll,gradFunc:e=>({x:()=>df(e)})},zb={kernelName:Bl,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return uf(e,r).map((e=>()=>e))}},Bb={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>qp(e,a,r.shape)}}},Pb={kernelName:Wl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Kd(a.shape,i.shape);return{a:()=>{const t=vh(i,"float32");let n=lp(e,lp(t,Qf(a,up(t,td(1)))));const r=jd(a.shape,o);return r.length>0&&(n=cp(n,r)),wd(n,a.shape)},b:()=>{const t=tp(a,0),n=hf(t,ap(a),df(a));let r=lp(e,lp(s,n));const l=jd(i.shape,o);return l.length>0&&(r=cp(r,l)),wd(r,i.shape)}}}},Wb={kernelName:Vl,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=tp(n,0);return{x:()=>hf(s,e,lp(e,r)),alpha:()=>{let t=hf(s,df(e),lp(e,n));const a=jd(r.shape,e.shape);return a.length>0&&(t=cp(t,a)),wd(t,r.shape)}}}},Vb={kernelName:Oo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{const t=Ud(e,vh(r,"float32")),a=jd(n.shape,s);return a.length>0?wd(cp(t,a),n.shape):t},b:()=>{let t=lp(e,vh(n,"float32"));const a=jd(r.shape,s);a.length>0&&(t=wd(cp(t,a),r.shape));const i=Ap(r);return _p(Ud(t,vh(i,"float32")))}}}},Ub={kernelName:jl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,_p(Ap(n)))}}},Gb={kernelName:Ql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=lp(Xf(n,6),If(n));return{x:()=>lp(e,vh(r,"float32"))}}},Hb={kernelName:Kl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,vh(If(n),"float32"))}}},jb={kernelName:ql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wd(e,n.shape)}}},Kb={kernelName:Jl,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Tc.runKernel(Zl,s,n)}}},qb={kernelName:Xl,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Tc.runKernel(Yl,s,n)}}},Xb={kernelName:eu,gradFunc:(e,t,n)=>{const{dims:r}=n,s=fi(r,e.shape);return{x:()=>Gp(e,s)}}},Yb={kernelName:tu,gradFunc:e=>({x:()=>df(e)})},Jb={kernelName:nu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>_p(Ud(e,lp(Qf(n,1.5),2)))}}},Zb=Bc({logicalNot_:function(e){const t={x:Lc(e,"x","logicalNot","bool")};return Tc.runKernel(fl,t)}}),Qb={kernelName:su,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>vh(df(n),"float32"),t:()=>lp(e,vh(n,e.dtype)),e:()=>lp(e,vh(Zb(n),e.dtype))}}},ey={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tp(n,td(0)),r=td(Og),s=td(Lg),a=lp(e,s),i=lp(lp(e,r),ip(vh(n,"float32")));return hf(t,a,i)}}}},ty={kernelName:cu,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,lp(n,up(td(1),n)))}}},ny={kernelName:uu,gradFunc:e=>({x:()=>df(e)})},ry=Bc({cos_:function(e){const t={x:Lc(e,"x","cos")};return Tc.runKernel(Io,t)}}),sy={kernelName:ou,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(ry(vh(n,"float32")),e)}}},ay=Bc({cosh_:function(e){const t={x:Lc(e,"x","cosh")};return Tc.runKernel($o,t)}}),iy={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(ay(vh(n,"float32")),e)}}},oy={kernelName:iu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Uh(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Op(e,u)}}},ly={kernelName:mu,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=lp(e,r);return{logits:()=>up(a,lp(cp(a,[s],!0),r))}}},uy={kernelName:hu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,Kp(n))}}},cy=Bc({batchToSpaceND_:function(e,t,n){const r=Lc(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));ri(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ri(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ri(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Tc.runKernel(lo,a,i)}}),hy={kernelName:fu,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>cy(e,r,s)}}},dy={kernelName:gu,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Td(e,r)}}},py=[fm,gm,mm,bm,ym,xm,vm,wm,km,Im,$m,Nm,Sm,Tm,Am,_m,Fm,Dm,Mm,Om,Lm,zm,Pm,Bm,Vm,Gm,jm,qm,Xm,Ym,Vb,Jm,Zm,Qm,eb,tb,rb,nb,ab,ob,cb,hb,db,pb,fb,gb,mb,bb,yb,vb,kb,kb,$b,Cb,Eb,Tb,Ab,Rb,_b,Fb,Db,Mb,Ob,Lb,zb,Bb,Bb,Pb,Wb,Ub,Gb,Hb,jb,Kb,qb,Xb,Yb,Jb,Qb,ey,ty,ny,sy,iy,oy,ly,uy,hy,hy,dy,dy,{kernelName:du,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,lp(nf(vh(n,"float32")),2))}}},{kernelName:vu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=td(2);return{a:()=>lp(e,lp(s,up(n,r))),b:()=>lp(e,lp(s,up(r,n)))}}},{kernelName:wu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(e,lp(vh(n,"float32"),2))}}},{kernelName:Du,gradFunc:e=>({x:()=>df(e)})},{kernelName:Iu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Kd(n.shape,r.shape);return{a:()=>{let t=e;const r=jd(n.shape,s);return r.length>0&&(t=cp(t,r)),wd(t,n.shape)},b:()=>{let t=e;const n=jd(r.shape,s);return n.length>0&&(t=cp(t,n)),wd(_p(t),r.shape)}}}},{kernelName:pu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;fi(a,r.shape).forEach((e=>{s[e]=1}));const i=wd(e,s),o=lp(i,xp(r.shape,"float32"));return{x:()=>o}}},{kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ud(e,Ap(ry(n)))}}},{kernelName:Nu,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>lp(up(td(1),Ap(n)),e)}}},{kernelName:Cu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=df(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=sd(t,qp(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=sd(t,qp(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=sd(t,qp(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=sd(t,qp(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Tu,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Ep(s);return{x:()=>pf(e,a)}}},{kernelName:Ru,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>sf(e,s)}}},{kernelName:_u,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=gp(t,df(t)),r=ep(e,n);let s=np(t,td(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Xd(s,e+1);s=dp(s,xp(r.shape,"bool"));const i=df(r);return hf(s,r,i)}(e,n)}}},{kernelName:Fu,gradFunc:e=>({x:()=>df(e)})}];for(const e of py)Hu(e);hc().prototype.abs=function(){return this.throwIfDisposed(),rd(this)};const fy=Bc({acos_:function(e){const t={x:Lc(e,"x","acos")};return Tc.runKernel(Gi,t)}});hc().prototype.acos=function(){return this.throwIfDisposed(),fy(this)};const gy=Bc({acosh_:function(e){const t={x:Lc(e,"x","acosh")};return Tc.runKernel(Hi,t)}});hc().prototype.acosh=function(){return this.throwIfDisposed(),gy(this)},hc().prototype.add=function(e){return this.throwIfDisposed(),sd(this,e)},hc().prototype.all=function(e,t){return this.throwIfDisposed(),ad(this,e,t)},hc().prototype.any=function(e,t){return this.throwIfDisposed(),id(this,e,t)},hc().prototype.argMax=function(e){return this.throwIfDisposed(),od(this,e)};const my=Bc({argMin_:function(e,t=0){const n={x:Lc(e,"x","argMin")},r={axis:t};return Tc.runKernel(Ji,n,r)}});hc().prototype.argMin=function(e){return this.throwIfDisposed(),my(this,e)},hc().prototype.asScalar=function(){return this.throwIfDisposed(),ri(1===this.size,(()=>"The array must have only 1 element.")),wd(this,[])},hc().prototype.asType=function(e){return this.throwIfDisposed(),vh(this,e)},hc().prototype.as1D=function(){return this.throwIfDisposed(),wd(this,[this.size])},hc().prototype.as2D=function(e,t){return this.throwIfDisposed(),wd(this,[e,t])},hc().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),wd(this,[e,t,n])},hc().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),wd(this,[e,t,n,r])},hc().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),wd(this,[e,t,n,r,s])};const by=Bc({asin_:function(e){const t={x:Lc(e,"x","asin")};return Tc.runKernel(Zi,t)}});hc().prototype.asin=function(){return this.throwIfDisposed(),by(this)};const yy=Bc({asinh_:function(e){const t={x:Lc(e,"x","asinh")};return Tc.runKernel(Qi,t)}});hc().prototype.asinh=function(){return this.throwIfDisposed(),yy(this)};const xy=Bc({atan_:function(e){const t={x:Lc(e,"x","atan")};return Tc.runKernel(eo,t)}});hc().prototype.atan=function(){return this.throwIfDisposed(),xy(this)};const vy=Bc({atan2_:function(e,t){let n=Lc(e,"a","atan2"),r=Lc(t,"b","atan2");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(no,s)}});hc().prototype.atan2=function(e){return this.throwIfDisposed(),vy(this,e)};const wy=Bc({atanh_:function(e){const t={x:Lc(e,"x","atanh")};return Tc.runKernel(to,t)}});hc().prototype.atanh=function(){return this.throwIfDisposed(),wy(this)},hc().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),kd(this,e,t,n,r)},hc().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),cy(this,e,t)},hc().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),$d(this,e,t,n,r,s)},hc().prototype.broadcastTo=function(e){return this.throwIfDisposed(),cf(this,e)},hc().prototype.cast=function(e){return this.throwIfDisposed(),vh(this,e)};const ky=Bc({ceil_:function(e){const t={x:Lc(e,"x","ceil")};return Tc.runKernel(ho,t)}});hc().prototype.ceil=function(){return this.throwIfDisposed(),ky(this)},hc().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Ed(this,e,t)},hc().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof cc&&(e=[e]),Td([this,...e],t)},hc().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Md(this,e,t,n,r,s,a)},hc().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Ld(this,e,t,n,r,s)},hc().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Dd(this,e,t,n,r,s,a)},hc().prototype.cos=function(){return this.throwIfDisposed(),ry(this)},hc().prototype.cosh=function(){return this.throwIfDisposed(),ay(this)},hc().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Km(this,e,t,n)};const Iy=Bc({depthToSpace_:function(e,t,n="NHWC"){const r=Lc(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ri(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ri(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ri(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Tc.runKernel(Eo,o,l)}});hc().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Iy(this,e,t)},hc().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Wd(this,e,t,n,r,s,a)};const $y=Bc({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Lc(e,"x","dilation2d"),o=Lc(t,"filter","dilation2d");ri(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ri(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ri("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=wd(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Tc.runKernel(Fo,c,h);return u?wd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});hc().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),$y(this,e,t,n,r,s)};const Ny=Bc({divNoNan_:function(e,t){let n=Lc(e,"a","div"),r=Lc(t,"b","div");[n,r]=wc(n,r);const s=Ud(n,r),a=df(s),i=qd(r,a);return hf(i,a,s)}});hc().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ny(this,e)},hc().prototype.div=function(e){return this.throwIfDisposed(),Ud(this,e)};const Cy=Bc({dot_:function(e,t){const n=Lc(e,"t1","dot"),r=Lc(t,"t2","dot");ri(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ri(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=wd(n,[1,-1]),t=wd(r,[-1,1]),s=bp(e,t);return wd(s,[])}if(1===n.rank&&2===r.rank){const e=wd(n,[1,-1]),t=wd(r,[r.shape[0],r.shape[1]]),s=bp(e,t);return wd(s,[s.size])}if(2===n.rank&&1===r.rank){const e=wd(r,[-1,1]),t=bp(n,e);return wd(t,[t.size])}{const e=wd(r,[r.shape[0],r.shape[1]]);return bp(n,e)}}});hc().prototype.dot=function(e){return this.throwIfDisposed(),Cy(this,e)},hc().prototype.elu=function(){return this.throwIfDisposed(),Gd(this)},hc().prototype.equal=function(e){return this.throwIfDisposed(),qd(this,e)};const Sy=Bc({erf_:function(e){let t=Lc(e,"x","erf");ri("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=vh(t,"float32"));const n={x:t};return Tc.runKernel(Po,n)}});hc().prototype.erf=function(){return this.throwIfDisposed(),Sy(this)},hc().prototype.exp=function(){return this.throwIfDisposed(),ip(this)},hc().prototype.expandDims=function(e){return this.throwIfDisposed(),Xd(this,e)};const Ey=Bc({expm1_:function(e){const t={x:Lc(e,"x","expm1")};return Tc.runKernel(Go,t)}});hc().prototype.expm1=function(){return this.throwIfDisposed(),Ey(this)},hc().prototype.fft=function(){return this.throwIfDisposed(),bf(this)},hc().prototype.flatten=function(){return this.throwIfDisposed(),wd(this,[this.size])},hc().prototype.floor=function(){return this.throwIfDisposed(),Qd(this)},hc().prototype.floorDiv=function(e){return this.throwIfDisposed(),Vd(this,e)},hc().prototype.gather=function(e,t){return this.throwIfDisposed(),ep(this,e,t)},hc().prototype.greaterEqual=function(e){return this.throwIfDisposed(),np(this,e)},hc().prototype.greater=function(e){return this.throwIfDisposed(),tp(this,e)},hc().prototype.ifft=function(){return this.throwIfDisposed(),xf(this)},hc().prototype.irfft=function(){return this.throwIfDisposed(),vf(this)};const Ty=Bc({isFinite_:function(e){const t={x:Lc(e,"x","isFinite")};return Tc.runKernel(sl,t)}});hc().prototype.isFinite=function(){return this.throwIfDisposed(),Ty(this)};const Ay=Bc({isInf_:function(e){const t={x:Lc(e,"x","isInf")};return Tc.runKernel(al,t)}});hc().prototype.isInf=function(){return this.throwIfDisposed(),Ay(this)};const Ry=Bc({isNaN_:function(e){const t={x:Lc(e,"x","isNaN")};return Tc.runKernel(il,t)}});hc().prototype.isNaN=function(){return this.throwIfDisposed(),Ry(this)},hc().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rp(this,e)},hc().prototype.lessEqual=function(e){return this.throwIfDisposed(),Xf(this,e)},hc().prototype.less=function(e){return this.throwIfDisposed(),Ib(this,e)};const _y=Bc({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Lc(e,"x","localResponseNormalization");ri(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),ri(ui(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=wd(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Tc.runKernel(ml,l,u);return o?wd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});hc().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),_y(this,e,t,n,r)};const Fy=Bc({logSigmoid_:function(e){const t=Lc(e,"x","logSigmoid");return ed((e=>({value:_p(ef(_p(e))),gradFunc:t=>lp(t,Kp(_p(e)))})))(t)}});hc().prototype.logSigmoid=function(){return this.throwIfDisposed(),Fy(this)},hc().prototype.logSoftmax=function(e){return this.throwIfDisposed(),hp(this,e)},hc().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ug(this,e,t)},hc().prototype.log=function(){return this.throwIfDisposed(),ap(this)},hc().prototype.log1p=function(){return this.throwIfDisposed(),lg(this)},hc().prototype.logicalAnd=function(e){return this.throwIfDisposed(),dp(this,e)},hc().prototype.logicalNot=function(){return this.throwIfDisposed(),Zb(this)};const Dy=Bc({logicalOr_:function(e,t){const n=Lc(e,"a","logicalOr","bool"),r=Lc(t,"b","logicalOr","bool");Kd(n.shape,r.shape);const s={a:n,b:r};return Tc.runKernel(gl,s)}});hc().prototype.logicalOr=function(e){return this.throwIfDisposed(),Dy(this,e)};const My=Bc({logicalXor_:function(e,t){const n=Lc(e,"a","logicalXor","bool"),r=Lc(t,"b","logicalXor","bool");return Kd(n.shape,r.shape),dp(Dy(e,t),Zb(dp(e,t)))}});hc().prototype.logicalXor=function(e){return this.throwIfDisposed(),My(this,e)},hc().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),bp(this,e,t,n)},hc().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),pp(this,e,t,n,r)},hc().prototype.max=function(e,t){return this.throwIfDisposed(),op(this,e,t)},hc().prototype.maximum=function(e){return this.throwIfDisposed(),gp(this,e)},hc().prototype.mean=function(e,t){return this.throwIfDisposed(),mp(this,e,t)},hc().prototype.min=function(e,t){return this.throwIfDisposed(),vp(this,e,t)},hc().prototype.minimum=function(e){return this.throwIfDisposed(),wp(this,e)};const Oy=Bc({mirrorPad_:function(e,t,n){ri("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Lc(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ri(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ri(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ri(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Tc.runKernel(El,i,a)}});hc().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Oy(this,e,t)};const Ly=Bc({mod_:function(e,t){let n=Lc(e,"a","mod"),r=Lc(t,"b","mod");[n,r]=wc(n,r);const s={a:n,b:r};return Tc.runKernel(Tl,s)}});hc().prototype.mod=function(e){return this.throwIfDisposed(),Ly(this,e)},hc().prototype.mul=function(e){return this.throwIfDisposed(),lp(this,e)},hc().prototype.neg=function(){return this.throwIfDisposed(),_p(this)},hc().prototype.norm=function(e,t,n){return this.throwIfDisposed(),tg(this,e,t,n)},hc().prototype.notEqual=function(e){return this.throwIfDisposed(),Fp(this,e)},hc().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Dp(this,e,t,n)},hc().prototype.onesLike=function(){return this.throwIfDisposed(),Mp(this)},hc().prototype.pad=function(e,t){return this.throwIfDisposed(),Op(this,e,t)};const zy=Bc({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Lc(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=wd(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ri(xd(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=ud(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?o:Rm(o,c,p),b=("avg"===n?()=>kd(m,t,a,g):()=>pp(m,t,a,g))(),y=d?b:cy(b,c,f);return l?wd(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});hc().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),zy(this,e,t,n,r,s)},hc().prototype.pow=function(e){return this.throwIfDisposed(),Qf(this,e)},hc().prototype.prelu=function(e){return this.throwIfDisposed(),Lp(this,e)};const By=Bc({prod_:function(e,t=null,n=!1){let r=Lc(e,"x","prod");"bool"===r.dtype&&(r=vh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Tc.runKernel(Ul,s,a)}});hc().prototype.prod=function(e,t){return this.throwIfDisposed(),By(this,e,t)};const Py=Bc({reciprocal_:function(e){const t={x:Lc(e,"x","reciprocal")};return Tc.runKernel(jl,t)}});hc().prototype.reciprocal=function(){return this.throwIfDisposed(),Py(this)},hc().prototype.relu=function(){return this.throwIfDisposed(),Up(this)},hc().prototype.relu6=function(){return this.throwIfDisposed(),kf(this)},hc().prototype.reshapeAs=function(e){return this.throwIfDisposed(),wd(this,e.shape)},hc().prototype.reshape=function(e){return this.throwIfDisposed(),wd(this,e)},hc().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),jf(this,e,t,n)},hc().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Kf(this,e,t,n)},hc().prototype.reverse=function(e){return this.throwIfDisposed(),Gp(this,e)},hc().prototype.rfft=function(){return this.throwIfDisposed(),yf(this)},hc().prototype.round=function(){return this.throwIfDisposed(),Yf(this)},hc().prototype.rsqrt=function(){return this.throwIfDisposed(),sb(this)},hc().prototype.selu=function(){return this.throwIfDisposed(),Hp(this)},hc().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),jp(this,e,t,n,r,s,a)},hc().prototype.sigmoid=function(){return this.throwIfDisposed(),Kp(this)};const Wy=Bc({sign_:function(e){const t={x:Lc(e,"x","sign")};return Tc.runKernel(uu,t)}});hc().prototype.sign=function(){return this.throwIfDisposed(),Wy(this)},hc().prototype.sin=function(){return this.throwIfDisposed(),Um(this)},hc().prototype.sinh=function(){return this.throwIfDisposed(),Hm(this)},hc().prototype.slice=function(e,t){return this.throwIfDisposed(),qp(this,e,t)},hc().prototype.softmax=function(e){return this.throwIfDisposed(),Qp(this,e)},hc().prototype.softplus=function(){return this.throwIfDisposed(),ef(this)},hc().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Rm(this,e,t)},hc().prototype.split=function(e,t){return this.throwIfDisposed(),tf(this,e,t)},hc().prototype.sqrt=function(){return this.throwIfDisposed(),nf(this)},hc().prototype.square=function(){return this.throwIfDisposed(),Ap(this)},hc().prototype.squaredDifference=function(e){return this.throwIfDisposed(),og(this,e)},hc().prototype.squeeze=function(e){return this.throwIfDisposed(),rf(this,e)},hc().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof cc?[this,e]:[this,...e];return sf(n,t)},hc().prototype.step=function(e){return this.throwIfDisposed(),If(this,e)};const Vy=Bc({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Lc(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Tc.runKernel(ku,u,c)}});hc().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Vy(this,e,t,n,r,s,a,i,o)},hc().prototype.sub=function(e){return this.throwIfDisposed(),up(this,e)},hc().prototype.sum=function(e,t){return this.throwIfDisposed(),cp(this,e,t)};const Uy=Bc({tan_:function(e){const t={x:Lc(e,"x","tan")};return Tc.runKernel($u,t)}});hc().prototype.tan=function(){return this.throwIfDisposed(),Uy(this)},hc().prototype.tanh=function(){return this.throwIfDisposed(),af(this)},hc().prototype.tile=function(e){return this.throwIfDisposed(),Yd(this,e)},hc().prototype.toBool=function(){return this.throwIfDisposed(),vh(this,"bool")},hc().prototype.toFloat=function(){return this.throwIfDisposed(),vh(this,"float32")},hc().prototype.toInt=function(){return this.throwIfDisposed(),vh(this,"int32")};const Gy=Bc({topk_:function(e,t=1,n=!0){const r=Lc(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Tc.runKernel(Su,a,i);return{values:o,indices:l}}});hc().prototype.topk=function(e,t){return this.throwIfDisposed(),Gy(this,e,t)},hc().prototype.transpose=function(e){return this.throwIfDisposed(),pf(this,e)};const Hy=Bc({unique_:function(e,t=0){const n=Lc(e,"x","unique","string_or_numeric");ri(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Tc.runKernel(Au,r,s);return{values:a,indices:i}}});let jy;function Ky(){return null==jy&&(jy=Tc.backend.epsilon()),jy}hc().prototype.unique=function(e){return this.throwIfDisposed(),Hy(this,e)},hc().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ib(this,e,t)},hc().prototype.unstack=function(e){return this.throwIfDisposed(),uf(this,e)},hc().prototype.where=function(e,t){return this.throwIfDisposed(),hf(e,this,t)},hc().prototype.zerosLike=function(){return this.throwIfDisposed(),df(this)};class qy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qy.prototype)}}class Xy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xy.prototype)}}class Yy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yy.prototype)}}class Jy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jy.prototype)}}class Zy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zy.prototype)}}function Qy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ex(e,t){if(!e)throw new Zy(t)}function tx(e,t){let n=0;for(const r of e)r===t&&n++;return n}function nx(e){return 1===e.length?e[0]:e}function rx(e){return Array.isArray(e)?e:[e]}function sx(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ax(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let ix={};function ox(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function lx(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>lx(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?lx(t):e[n]=t.value)}}}function ux(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in ix)a=ix[s];else if(a=t[s],null==a)throw new Yy(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Yy(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in ix?[o,l]=ix.className:i in t&&([o,l]=t[i]),null==o)throw new Yy(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(ix))e[t]=ix[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ix);for(const e of Object.keys(n))ix[e]=n[e];lx(a.config);const r=l(o,a.config,n,s);return ix=Object.assign({},t),r}{const e=Object.assign({},ix);for(const e of Object.keys(n))ix[e]=n[e];const t=new o(a.config);return ix=Object.assign({},e),t}}}function cx(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function hx(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function dx(e){if(null==e)throw new Yy(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function px(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Yy(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function fx(e,t,n=0,r=1/0){return ex(n>=0),ex(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function gx(e,t){Array.isArray(e)?(ri(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>gx(e,`element ${n+1} of ${t}`)))):ri(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${mx(e)}.`))}function mx(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>mx(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function bx(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function yx(e,t){return Yh((()=>nf(cp(lp(e,e),t,!0))))}class xx extends Hh{getConfig(){return{}}}class vx extends xx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yh((()=>{const t=yx(e,this.axis),n=Ed(t,0,this.maxValue);return lp(e,Ud(n,sd(Ky(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}vx.className="MaxNorm",Kh(vx);class wx extends xx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yh((()=>Ud(e,sd(Ky(),yx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}wx.className="UnitNorm",Kh(wx);class kx extends xx{apply(e){return Up(e)}}kx.className="NonNeg",Kh(kx);class Ix extends xx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yh((()=>{const t=yx(e,this.axis),n=sd(lp(this.rate,Ed(t,this.minValue,this.maxValue)),lp(1-this.rate,t));return lp(e,Ud(n,sd(Ky(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ix.className="MinMaxNorm",Kh(Ix);const $x={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Nx(e){return ox(e)}function Cx(e,t={}){return ux(e,jh.getMap().classNameMap,t,"constraint")}function Sx(e){return null==e?null:"string"==typeof e?Cx({className:e in $x?$x[e]:e,config:{}}):e instanceof xx?e:Cx(e)}const Ex=["channelsFirst","channelsLast"],Tx=["nearest","bilinear"],Ax=["valid","same","causal"],Rx=["max","avg"],_x=["sum","mul","concat","ave"],Fx=new Map;function Dx(e){px(Ex,"DataFormat",e)}function Mx(e){px(Ax,"PaddingMode",e)}function Ox(e){px(Rx,"PoolMode",e)}const Lx=[];function zx(e,t){Lx.push(e);try{const e=t();return Lx.pop(),e}catch(e){throw Lx.pop(),e}}function Bx(e){if(!Vx(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Lx.length?"":Lx.join("/")+"/")+e}function Px(e){if(!Vx(e))throw new Error("Not a valid tensor name: '"+e+"'");Fx.has(e)||Fx.set(e,0);const t=Fx.get(e);if(Fx.set(e,Fx.get(e)+1),t>0){const n=`${e}_${t}`;return Fx.set(n,1),n}return e}const Wx=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Vx(e){return!!e.match(Wx)}function Ux(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Gx(e){return of(e=Array.isArray(e)?new Float32Array(e):e)}function Hx(e){return vp(Gx(e)).dataSync()[0]}function jx(e){return op(Gx(e)).dataSync()[0]}function Kx(e,t){if(t<e)throw new Yy(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function qx(e,t){return e.asType(t)}function Xx(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Yx(e,t,n){return Yh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return Yp(e,[t,0],[n,e.shape[1]]);case 3:return Jp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Zp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return qp(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return qp(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Yy(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Jx(e,t,n){return Yh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return Yp(e,[0,t],[e.shape[0],n]);case 3:return Jp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Zp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Yy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Zx(e,t,n,r){return Yh((()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:switch(r){case 1:return Yx(e,t,n);case 2:return Jx(e,t,n);default:throw new Yy(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Yx(e,t,n);case 2:return Jp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Jx(e,t,n);default:throw new Yy(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Yx(e,t,n);case 2:return Zp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Zp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Jx(e,t,n);default:throw new Yy(`The axis is not within the rank of the tensor ${r}`)}default:throw new Yy(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Qx(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Td(e,t)}function ev(e,t){switch(e.rank){case 1:return Ad([e,t]);case 2:return Rd([e,t],0);case 3:return _d([e,t],0);case 4:return Fd([e,t],0);default:throw new Yy(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function tv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Yy(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Yd(e,t)}function nv(e,t=0,n=1,r,s){return Wp(e,t,n,r,s)}function rv(e,t,n,r){if(e.rank<2||t.rank<2)throw new Jy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Jy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Rf({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?iv(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return Rf({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?iv(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function sv(e,t,n){return Yh((()=>(t=Array.isArray(t)?of(t,"int32"):t.toInt(),ep(e,t,n))))}function av(e){return lp(e,e)}function iv(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Yy(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Yy(`Unsupported input rank by biasAdd: ${t.rank}`)}function ov(e,t,n){return Yh((()=>(null==n&&(n="channelsLast"),Dx(n),e.add(iv(e.rank,t,n)))))}function lv(e,t,n,r){return Yh((()=>ff(e,t,n,r)))}function uv(e,t,n=!1){return n?e():t()}const cv=["fanIn","fanOut","fanAvg"],hv=["normal","uniform","truncatedNormal"];class dv extends Hh{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class pv extends dv{apply(e,t){return yp(e,t)}}pv.className="Zeros",Kh(pv);class fv extends dv{apply(e,t){return xp(e,t)}}fv.className="Ones",Kh(fv);class gv extends dv{constructor(e){if(super(),"object"!=typeof e)throw new Yy(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Yy(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Yh((()=>lp(td(this.value),xp(e,t))))}getConfig(){return{value:this.value}}}gv.className="Constant",Kh(gv);class mv extends dv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Vp(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}mv.className="RandomUniform",Kh(mv);class bv extends dv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Jy(`randomNormal does not support dType ${t}.`);return nv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}bv.className="RandomNormal",Kh(bv);class yv extends dv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Jy(`truncatedNormal does not support dType ${t}.`);return lf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}yv.className="TruncatedNormal",Kh(yv);class xv extends dv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Yh((()=>{if(2!==e.length||e[0]!==e[1])throw new Yy("Identity matrix initializer can only be used for 2D square matrices.");return lp(this.gain,Jd(e[0]))}))}getConfig(){return{gain:this.gain}}}xv.className="Identity",Kh(xv);class vv extends dv{constructor(e){if(super(),e.scale<0)throw new Yy(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){px(cv,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){px(hv,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Dx(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ux(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Ux(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Ux(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Jy(`${this.getClassName()} does not support dType ${t}.`);return lf(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Vp(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}vv.className="VarianceScaling",Kh(vv);class wv extends vv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vv.className}}wv.className="GlorotUniform",Kh(wv);class kv extends vv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vv.className}}kv.className="GlorotNormal",Kh(kv);class Iv extends vv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vv.className}}Iv.className="HeNormal",Kh(Iv);class $v extends vv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vv.className}}$v.className="HeUniform",Kh($v);class Nv extends vv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return vv.className}}Nv.className="LeCunNormal",Kh(Nv);class Cv extends vv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return vv.className}}Cv.className="LeCunNormal",Kh(Cv);class Sv extends dv{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Jy("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Yh((()=>{if(e.length<2)throw new Jy("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=nv(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=cg.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),lp(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sv.className="Orthogonal",Kh(Sv);const Ev={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Tv(e,t={}){return ux(e,jh.getMap().classNameMap,t,"initializer")}function Av(e){return ox(e)}function Rv(e){if("string"==typeof e){const t=e in Ev?Ev[e]:e;if("GlorotNormal"===t)return new kv;if("GlorotUniform"===t)return new wv;if("HeNormal"===t)return new Iv;if("HeUniform"===t)return new $v;if("LeCunNormal"===t)return new Nv;if("LeCunUniform"===t)return new Cv;{const e={};return e.className=t,e.config={},Tv(e)}}return e instanceof dv?e:Tv(e)}let _v=0;function Fv(){return _v++}const Dv={};function Mv(e=""){return e in Dv||(Dv[e]=0),Dv[e]+=1,e+Dv[e].toString()}function Ov(e){return Array.isArray(e)&&Array.isArray(e[0])}function Lv(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function zv(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Yy(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Bv(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Yy(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Pv(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Wv{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Fv(),n=null==n?"Variable":n,this.originalName=Bx(n),this.name=Px(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return Tc.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Vv(e){return e.map((e=>e.read()))}function Uv(e){e.forEach((e=>{e[0].write(e[1])}))}class Gv{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Hv{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Fv(),null!=a&&(this.originalName=Bx(a),this.name=Px(this.originalName)),this.rank=t.length}}let jv=0;class Kv{constructor(e,t){this.callArgs=t,this.id=jv++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let qv=0;class Xv extends Hh{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=qv++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=sx(e)+"_"+Mv(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Xy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Yy(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return nx(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return nx(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new qy(`Layer ${this.name} is not connected, no input to return.`);return nx(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new qy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return nx(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=rx(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=rx(this.inputSpec);if(e.length!==t.length)throw new Yy(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Yy(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Yy(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Yy(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Yy(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Yy(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Yy(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=rx(e);let r=!0;for(const e of n)if(!(e instanceof Hv)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Hv){s=!1;break}if(r===s)throw new Yy("Arguments to apply() must be all SymbolicTensors or all Tensors");return zx(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of rx(e))t.push(n.shape);this.build(nx(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=rx(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=nx(a),null!=this.activityRegularizer)throw new Jy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=rx(e);const t=[];for(const n of e)t.push(n.shape);return nx(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Hv(a,n,this,rx(e),t,this.name,r))):new Hv(a,r,this,rx(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Jy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qy(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new qy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Xy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Pv(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Vv(e?this.trainableWeights:this.weights)}setWeights(e){Yh((()=>{const t=this.weights;if(t.length!==e.length)throw new Yy(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Vv(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!li(a.shape,o.shape))throw new Yy(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Uv(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Yy(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Rv("zeros"));const o=r.apply(t,n),l=new Wv(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=rx(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=rx(e);t=rx(t),n=rx(n),r=rx(r),s=Lv(s),a=Lv(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Kv({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Yv(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Yv(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Jv extends Xv{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Mv("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Yy("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Yy("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Yy("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Hv(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Kv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Yy(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Zv(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Jh(r)}}function Qv(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ew;Jv.className="InputLayer",Kh(Jv),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ew||(ew={}));class tw{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class nw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class rw extends tw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Yh((()=>sd(this.totals[e],lp(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Yh((()=>{const n=lp(Ud(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Zh(t[e])})))}}class sw extends tw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class aw extends tw{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ki(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Xu();return(...s)=>{const a=Xu();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Zv(n),r.push(this.yield(e,t,n))),r.push(wg()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Zv(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Zv(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(wg()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Zv(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Zv(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(wg()):ki(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Zv(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Zv(e),await this.trainEnd(e))}}function iw(e,t){return null==e&&(e={}),e instanceof tw?[e]:Array.isArray(e)&&e[0]instanceof tw?e:rx(e).map((e=>new aw(e,t)))}class ow{constructor(){}static registerCallbackConstructor(e,t){ri(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ow.checkForDuplicate(t),null==ow.constructors[e]&&(ow.constructors[e]=[]),ow.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ow.constructors)ow.constructors[+t].forEach((t=>{if(t===e)throw new Yy("Duplicate callback constructor.")}))}static clear(){ow.constructors={}}static createCallbacks(e){const t=[];for(const n in ow.constructors){const r=+n;e>=r&&t.push(...ow.constructors[r])}return t.map((e=>new e))}}function lw(e,t,n,r,s,a,i,o,l){const u=new sw,c=[new rw,...ow.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new nw(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function uw(e,t={},n=!1){return ux(e,jh.getMap().classNameMap,t,"layer",n)}function cw(e,t){return Yh((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=cp(av(e),t,!0),r=Zd(n.shape,Ky()),s=nf(gp(n,r));return Ud(e,s)}))}function hw(e,t){return Yh((()=>mp(av(up(t,e)),-1)))}function dw(e,t){return Yh((()=>mp(rd(up(t,e)),-1)))}function pw(e,t){return Yh((()=>{const n=up(e,t),r=Ed(rd(e),Ky(),Number.MAX_VALUE),s=rd(Ud(n,r));return lp(100,mp(s,-1))}))}function fw(e,t,n=!1){return Yh((()=>{if(n)t=Qp(t);else{const e=cp(t,t.shape.length-1,!0);t=Ud(t,e)}return t=Ed(t,Ky(),1-Ky()),_p(cp(lp(e.toFloat(),ap(t)),t.shape.length-1))}))}function gw(e,t,n=!1){return Yh((()=>{const r=Qd(function(e){const t=[Ux(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Ed(t,Ky(),1-Ky())).shape;return fw(Dp(r,s[s.length-1]).reshape(s),t,n)}))}function mw(e,t){return Yh((()=>{let n;return n=Ed(t,Ky(),1-Ky()),n=ap(Ud(n,up(1,n))),mp(function(e,t){if(!li(e.shape,t.shape))throw new Yy(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Yh((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function bw(e,t){return Yh((()=>{const n=cw(e,-1),r=cw(t,-1),s=lp(n,r);return _p(cp(s,-1))}))}ow.constructors={};const yw={meanSquaredError:hw,meanAbsoluteError:dw,meanAbsolutePercentageError:pw,meanSquaredLogarithmicError:function(e,t){return Yh((()=>{const n=Ed(t,Ky(),Number.MAX_VALUE),r=ap(sd(1,n)),s=Ed(e,Ky(),Number.MAX_VALUE),a=ap(sd(1,s));return mp(av(up(r,a)),-1)}))},squaredHinge:function(e,t){return Yh((()=>{const n=gp(0,up(1,lp(e,t)));return mp(av(n),-1)}))},hinge:function(e,t){return Yh((()=>{const n=gp(0,up(1,lp(e,t)));return mp(n,-1)}))},categoricalHinge:function(e,t){return Yh((()=>{const n=cp(lp(e,t),-1),r=op(lp(up(1,e),t),-1);return gp(0,sd(1,up(r,n)))}))},logcosh:function(e,t){return Yh((()=>{const n=Math.log(2),r=up(t,e),s=up(sd(r,ef(lp(-2,r))),n);return mp(s,-1)}))},categoricalCrossentropy:fw,sparseCategoricalCrossentropy:gw,binaryCrossentropy:mw,kullbackLeiblerDivergence:function(e,t){return Yh((()=>{const n=Ed(e,Ky(),1),r=Ed(t,Ky(),1);return cp(lp(e,ap(Ud(n,r))),-1)}))},poisson:function(e,t){return Yh((()=>{const n=ap(sd(Ky(),t));return mp(up(t,lp(e,n)),-1)}))},cosineProximity:bw};function xw(e){if("string"==typeof e){if(e in yw)return yw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Yy(t)}return e}function vw(e,t){return Yh((()=>{const n=lp(.5,Mp(t)),r=qx(tp(t,n),e.dtype);return mp(qd(e,r),-1)}))}function ww(e,t){return Yh((()=>qx(qd(od(e,-1),od(t,-1)),"float32")))}function kw(e,t){return mw(e,t)}function Iw(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),qd(e,t).asType("float32")}const $w=fw,Nw=gw,Cw={binaryAccuracy:vw,categoricalAccuracy:ww,precision:function(e,t){return Yh((()=>{const n=function(e,t){return Yh((()=>dp(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return Yh((()=>dp(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return hf(tp(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:$w,sparseCategoricalCrossentropy:Nw,mse:hw,MSE:hw,mae:dw,MAE:dw,mape:pw,MAPE:pw,cosine:bw};function Sw(e){if("string"==typeof e&&e in Cw)return Cw[e];if("string"!=typeof e&&null!=e)return e;throw new Yy(`Unknown metric ${e}`)}function Ew(e){if(ex(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(yw))if(yw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Cw))if(Cw[n]===e){t=n;break}return void 0!==t?t:e.name}}function Tw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Aw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Aw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Aw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Aw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Rw(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function _w(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Rw([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Fw(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];Rw([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)Rw(["","","",a[e]],t,r)}function Dw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Mw(e,t){if(null===e)return null;if("string"==typeof e)return ax(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Dw(t,s,r)?n.push(r):n.push(Mw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ax(n);t[e]=Mw(r,e)}}return t}}function Ow(e,t){if(null==e)return null;if("string"==typeof e)return sx(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Dw(t,s,r)?n.push(r):n.push(Ow(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[sx(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Ow(r,n):r}return t}}class Lw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Lw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Yy(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return vh(t,e.dtype)}catch(n){throw new Yy(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Hv){if(null==this.id2Value[e.id])throw new Yy(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Yy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Hv){if(null==this.id2Value[e.id])throw new Yy(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Yy(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Jh(this.id2Mask)}}const zw={},Bw={};function Pw(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==zw[c]){const e=function(e,t){ri(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Vw(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Vw(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Ww(r)}}(i,t);h=e.sorted,d=e.recipientCounts,zw[c]=h,Bw[c]=d}h=zw[c],d={},s||Object.assign(d,Bw[c]);const p=new Lw(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Xh().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof Jv)continue;const u=[],c=[],f=[];let g=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=rx(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Uw(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||Jh(f)}return p.disposeMasks(),a?l:l[0]}function Ww(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Vw(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Uw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Gw extends Xv{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Mv(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],hx(this.inputs).length!==this.inputs.length)throw new Yy(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);hx(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ex(0===n,"input layer has >1 nodes"),ex(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Jv))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Xy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Gw.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(cx);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Gw&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(cx);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Xy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new Xy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Kv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Yy("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Yy(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Yy(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Yy(`${e.length} of ${r} weights are not set: ${e}`)}Uv(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.6.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Ow(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Yh((()=>{e=rx(e);const n=new Lw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Pw(this.outputs,n,t)}))}computeMask(e,t){return Yh((()=>{let n;return e=rx(e),n=null==t?Qy(null,e.length):rx(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Lv(e);if(t.length!==this.inputLayers.length)throw new Yy(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cx);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Lv(t.computeOutputShape(nx(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];ex(t in n),s.push(n[t])}return nx(s)}runInternalGraph(e,t){null==t&&(t=Qy(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(cx);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=rx(t.call(e,u)),l=rx(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=rx(t.call(r,u)),l=rx(t.computeMask(r,i));if(t.activityRegularizer)throw new Jy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){ex(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Gw?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Gw.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Yy(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Yy("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Yy(`No such layer: ${e}`)}calculateLosses(){return Yh((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Gw.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Gw.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Gw.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Gw.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Gw.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(nx(n),r)}function l(e){const n=e.name,a=uw(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Yy(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!dx(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];ex(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ex(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Yy("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Yh((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Hw(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function jw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Yh((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Jh(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),of(s,"float32")}return null}function Kw(e,t){return lp(e,t)}function qw(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ri(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Xw("input",e.inputNames,n),i=Xw("output",e.outputNames,r),o=a[0].shape[0];ri(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ri(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)ri(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ri(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Xw(e,t,n){if(n instanceof cc)return[n];if(Array.isArray(n))return ri(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Yy(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Yw(e){return"function"==typeof e.iterator}function Jw(e){ri(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Zw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Yx(e,t,n-t))):Yx(e,t,n-t)}function Qw(e,t){return Yh((()=>null==e?null:Array.isArray(e)?e.map((e=>Qw(e,t))):sv(e,"int32"===t.dtype?t:t.toInt())))}function ek(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function tk(e){const t=[];e instanceof cc&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Xx(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function nk(e,t){if(null==e)return;const n=[];if(t instanceof cc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof cc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function rk(e){return Array.isArray(e)}function sk(e){return!function(e){return e instanceof cc}(e)&&!rk(e)}function ak(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(rk(e)&&e.length>0)t=!0;else if(sk(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Yy(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(sk(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Yy(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(rk(e)){if((e=e).length!==t.length)throw new Yy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Yy(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=tk(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Yy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Yy(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function ik(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Yy(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Yy(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Yy(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Yy(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class ok extends Gw{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Yy("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Rw(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?_w(o[e],n,r):Fw(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Pv(e.collectedTrainableWeights):Pv(e.trainableWeights),t}(e),u=Pv(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>xg.adagrad(.01),Adadelta:()=>xg.adadelta(1,.95,Ky()),Adam:()=>xg.adam(.001,.9,.999,Ky()),Adamax:()=>xg.adamax(.002,.9,.999,Ky(),0),RMSProp:()=>xg.rmsprop(.001,.9,0,Ky()),SGD:()=>xg.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Yy(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof nd))throw new Yy("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Yy(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>xw(e)))}else{const n=xw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Yy(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(xw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],zx("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};zx("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===mw?-1!==["accuracy","acc"].indexOf(i)?r=vw:-1!==["crossentropy","ce"].indexOf(i)&&(r=kw):this.lossFunctions[e]===gw?-1!==["accuracy","acc"].indexOf(i)?r=Iw:-1!==["crossentropy","ce"].indexOf(i)&&(r=Nw):-1!==["accuracy","acc"].indexOf(i)?r=ww:-1!==["crossentropy","ce"].indexOf(i)&&(r=$w),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Sw(i);a=e,n=""+Ew(i)}let t;zx(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Jw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return nx(this.testLoop(i,a,r,n.verbose,n.steps))}finally{nk(s[0],e),nk(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Jy("Verbose mode is not implemented yet.");ri(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Yh((()=>{if(t.value){const{xs:n,ys:r}=qw(e,t.value),i=n.concat(r),u=Yh((()=>s(i)));if(Jh(i),0===l)for(let e=0;e<u.length;++e)a.push(td(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Yh((()=>sd(a[e],lp(c,t)))),l>0&&Jh(n)}Jh(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ud(a[e],o),Jh(t)}return nx(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Yy(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Yy(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Yy("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Lw;if(e instanceof cc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Yy(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Yy(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Pw(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Qy(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Yy(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Yh((()=>{const r=this.checkNumSamples(e);if(n)throw new Jy("Verbose predictLoop() is not implemented yet.");const s=ek(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Yh((()=>{const n=s[t][0],r=s[t][1],a=Zw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Lw(i);return Pw(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return nx(a.map((e=>Td(e,0))))}))}predict(e,t={}){const n=tk(e);ik(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Jw(r),this.predictLoop(n,r)}finally{nk(n,e)}}predictOnBatch(e){ik(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Xy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===gw?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=hx(e.map((e=>e.shape[0])));r.sort();const s=hx(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Yy(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Yy(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!li(r,s))throw new Yy(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=ak(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ak(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[hw,mw,fw];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===fw&&1===a.shape[a.shape.length-1])throw new Yy(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Yy(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Yy(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Hw(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await jw(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Yh((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Jy("Verbose mode is not implemented yet.");if(null!=s)throw new Jy("steps mode in testLoop() is not implemented yet");{const r=ek(a,n),s=of(Kx(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=Yx(s,a,o-a),u=Qw(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(td(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=sd(i[e],lp(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ud(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;tx(e,r)>1&&(s+=`_${tx(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Lw(e),o=Pw(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Kw(n,s[e]));const a=mp(n);t.push(a),l=0===e?n:sd(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=mp(t(r[s],o[s]))}Zh(n),a.push(n)}return l=mp(l),this.calculateLosses().forEach((e=>{l=sd(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Yh((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Lw(a),o=Pw(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=mp(r(s[e],o[e]));n=0===e?a:sd(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=mp(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;Jw(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);s=p[0],a=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Jy("validationData including sample weights is not supported yet."):new Yy(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=Zw(s,e,t),s=Zw(s,0,e),u=Zw(a,e,t),a=Zw(a,0,e),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let x,v;g?(e.makeTestFunction(),x=e.testFunction,v=y.slice().concat(y.map((e=>"val_"+e)))):(x=null,f=[],v=y.slice());const w=iw(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,i,o,l,u,c,h,d,p,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=e.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=m&&(b=Kx(0,m)),null==i&&(i=1);const{callbackList:y,history:x}=lw(o,i,a,d,m,p,s,g,h);y.setModel(e),e.history=x,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};{if("batch"===c)throw new Jy("batch shuffling is not implemneted yet");c&&ei(b);const i=of(b),o=ek(m,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Yh((()=>{const d=o[c][0],p=o[c][1],f=Yx(i,d,p-d);h.batch=c,h.size=p-d;const m=Qw(n,f),b=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,Zh(n)}if(c===o.length-1&&g){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Zh(s),a["val_"+n]=s}}})),await y.onBatchEnd(c,h),Qv(h),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,b,m,y,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null)}finally{e.isTraining=!1,nk(s,t),nk(a,n),nk(l,i),nk(u,o),null!=c&&Jh(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ri(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ri(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ri(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ri(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ri(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Yw(n.validationData))ri(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Jy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=iw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=lw(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=qw(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Hw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await jw(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);Jh(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,Zh(n)}await d.onBatchEnd(h,a),Qv(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Yw(n.validationData)?rx(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):rx(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Jh(a),nx(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Xh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Xh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=sx(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>sx(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=sx(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[sx(Ew(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>sx(Ew(e))));{const e={};for(const t in this.metrics)e[t]=sx(Ew(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=uw(Mw(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ax(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ax(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ax(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ax(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ax(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Xc.getSaveHandlers(n));if(0===t.length)throw new Yy(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Yy(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Yy("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Uc(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.6.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Uc(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Kc([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Tw(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Tw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ok.className="Model",Kh(ok);class lk extends ok{}lk.className="Functional",Kh(lk);class uk extends ok{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Mv("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Yy(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof uk||e instanceof ok;let n;if(t){if(n=e,1!==n.outputs.length)throw new Yy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Yy("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Yy("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Yy("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Jv({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Yy(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Yy("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Yv(this.outputs[0])}this.inboundNodes=[],new Kv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Bv(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ok({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Xy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Xy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Xy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Xy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Yy("Legacy serialization format not supported yet.");s=t}else ri(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof uk))throw new Jy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=uw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Yy("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Yy("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}uk.className="Sequential",Kh(uk);class ck extends Hh{getConfig(){return{}}}class hk extends ck{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Jy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Gd(e)}(e,t)}}hk.className="elu",Kh(hk);class dk extends ck{apply(e){return Hp(e)}}dk.className="selu",Kh(dk);class pk extends ck{apply(e){return Up(e)}}pk.className="relu",Kh(pk);class fk extends ck{apply(e){return Yh((()=>wp(6,Up(e))))}}fk.className="relu6",Kh(fk);class gk extends ck{apply(e){return e}}gk.className="linear",Kh(gk);class mk extends ck{apply(e){return Kp(e)}}mk.className="sigmoid",Kh(mk);class bk extends ck{apply(e){return function(e){return Yh((()=>{const t=sd(.5,lp(.2,e));return Ed(t,0,1)}))}(e)}}bk.className="hardSigmoid",Kh(bk);class yk extends ck{apply(e){return ef(e)}}yk.className="softplus",Kh(yk);class xk extends ck{apply(e){return function(e){return Yh((()=>Ud(e,rd(e).add(1))))}(e)}}xk.className="softsign",Kh(xk);class vk extends ck{apply(e){return af(e)}}vk.className="tanh",Kh(vk);class wk extends ck{apply(e,t=-1){return Qp(e,t)}}wk.className="softmax",Kh(wk);class kk extends ck{apply(e,t=-1){return hp(e,t)}}kk.className="logSoftmax",Kh(kk);class Ik extends ck{apply(e,t=1){return Yh((()=>Kp(e.mul(t)).mul(e)))}}Ik.className="swish",Kh(Ik);class $k extends ck{apply(e){return Yh((()=>lp(e,af(ef(e)))))}}function Nk(e){return e.getClassName()}function Ck(e,t={}){return ux(e,jh.getMap().classNameMap,t,"activation")}function Sk(e){if(null==e){return Ck({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ck(t)}return e instanceof ck?e:Ck(e)}$k.className="mish",Kh($k);class Ek extends Hh{}class Tk extends Ek{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Yh((()=>{let t=yp([1]);return this.hasL1&&(t=sd(t,cp(lp(this.l1,rd(e))))),this.hasL2&&(t=sd(t,cp(lp(this.l2,av(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Tk.className="L1L2",Kh(Tk);const Ak={l1l2:"L1L2"};function Rk(e){return ox(e)}function _k(e,t={}){return ux(e,jh.getMap().classNameMap,t,"regularizer")}function Fk(e){return null==e?null:"string"==typeof e?_k({className:e in Ak?Ak[e]:e,config:{}}):e instanceof Ek?e:_k(e)}class Dk extends Xv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=zv(e);let n=Up(e);return null!=this.maxValue&&(n=Ed(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Dk.className="ReLU",Kh(Dk);class Mk extends Xv{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=zv(e);return rp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Mk.className="LeakyReLU",Kh(Mk);class Ok extends Xv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Rv(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Fk(e.alphaRegularizer),this.alphaConstraint=Sx(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Yy(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Bv(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Gv({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=zv(e),Lp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Av(this.alphaInitializer),alphaRegularizer:Rk(this.alphaRegularizer),alphaConstraint:Nx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ok.className="PReLU",Kh(Ok);class Lk extends Xv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Jy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=zv(e);return Gd(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Lk.className="ELU",Kh(Lk);class zk extends Xv{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=zv(e);return n.mul(qx(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}zk.className="ThresholdedReLU",Kh(zk);class Bk extends Xv{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new wk).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=zv(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Pk(e,t,n){if("number"==typeof e)return Qy(e,t);if(e.length!==t)throw new Yy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Yy(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Wk(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Vk(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+jx([n-t,0]);else{if("same"!==r)throw new Yy(`Unsupport padding mode: ${r}.`);e*=t}return e}function Uk(e,t){return Yh((()=>(Dx(t),"channelsFirst"===t?pf(e,[0,2,3,1]):e)))}function Gk(e,t){return Yh((()=>(Dx(t),"channelsFirst"===t?pf(e,[0,2,3,4,1]):e)))}function Hk(e,t,n,r=[1,1],s="valid",a,i,o=null){return Yh((()=>{if(null==a&&(a="channelsLast"),Dx(a),3!==e.rank&&4!==e.rank)throw new Yy(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Yy(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Uk(e,a);if("causal"===s)throw new Jy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ef({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=pf(l,[0,3,1,2])),l}))}Bk.className="Softmax",Kh(Bk);class jk extends Xv{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",jk.verifyArgs(t),this.rank=e,gx(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Jy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Pk(t.kernelSize,e,"kernelSize"),this.strides=Pk(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Mx(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Dx(this.dataFormat),this.activation=Sk(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Rv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Sx(t.biasConstraint),this.biasRegularizer=Fk(t.biasRegularizer),this.activityRegularizer=Fk(t.activityRegularizer),this.dilationRate=Pk(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Yy(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Yy(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Yy(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ex("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!fx(e.kernelSize,"number",1,3))throw new Yy(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Nk(this.activation),useBias:this.useBias,biasInitializer:Av(this.biasInitializer),biasRegularizer:Rk(this.biasRegularizer),activityRegularizer:Rk(this.activityRegularizer),biasConstraint:Nx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Kk extends jk{constructor(e,t){super(e,t),this.kernel=null,Kk.verifyArgs(t),this.filters=t.filters,gx(this.filters,"filters"),this.kernelInitializer=Rv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Sx(t.kernelConstraint),this.kernelRegularizer=Fk(t.kernelRegularizer)}build(e){e=Bv(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Yy(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Yh((()=>{let t;e=zv(e);const n=null==this.bias?null:this.bias.read(),r=bx(this.activation.getClassName());if(null!=r&&2===this.rank)t=Hk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Yh((()=>{if(null==a&&(a="channelsLast"),Dx(a),3!==e.shape.length)throw new Yy(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Yy(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Yy(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=pf(e,[0,2,1])),"causal"===s)throw new Jy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Md(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=ov(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Hk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Jy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Yh((()=>{if(null==a&&(a="channelsLast"),Dx(a),4!==e.rank&&5!==e.rank)throw new Yy(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Yy(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Gk(e,a);if("causal"===s)throw new Jy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=zd(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=ov(o,n)),"channelsFirst"===a&&(o=pf(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Bv(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Wk(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Av(this.kernelInitializer),kernelRegularizer:Rk(this.kernelRegularizer),kernelConstraint:Nx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Yy(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class qk extends Kk{constructor(e){super(2,e),qk.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!fx(e.kernelSize,"number",1,2))throw new Yy(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}qk.className="Conv2D",Kh(qk);class Xk extends Kk{constructor(e){super(3,e),Xk.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Yy(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Xk.className="Conv3D",Kh(Xk);class Yk extends qk{constructor(e){if(super(e),this.inputSpec=[new Gv({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Yy(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Bv(e)).length)throw new Yy("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Yy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gv({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Yh((()=>{let t=zv(e);if(4!==t.shape.length)throw new Yy(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Vk(i,c,l,this.padding),Vk(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=pf(t,[0,2,3,1]));let p=Ld(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=pf(p,[0,3,1,2])),null!=this.bias&&(p=ov(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Bv(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Vk(t[r],o,a,this.padding),t[s]=Vk(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Yk.className="Conv2DTranspose",Kh(Yk);class Jk extends Xk{constructor(e){if(super(e),this.inputSpec=[new Gv({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Yy(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Bv(e)).length)throw new Yy("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Yy("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Gv({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Yh((()=>{let t=zv(e);if(5!==t.shape.length)throw new Yy(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,Vk(o,p,c,this.padding),Vk(l,f,h,this.padding),Vk(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=pf(t,[0,2,3,4,1]));let b=Pd(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=pf(b,[0,4,1,2,3])),null!==this.bias&&(b=ov(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Bv(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Vk(t[r],u,i,this.padding),t[s]=Vk(t[s],c,o,this.padding),t[a]=Vk(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Jk.className="Conv3DTranspose",Kh(Jk);class Zk extends Kk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Yy("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Yy("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Yy(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Rv(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Fk(t.depthwiseRegularizer),this.depthwiseConstraint=Sx(t.depthwiseConstraint),this.pointwiseInitializer=Rv(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Fk(t.pointwiseRegularizer),this.pointwiseConstraint=Sx(t.pointwiseConstraint)}build(e){if((e=Bv(e)).length<this.rank+2)throw new Yy(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Yy(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Gv({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Yh((()=>{let t;if(e=zv(e),1===this.rank)throw new Jy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=pf(e,[0,2,3,1])),t=jp(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ov(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=pf(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Av(this.depthwiseInitializer),e.pointwiseInitializer=Av(this.pointwiseInitializer),e.depthwiseRegularizer=Rk(this.depthwiseRegularizer),e.pointwiseRegularizer=Rk(this.pointwiseRegularizer),e.depthwiseConstraint=Nx(this.depthwiseConstraint),e.pointwiseConstraint=Nx(this.pointwiseConstraint),e}}Zk.className="SeparableConv";class Qk extends Zk{constructor(e){super(2,e)}}Qk.className="SeparableConv2D",Kh(Qk);class eI extends Kk{constructor(e){super(1,e),eI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!fx(e.kernelSize,"number",1,1))throw new Yy(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}eI.className="Conv1D",Kh(eI);class tI extends Xv{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Yh((()=>{if(e=zv(e),"channelsLast"===this.dataFormat){const t=Zx(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zx(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Zx(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zx(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}tI.className="Cropping2D",Kh(tI);class nI extends Xv{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dx(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){px(Tx,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Yh((()=>{let t=zv(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=pf(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return pf(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}nI.className="UpSampling2D",Kh(nI);class rI extends jk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Rv(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Sx(e.depthwiseConstraint),this.depthwiseRegularizer=Fk(e.depthwiseRegularizer)}build(e){if((e=Bv(e)).length<4)throw new Yy(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Yy(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yh((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Yh((()=>{null==s&&(s="channelsLast"),Dx(s);let i=Uk(e,s);if(4!==e.rank)throw new Yy(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Yy(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Wd(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=pf(i,[0,3,1,2])),i}))}(e=zv(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ov(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Bv(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Wk(t,this.kernelSize[0],this.padding,this.strides[0]),a=Wk(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Av(this.depthwiseInitializer),e.depthwiseRegularizer=Rk(this.depthwiseRegularizer),e.depthwiseConstraint=Nx(this.depthwiseRegularizer),e}}function sI(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Yy("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function aI(e,t,n,r=!1,s,a,i=!1,o=!1){return Yh((()=>{const l=t.shape.length;if(l<3)throw new Yy(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Kx(2,l));if(t=pf(t,u),null!=a)throw new Jy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Xd(s,-1)),s=pf(s,u)),r&&(t=Gp(t,0),null!=s&&(s=Gp(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=uf(t);let g,m;null!=s&&(g=uf(s));for(let t=0;t<p;++t){const n=f[t],r=Yh((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Yh((()=>{const e=g[t],n=Mp(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=sf(c,1)),[h,m,d]}))}rI.className="DepthwiseConv2D",Kh(rI);class iI extends Xv{constructor(e){let t;if(super(e),null==e.cell)throw new Yy("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new fI({cells:e.cell}):e.cell,null==t.stateSize)throw new Yy("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Gv({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Kx(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ov(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Yh((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Jy("Constants support is not implemented in RNN yet.");Ov(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Gv({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!li(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Yy(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Gv({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Yh((()=>{if(!this.stateful)throw new qy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Yy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yp([n,e]))):this.states_=[yp([n,this.cell.stateSize])];else if(null==e)Jh(this.states_),null!=this.keptStates&&(Jh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yp([n,e]))):this.states_[0]=yp([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Yy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Jh(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!li(r.shape,a))throw new Yy(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Zh(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=sI(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Gv({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Hv){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Yh((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=zv(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Yy(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=aI(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Yh((()=>{let t=yp(e.shape);return t=cp(t,[1,2]),t=Xx(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?tv(t,[1,e]):t)):this.cell.stateSize>1?[tv(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===iI.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=uw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}iI.className="RNN",Kh(iI);class oI extends Xv{}class lI extends oI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gx(this.units,"units"),this.activation=Sk(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fk(e.kernelRegularizer),this.recurrentRegularizer=Fk(e.recurrentRegularizer),this.biasRegularizer=Fk(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=Hx([1,jx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hx([1,jx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Bv(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yh((()=>{if(2!==(e=e).length)throw new Yy(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gI({ones:()=>Mp(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gI({ones:()=>Mp(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=rv(null!=a?lp(e,a):e,this.kernel.read()),null!=this.bias&&(s=ov(s,this.bias.read())),null!=i&&(n=lp(n,i));let o=sd(s,rv(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Nk(this.activation),useBias:this.useBias,kernelInitializer:Av(this.kernelInitializer),recurrentInitializer:Av(this.recurrentInitializer),biasInitializer:Av(this.biasInitializer),kernelRegularizer:Rk(this.kernelRegularizer),recurrentRegularizer:Rk(this.recurrentRegularizer),biasRegularizer:Rk(this.biasRegularizer),activityRegularizer:Rk(this.activityRegularizer),kernelConstraint:Nx(this.kernelConstraint),recurrentConstraint:Nx(this.recurrentConstraint),biasConstraint:Nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}lI.className="SimpleRNNCell",Kh(lI);class uI extends iI{constructor(e){e.cell=new lI(e),super(e)}call(e,t){return Yh((()=>{null!=this.cell.dropoutMask&&(Jh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}uI.className="SimpleRNN",Kh(uI);class cI extends oI{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Yy("GRUCell does not support reset_after parameter set to true.");this.units=e.units,gx(this.units,"units"),this.activation=Sk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Fk(e.kernelRegularizer),this.recurrentRegularizer=Fk(e.recurrentRegularizer),this.biasRegularizer=Fk(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=Hx([1,jx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hx([1,jx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Bv(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yh((()=>{if(2!==(e=e).length)throw new Yy(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gI({ones:()=>Mp(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gI({ones:()=>Mp(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=lp(e,s[0]));let u=rv(e,this.kernel.read());this.useBias&&(u=ov(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=lp(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=tf(c,[2*this.units,this.units],c.rank-1),p=rv(r,h),[f,g,m]=tf(u,3,u.rank-1),[b,y]=tf(p,2,p.rank-1);i=this.recurrentActivation.apply(sd(f,b)),o=this.recurrentActivation.apply(sd(g,y));const x=rv(lp(o,r),d);l=this.activation.apply(sd(m,x));const v=sd(lp(i,r),lp(sd(1,_p(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Nk(this.activation),recurrentActivation:Nk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Av(this.kernelInitializer),recurrentInitializer:Av(this.recurrentInitializer),biasInitializer:Av(this.biasInitializer),kernelRegularizer:Rk(this.kernelRegularizer),recurrentRegularizer:Rk(this.recurrentRegularizer),biasRegularizer:Rk(this.biasRegularizer),activityRegularizer:Rk(this.activityRegularizer),kernelConstraint:Nx(this.kernelConstraint),recurrentConstraint:Nx(this.recurrentConstraint),biasConstraint:Nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}cI.className="GRUCell",Kh(cI);class hI extends iI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cI(e),super(e)}call(e,t){return Yh((()=>{null!=this.cell.dropoutMask&&(Jh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}hI.className="GRU",Kh(hI);class dI extends oI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,gx(this.units,"units"),this.activation=Sk(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Sk(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Rv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Rv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Rv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Fk(e.kernelRegularizer),this.recurrentRegularizer=Fk(e.recurrentRegularizer),this.biasRegularizer=Fk(e.biasRegularizer),this.kernelConstraint=Sx(e.kernelConstraint),this.recurrentConstraint=Sx(e.recurrentConstraint),this.biasConstraint=Sx(e.biasConstraint),this.dropout=Hx([1,jx([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Hx([1,jx([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Bv(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends dv{apply(t,r){const s=e.apply([n]),a=(new fv).apply([n]),i=e.apply([2*n]);return ev(ev(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Yh((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Yy(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gI({ones:()=>Mp(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gI({ones:()=>Mp(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=lp(e,a[0]));let h=rv(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=lp(r,i[0])),h=sd(h,rv(r,this.recurrentKernel.read())),this.useBias&&(h=ov(h,this.bias.read()));const[d,p,f,g]=tf(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=sd(lp(l,s),lp(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=lp(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Nk(this.activation),recurrentActivation:Nk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Av(this.kernelInitializer),recurrentInitializer:Av(this.recurrentInitializer),biasInitializer:Av(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Rk(this.kernelRegularizer),recurrentRegularizer:Rk(this.recurrentRegularizer),biasRegularizer:Rk(this.biasRegularizer),activityRegularizer:Rk(this.activityRegularizer),kernelConstraint:Nx(this.kernelConstraint),recurrentConstraint:Nx(this.recurrentConstraint),biasConstraint:Nx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}dI.className="LSTMCell",Kh(dI);class pI extends iI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new dI(e),super(e)}call(e,t){return Yh((()=>{null!=this.cell.dropoutMask&&(Jh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}pI.className="LSTM",Kh(pI);class fI extends oI{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Yh((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Ov(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{zx(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(uw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Vv(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Uv(t)}}function gI(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>lv(t(),n),i=()=>uv(a,t,r);return!s||s<=1?Zh(i().clone()):Array(s).fill(void 0).map(i).map((e=>Zh(e.clone())))}fI.className="StackedRNNCells",Kh(fI);var mI,bI,yI,xI;class vI extends iI{constructor(e){if(e.unroll)throw new Jy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Jy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Gv({ndim:5})]}call(e,t){return Yh((()=>{if(null!=this.cell.dropoutMask&&(Jh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Jh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Yy("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Yh((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=yp([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Yh((()=>{if(!this.stateful)throw new qy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Yy("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yp(s))):this.states_=[yp(s)];else if(null==e)Jh(this.states_),null!=this.keptStates&&(Jh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yp(s))):this.states_[0]=yp(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Yy(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Jh(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!li(n.shape,r))throw new Yy(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Zh(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Wk(l,r[0],s,a[0],i[0]),h=Wk(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}vI.className="ConvRNN2D";class wI extends dI{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,gx(this.filters,"filters"),this.kernelSize=Pk(n,2,"kernelSize"),this.kernelSize.forEach((e=>gx(e,"kernelSize"))),this.strides=Pk(r||1,2,"strides"),this.strides.forEach((e=>gx(e,"strides"))),this.padding=s||"valid",Mx(this.padding),this.dataFormat=a||"channelsLast",Dx(this.dataFormat),this.dilationRate=Pk(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>gx(e,"dilationRate")))}build(e){var t;e=Bv(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Yy(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends dv{apply(e,t){return Qx([n.apply([r]),xp([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Yh((()=>{if(3!==e.length)throw new Yy(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gI({ones:()=>Mp(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?lp(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gI({ones:()=>Mp(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,x,v]=tf(this.kernel.read(),4,3),[w,k,I,$]=this.useBias?tf(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,$,this.padding);const[N,C,S,E]=tf(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),g=this.recurrentConv(g,S),m=this.recurrentConv(m,E);const T=this.recurrentActivation.apply(sd(l,p)),A=this.recurrentActivation.apply(sd(u,f)),R=sd(lp(A,a),lp(T,this.activation.apply(sd(c,g)))),_=lp(this.recurrentActivation.apply(sd(h,m)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Dd(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ov(s,n,this.dataFormat):s}recurrentConv(e,t){return Dd(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}wI.className="ConvLSTM2DCell",Kh(wI);class kI extends vI{constructor(e){const t=new wI(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}kI.className="ConvLSTM2D",Kh(kI);class II extends Xv{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return uv((()=>lv(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}II.className="Dropout",Kh(II);class $I extends II{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}$I.className="SpatialDropout1D",Kh($I);class NI extends Xv{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,gx(this.units,"units"),this.activation=Sk(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Rv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Rv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Sx(e.kernelConstraint),this.biasConstraint=Sx(e.biasConstraint),this.kernelRegularizer=Fk(e.kernelRegularizer),this.biasRegularizer=Fk(e.biasRegularizer),this.activityRegularizer=Fk(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Bv(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Bv(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e),r=bx(this.activation.getClassName());let s;return null!=r?s=rv(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=rv(n,this.kernel.read()),null!=this.bias&&(s=ov(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Nk(this.activation),useBias:this.useBias,kernelInitializer:Av(this.kernelInitializer),biasInitializer:Av(this.biasInitializer),kernelRegularizer:Rk(this.kernelRegularizer),biasRegularizer:Rk(this.biasRegularizer),activityRegularizer:Rk(this.activityRegularizer),kernelConstraint:Nx(this.kernelConstraint),biasConstraint:Nx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}NI.className="Dense",Kh(NI);class CI extends Xv{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Bv(e);for(const t of e.slice(1))if(null==t)throw new Yy(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ux(e,1)]}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);let n=zv(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Yy(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ux(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}CI.className="Flatten",Kh(CI);class SI extends Xv{constructor(e){super(e),this.supportsMasking=!0,this.activation=Sk(e.activation)}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Nk(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}SI.className="Activation",Kh(SI);class EI extends Xv{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Yh((()=>{return e=zv(e),t=e,n=this.n,Yh((()=>{if(2!==t.shape.length)throw new Yy(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return tv(Xx(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}EI.className="RepeatVector",Kh(EI);class TI extends Xv{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Yy("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Ux(e);if(null!==a){if(0===s||i%s!=0)throw new Yy(n);r[a]=i/s}else if(i!==s)throw new Yy(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}TI.className="Reshape",Kh(TI);class AI extends Xv{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Kx(1,e.dims.length+1);if(!li(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Gv({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Bv(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return pf(zv(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}AI.className="Permute",Kh(AI);class RI extends Xv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=zv(e);return id(Fp(n,this.maskValue),-1)}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e),r=id(Fp(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}RI.className="Masking",Kh(RI);class _I extends Xv{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(rx(e.inputLength))}this.inputDim=e.inputDim,gx(this.inputDim,"inputDim"),this.outputDim=e.outputDim,gx(this.outputDim,"outputDim"),this.embeddingsInitializer=Rv(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Fk(e.embeddingsRegularizer),this.activityRegularizer=Fk(e.activityRegularizer),this.embeddingsConstraint=Sx(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Yh((()=>this.maskZero?(e=zv(e),Fp(e,df(e))):null))}computeOutputShape(e){if(e=Bv(e),null==this.inputLength)return[...e,this.outputDim];const t=rx(this.inputLength);if(t.length!==e.length-1)throw new Yy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Yy(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);let n=zv(e);return"int32"!==n.dtype&&(n=qx(n,"int32")),sv(this.embeddings.read(),n.as1D()).reshape(Bv(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Av(this.embeddingsInitializer),embeddingsRegularizer:Rk(this.embeddingsRegularizer),activityRegularizer:Rk(this.activityRegularizer),embeddingsConstraint:Nx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}_I.className="Embedding",Kh(_I);class FI extends Xv{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Jy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Yy("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Bv(e)]),(e=e).length<2)throw new Yy(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=hx(t),t.length>1)throw new Yy(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===hx(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Yh((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=jx(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Xx(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(Ux(e.slice(1))));i=pf(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=Kx(1,e).concat([0]);t.push(pf(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=pf(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Kx(0,s-1));r=pf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=hx(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Yh((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Yy("`mask` should be an Array");if(!Array.isArray(e))throw new Yy("`inputs` should be an Array");if(t.length!==e.length)throw new Yy(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Xd(e,0))))[0];for(let e=1;e<t.length-1;++e)n=dp(n,t[e]);return n}))}}class DI extends FI{constructor(e){super(e)}mergeFunction(e){return Yh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=sd(t,e[n]);return t}))}}DI.className="Add",Kh(DI);class MI extends FI{constructor(e){super(e)}mergeFunction(e){return Yh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=lp(t,e[n]);return t}))}}MI.className="Multiply",Kh(MI);class OI extends FI{constructor(e){super(e)}mergeFunction(e){return Yh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=sd(t,e[n]);return lp(1/e.length,t)}))}}OI.className="Average",Kh(OI);class LI extends FI{constructor(e){super(e)}mergeFunction(e){return Yh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=gp(t,e[n]);return t}))}}LI.className="Maximum",Kh(LI);class zI extends FI{constructor(e){super(e)}mergeFunction(e){return Yh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wp(t,e[n]);return t}))}}zI.className="Minimum",Kh(zI);class BI extends FI{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Yy("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(li(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Yy("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Yh((()=>Qx(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Yy("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Yy("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Yy("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Yy(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Yh((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Mp(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(Xd(t[n],-1)):r.push(t[n]);const s=Td(r,this.axis);return ad(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function PI(e,t){for(;e<0;)e+=t;return e}BI.className="Concatenate",Kh(BI);class WI extends FI{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ri(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Jy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Yy(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Yy(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>PI(t,e[n].shape.length))):[PI(this.axes,n.shape.length),PI(this.axes,r.shape.length)],this.normalize&&(n=cw(n,t[0]),r=cw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Jy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ri(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ri(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Jy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Yh((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[PI(this.axes,e.length),PI(this.axes,t.length)],n}computeOutputShape(e){ri(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Jy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}WI.className="Dot",Kh(WI);class VI extends Xv{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e);return uv((()=>nv(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}VI.className="GaussianNoise",Kh(VI);class UI extends Xv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yh((()=>{this.invokeCallHook(e,t);const n=zv(e);return this.rate>0&&this.rate<1?uv((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(nv(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}UI.className="GaussianDropout",Kh(UI);class GI extends Xv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||zv(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yh((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return uv((()=>{const t=zv(e),r=-1.7580993408473766;let s=np(Vp(n),this.rate);s=qx(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>zv(e)),t.training||!1)}return e}))}}function HI(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Nd(e,t,n,r,s,a);else if(3===e.rank)i=Cd(e,t,n,r,s,a);else{if(4!==e.rank)throw new Jy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Sd(e,t,n,r,s,a)}return i}GI.className="AlphaDropout",Kh(GI);class jI extends Xv{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Rv(e.betaInitializer||"zeros"),this.gammaInitializer=Rv(e.gammaInitializer||"ones"),this.movingMeanInitializer=Rv(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Rv(e.movingVarianceInitializer||"ones"),this.betaConstraint=Sx(e.betaConstraint),this.gammaConstraint=Sx(e.gammaConstraint),this.betaRegularizer=Fk(e.betaRegularizer),this.gammaRegularizer=Fk(e.gammaRegularizer)}build(e){e=Bv(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Yy(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Gv({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Yh((()=>{const n=null!=t.training&&t.training,r=zv(e),s=r.shape,a=s.length,i=Kx(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Qy(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!li(u,Kx(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return HI(r,e,t,n,s,this.epsilon)}return HI(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return li(r.slice().sort(),Kx(0,e.rank-1))?function(e,t,n,r,s=.001){return Yh((()=>{const a=Rp(e,r),i=a.mean,o=a.variance;return[HI(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Yh((()=>{const a=Rp(e,r),i=a.mean,o=a.variance,l=[];for(const t of Kx(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[HI(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Yh((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Av(this.betaInitializer),gammaInitializer:Av(this.gammaInitializer),movingMeanInitializer:Av(this.movingMeanInitializer),movingVarianceInitializer:Av(this.movingVarianceInitializer),betaRegularizer:Rk(this.betaRegularizer),gammaRegularizer:Rk(this.gammaRegularizer),betaConstraint:Nx(this.betaConstraint),gammaConstraint:Nx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}jI.className="BatchNormalization",Kh(jI);class KI extends Xv{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Rv(e.betaInitializer||"zeros"),this.gammaInitializer=Rv(e.gammaInitializer||"ones"),this.betaRegularizer=Fk(e.betaRegularizer),this.gammaRegularizer=Fk(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Bv(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==hx(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=zv(e),r=n.shape,s=r.length;return Yh((()=>{let{mean:e,variance:t}=Rp(n,this.axis,!0);const a=Qy(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),HI(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Av(this.betaInitializer),gammaInitializer:Av(this.gammaInitializer),betaRegularizer:Rk(this.betaRegularizer),gammaRegularizer:Rk(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}KI.className="LayerNormalization",Kh(KI);class qI extends Xv{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Yy(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Yy(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Yy(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Gv({ndim:4})]}computeOutputShape(e){let t,n;return e=Bv(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Yh((()=>{return t=zv(e),n=this.padding,r=this.dataFormat,Yh((()=>{if(4!==t.rank)throw new Yy(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Yy("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Yy(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Op(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function XI(e,t,n,r,s,a){return Yh((()=>{let i;Dx(s),Ox(a),Mx(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Uk(e,s);const o="same"===r?"same":"valid";return i="max"===a?pp(e,t,n,o):kd(e,t,n,o),"channelsFirst"===s&&(i=pf(i,[0,3,1,2])),i}))}function YI(e,t,n,r,s,a){return Yh((()=>{let i;Dx(s),Ox(a),Mx(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Gk(e,s);const o="same"===r?"same":"valid";return i="max"===a?fp(e,t,n,o):Id(e,t,n,o),"channelsFirst"===s&&(i=pf(i,[0,4,1,2,3])),i}))}qI.className="ZeroPadding2D",Kh(qI);class JI extends Xv{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Yy(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(gx(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Yy(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}gx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Mx(this.padding),this.inputSpec=[new Gv({ndim:3})]}computeOutputShape(e){const t=Wk((e=Bv(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Yh((()=>{this.invokeCallHook(e,t),e=Xx(zv(e),2);const n=this.poolingFunction(zv(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return rf(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ZI extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),XI(e,t,n,r,s,"max")}}ZI.className="MaxPooling1D",Kh(ZI);class QI extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),XI(e,t,n,r,s,"avg")}}QI.className="AveragePooling1D",Kh(QI);class e$ extends Xv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Yy(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];gx(this.poolSize,"poolSize"),gx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dx(this.dataFormat),Mx(this.padding),this.inputSpec=[new Gv({ndim:4})]}computeOutputShape(e){e=Bv(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Wk(t,this.poolSize[0],this.padding,this.strides[0]),n=Wk(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Yh((()=>(this.invokeCallHook(e,t),this.poolingFunction(zv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class t$ extends e${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),XI(e,t,n,r,s,"max")}}t$.className="MaxPooling2D",Kh(t$);class n$ extends e${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),XI(e,t,n,r,s,"avg")}}n$.className="AveragePooling2D",Kh(n$);class r$ extends Xv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Yy(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];gx(this.poolSize,"poolSize"),gx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dx(this.dataFormat),Mx(this.padding),this.inputSpec=[new Gv({ndim:5})]}computeOutputShape(e){e=Bv(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Wk(t,this.poolSize[0],this.padding,this.strides[0]),n=Wk(n,this.poolSize[1],this.padding,this.strides[1]),r=Wk(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Yh((()=>(this.invokeCallHook(e,t),this.poolingFunction(zv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class s$ extends r${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),YI(e,t,n,r,s,"max")}}s$.className="MaxPooling3D",Kh(s$);class a$ extends r${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Dx(s),Mx(r),YI(e,t,n,r,s,"avg")}}a$.className="AveragePooling3D",Kh(a$);class i$ extends Xv{constructor(e){super(e),this.inputSpec=[new Gv({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Jy}}class o$ extends i${constructor(e){super(e||{})}call(e,t){return Yh((()=>{const t=zv(e);return mp(t,1)}))}}o$.className="GlobalAveragePooling1D",Kh(o$);class l$ extends i${constructor(e){super(e||{})}call(e,t){return Yh((()=>{const t=zv(e);return op(t,1)}))}}l$.className="GlobalMaxPooling1D",Kh(l$);class u$ extends Xv{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Dx(this.dataFormat),this.inputSpec=[new Gv({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Jy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class c$ extends u${call(e,t){return Yh((()=>{const t=zv(e);return"channelsLast"===this.dataFormat?mp(t,[1,2]):mp(t,[2,3])}))}}c$.className="GlobalAveragePooling2D",Kh(c$);class h$ extends u${call(e,t){return Yh((()=>{const t=zv(e);return"channelsLast"===this.dataFormat?op(t,[1,2]):op(t,[2,3])}))}}h$.className="GlobalMaxPooling2D",Kh(h$);class d$ extends Xv{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=uw(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class p$ extends d${constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Bv(e)).length<3)throw new Yy(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Bv(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Yh((()=>aI(((e,n)=>[zv(this.layer.call(e,t)),[]]),e=zv(e),[],!1,null,null,!1,!0)[1]))}}p$.className="TimeDistributed",Kh(p$);class f$ extends d${constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=uw(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=uw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){px(_x,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new Jy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):nx(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=sI(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Yy("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Gv({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Jy("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Hv;for(const e of a)if(e instanceof Hv!==o)throw new Yy("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Yh((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Gp(s,1)),"concat"===this.mergeMode?i=Qx([r,s]):"sum"===this.mergeMode?i=sd(r,s):"ave"===this.mergeMode?i=lp(.5,sd(r,s)):"mul"===this.mergeMode?i=lp(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){zx(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),zx(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=uw(t.layer);if(delete t.layer,null!=t.numConstants)throw new Jy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function g$(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(x$(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=g$(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function m$(e,t=y$){return b$(e,t)}function b$(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(x$(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=b$(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function y$(e){return null===e?null:x$(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function x$(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof cc))}function v$(e){return g$(e,w$)}function w$(e){return e instanceof cc?{value:e.clone(),recurse:!1}:x$(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}f$.className="Bidirectional",Kh(f$),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(mI||(mI={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(bI||(bI={}));class k${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class I$ extends k${constructor(){super(I$.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}I$.INITIAL_CAPACITY=32;class $${async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new F$(this,e)}filter(e){return new R$(this,e)}map(e){return new _$(this,e)}mapAsync(e){return new D$(this,e)}serialMapAsync(e){return new D$(this,e).serial()}flatmap(e){return new O$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new A$(this,e,t)}columnMajorBatch(e,t=!0,n=y$){return this.rowMajorBatch(e,t).map((e=>m$(e,n)))}concatenate(e,t){return new L$(new N$([this,e]),t)}take(e){return e<0||null==e?this:new T$(this,e)}skip(e){return e<0||null==e?this:new E$(this,e)}prefetch(e){return new z$(this,e)}shuffle(e,t){return new B$(this,e,t)}serial(){return new S$(this)}}class N$ extends $${constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:v$(e),done:!1}}}class C$ extends $${constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class S$ extends $${constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class E$ extends $${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Jh(e.value)}return this.upstream.next()}}class T$ extends $${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class A$ extends $${constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class R$ extends $${constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Jh(e.value)}}}class _$ extends $${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ic(e.value),n=this.transform(e.value),r=Ic(n);for(const e of t)kc(e,r)||e.dispose();return{value:n,done:!1}}}class F$ extends $${constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class D$ extends $${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ic(e.value),n=await this.transform(e.value),r=Ic(n);for(const e of t)kc(e,r)||e.dispose();return{value:n,done:!1}}}class M$ extends $${constructor(){super(),this.outputQueue=new I$,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class O$ extends M${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Ic(e.value),n=this.transform(e.value),r=Ic(n);this.outputQueue.pushAll(n);for(const e of t)kc(e,r)||e.dispose();return!0}}class L$ extends $${constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(xI=yI||(yI={}))[xI.FAIL=0]="FAIL",xI[xI.SHORTEST=1]="SHORTEST",xI[xI.LONGEST=2]="LONGEST";class z$ extends $${constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new k$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class B$ extends z${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=zp.alea(n||Xu().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class P${constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ri(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),W$((async()=>(await n.iterator()).columnMajorBatch(e,t,V$)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,W$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,W$((async()=>(await t.iterator()).filter((t=>Yh((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return W$((async()=>(await t.iterator()).map((t=>Yh((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return W$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return W$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,W$((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new C$(s)).take(e),new L$(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,W$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=zp.alea(t||Xu().toString());return W$((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,W$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function W$(e,t=null){return new class extends P${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function V$(e){if(null===e)return null;return null==(t=e[0])||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(t)||Array.isArray(t)||"object"==typeof t&&t instanceof cc||xi(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof cc?sf(e):Vc(e)}(e),recurse:!1}:{value:null,recurse:!0};var t}function U$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ri("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}P$.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const G$=pm;class H$ extends Za{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Ja(this,qh())}nextDataId(){return H$.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,zi().get("IS_NODE")&&Gg("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&wi(n[0])){const s=n.map((e=>Yu(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?jg(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Ju(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xh(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return qh().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Xu();return e(),{kernelMs:Xu()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){U$([e],"where");const t=this.readSync(e.dataId);return G$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function j$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(U$(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=oi(i.shape),c=n||i.dtype,h=bi(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,c,h)}}function K$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(U$(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}H$.nextDataId=0,Qh("cpu",(()=>new H$),1);const q$=j$(zo,(e=>e>=0?e:Math.exp(e)-1)),X$={kernelName:zo,backendName:"cpu",kernelFunc:q$};function Y$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const J$={kernelName:tl,backendName:"cpu",kernelFunc:Y$};function Z$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;U$([s],"leakyRelu");const i=oi(s.shape),o=n.data.get(s.dataId).values,l=mi("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const Q$={kernelName:ol,backendName:"cpu",kernelFunc:Z$};function eN(e){return(t,n,r,s,a)=>{const i=Kd(t,n),o=i.length,l=Ci(i),u=mi(a,oi(i)),c=t.length,h=n.length,d=Ci(t),p=Ci(n),f=Hd(t,i),g=Hd(n,i);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Di(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Fi(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=Fi(m,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const tN=eN(((e,t)=>e<0?t*e:e));function nN(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;U$([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=tN(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const rN={kernelName:Vl,backendName:"cpu",kernelFunc:nN},sN=j$(Kl,(e=>Math.max(0,e))),aN={kernelName:Kl,backendName:"cpu",kernelFunc:sN},iN=j$(Ql,(e=>Math.min(Math.max(0,e),6))),oN={kernelName:Ql,backendName:"cpu",kernelFunc:iN},lN=j$(cu,(e=>1/(1+Math.exp(-e)))),uN={kernelName:cu,backendName:"cpu",kernelFunc:lN};function cN(e,t,n,r,s){if("linear"===n)return Y$({inputs:{x:t},backend:e});if("relu"===n)return sN({inputs:{x:t},backend:e});if("elu"===n)return q$({inputs:{x:t},backend:e});if("relu6"===n)return iN({inputs:{x:t},backend:e});if("prelu"===n)return nN({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Z$({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return lN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function hN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const dN={kernelName:fo,backendName:"cpu",kernelFunc:hN};function pN(e,t,n="float32"){if("complex64"===n)return hN({inputs:{real:pN(e,t,"float32"),imag:pN(e,t,"float32")},backend:e});const r=Ai(oi(t),n);return e.makeTensorInfo(t,n,r)}function fN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const gN={kernelName:Hl,backendName:"cpu",kernelFunc:fN};function mN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return Y$({inputs:{x:s},backend:n});const e=pN(n,s.shape,s.dtype),t=mN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=hN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=fN({inputs:{input:s},backend:n}),t=mN({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!yi(s.dtype,a)){const e=Y$({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=qu([0],s.dtype),[r,a]=eN(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const bN={kernelName:co,backendName:"cpu",kernelFunc:mN};function yN(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;U$([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=mN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=mN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,l,u,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=hN({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function xN(e){return(t,n,r,s,a,i)=>{const o=Kd(t,n),l=oi(o),u=o.length,c=Ci(o),h=mi("float32",l),d=mi("float32",l),p=Hd(t,o),f=Hd(n,o),g=jg(r,s),m=jg(a,i),b=t.length,y=Ci(t),x=n.length,v=Ci(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Di(t,u,c),r=n.slice(-b);p.forEach((e=>r[e]=0));const s=Fi(r,b,y),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Fi(a,x,v),o=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const vN=eN(((e,t)=>e+t)),wN=xN(((e,t,n,r)=>({real:e+n,imag:t+r}))),kN=yN(ji,vN,wN),IN={kernelName:ji,backendName:"cpu",kernelFunc:kN};function $N(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=oi(s.shape),o=pi(a,i),l=oi(o);ri(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const NN={kernelName:ql,backendName:"cpu",kernelFunc:$N};function CN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;U$([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),g=a.shape.slice(0,-2),m=oi(f),b=oi(g);ri(l>=2&&u>=2&&(m===b||1===m||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${g}).`));const y=(m>b?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,p]);ri(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],v=$N({inputs:{x:s},backend:n,attrs:{shape:i?[m,c,d]:[m,d,c]}}),w=$N({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],$=o?w.shape[1]:w.shape[2],N=Math.max(m,b),C=n.data.get(v.dataId).values,S=n.data.get(w.dataId).values,E=Ci(v.shape),T=Ci(w.shape),[A,R,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,D,M]=o?[1,T[1],T[0]]:[T[1],1,T[0]],O=I*$,L=xh([N,I,$],v.dtype),z=L.values,B=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=B)for(let n=0;n<$;n+=B)for(let r=0;r<k;r+=B){const s=Math.min(t+B,I),a=Math.min(n+B,$),i=Math.min(r+B,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,m-1)*A,a=Math.min(e,b-1)*M;n+=C[r+o*R+s*_]*S[s*F+t*D+a]}z[e*O+(o*$+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const SN={kernelName:oo,backendName:"cpu",kernelFunc:CN},EN={kernelName:Ou,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=CN({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=kN({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=cN(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function TN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const AN={kernelName:Ui,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;U$(t,"abs");let r=new Float32Array(oi(t.shape));return r=TN(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},RN=j$(Gi,(e=>Math.acos(e))),_N={kernelName:Gi,backendName:"cpu",kernelFunc:RN},FN=j$(Hi,(e=>Math.acosh(e))),DN={kernelName:Hi,backendName:"cpu",kernelFunc:FN},MN={kernelName:Ki,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;U$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=xh(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function ON(e,t,n,r,s){const a=t.length,i=oi(t),o=Ci(t),l=Ci(s),u=mi(n,oi(s));for(let t=0;t<i;++t){const n=Di(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Fi(s,a,l)]=e[t]}return u}function LN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;U$(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=ON(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const zN={kernelName:Tu,backendName:"cpu",kernelFunc:LN},BN={kernelName:qi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;U$(s,"all");const o=fi(a,s.shape);let l=o;const u=Sp(l,s.shape.length);let c=s;null!=u&&(c=LN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Tp(l.length,s.shape.length)),Cp("all",l,c.shape.length);const[h,d]=$p(c.shape,l),p=oi(d),f=Ai(oi(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=$N({inputs:{x:m},backend:n,attrs:{shape:Np(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},PN={kernelName:Xi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;U$(s,"any");const o=fi(a,s.shape);let l=o;const u=Sp(l,s.shape.length);let c=s;null!=u&&(c=LN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Tp(l.length,s.shape.length)),Cp("any",l,c.shape.length);const[h,d]=$p(c.shape,l),p=oi(d),f=Ai(oi(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=$N({inputs:{x:m},backend:n,attrs:{shape:Np(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},WN={kernelName:Yi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;U$(s,"argMax");let i=fi(a,s.shape);const o=Sp(i,s.shape.length);let l=s;const u=[];null!=o&&(l=LN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Tp(i.length,l.shape.length)),i=[i[0]],Cp("argMax",i,l.shape.length);const[c,h]=$p(l.shape,i),d=Ai(oi(c),"int32"),p=oi(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},VN={kernelName:Ji,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;U$(s,"argMin");let i=fi(a,s.shape);const o=Sp(i,s.shape.length);let l=s;const u=[];null!=o&&(l=LN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Tp(i.length,l.shape.length)),i=[i[0]],Cp("argMin",i,l.shape.length);const[c,h]=$p(l.shape,i),d=Ai(oi(c),"int32"),p=oi(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},UN=j$(Zi,(e=>Math.asin(e))),GN={kernelName:Zi,backendName:"cpu",kernelFunc:UN},HN=j$(Qi,(e=>Math.asinh(e))),jN={kernelName:Qi,backendName:"cpu",kernelFunc:HN},KN=j$(eo,(e=>Math.atan(e))),qN={kernelName:eo,backendName:"cpu",kernelFunc:KN},XN=eN(((e,t)=>Math.atan2(e,t))),YN=yN(no,XN),JN={kernelName:no,backendName:"cpu",kernelFunc:YN},ZN=j$(to,(e=>Math.atanh(e))),QN={kernelName:to,backendName:"cpu",kernelFunc:ZN};function eC(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=xh(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}m[I+n*x+t]="avg"===a?y/v:b}}}return g}function tC(e,t,n,r,s=!1,a=!1){const i=xh(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=xh(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function nC(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xh(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-g;let C=N;for(;C<0;)C+=u;const S=Math.min(s.inDepth,d+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*$;let k=y,I=0,N=0;for(let n=C;n<S;n+=u){const s=x+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/N:k}}}}return x}const rC={kernelName:ro,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;U$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ri(xd(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ud(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&li(u.inShape,u.outShape))c=Y$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ci(s.shape),r=eC(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},sC={kernelName:ao,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;U$(s,"avgPool3d");const c=cd(s.shape,a,i,1,o,l,u),h=nC(n.data.get(s.dataId).values,s.shape,s.dtype,Ci(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},aC={kernelName:io,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;U$([s,a],"avgPool3DGrad");const c=cd(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,$=k-1-c.padInfo.left,N=w-1-c.padInfo.top,C=xh(a.shape,"float32"),S=1/(f*g*m),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-$;let l=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}C.set(l*S,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},iC={kernelName:so,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;U$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ud(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=xh(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,$=xh(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=$.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},oC={kernelName:Yo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;ri(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ri(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ri(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),U$([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,y=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)g[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+u),v>=m&&(v=0),w>=x&&(w=0),k>=b&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function lC(e,t,n,r,s){const a=Wh(r,t,n),i=oi(n),o=Ci(r);if(a){const n=Vh(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=xh(r,s,"string"===s?hm(e):e),u=xh(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?dm(u.values):u.values}function uC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;U$(s,"slice");const[o,l]=Uh(s,a,i);Th(s,o,l);const u=lC(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const cC={kernelName:iu,backendName:"cpu",kernelFunc:uC},hC={kernelName:lo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;U$([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Sg(s.shape,a,o),u=Eg(l.length,a.length),c=Tg(s.shape,a,o),h=Ag(i,a.length),d=Rg(c,i,a.length),p=$N({inputs:{x:s},backend:n,attrs:{shape:l}}),f=LN({inputs:{x:p},backend:n,attrs:{perm:u}}),g=$N({inputs:{x:f},backend:n,attrs:{shape:c}}),m=uC({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function dC(e,t,n,r,s){const a=oi(r),i=Ai(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function pC(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=xh([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const fC={kernelName:uo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=dC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function gC(e){return(t,n,r)=>{const s=mi(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const mC=gC((e=>Math.ceil(e))),bC=K$(ho,mC),yC={kernelName:ho,backendName:"cpu",kernelFunc:bC},xC=j$(po,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),vC={kernelName:po,backendName:"cpu",kernelFunc:xC},wC={kernelName:go,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(oi(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function kC(e,t,n,r){const s=bi(n,oi(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=oi(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?hm(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function IC(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const $C={kernelName:rl,backendName:"cpu",kernelFunc:IC};function NC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=fi(s,t[0].shape)[0];let i=Ig(t.map((e=>e.shape)),a);if(0===oi(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oi(e.shape)>0));if(1===o.length)return Y$({inputs:{x:o[0]},backend:n});if(kg(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>fN({inputs:{input:e},backend:n}))),t=o.map((e=>IC({inputs:{input:e},backend:n}))),r=NC({inputs:e,backend:n,attrs:{axis:a}}),s=NC({inputs:t,backend:n,attrs:{axis:a}}),i=hN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=oi(e.shape.slice(a));return $N({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Ig(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=kC(u,i,t[0].dtype,c),d=Ig(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const CC={kernelName:mo,backendName:"cpu",kernelFunc:NC};function SC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;U$([s,a],"conv2d");const h=vd(l),d=hd(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new ic(d.outShape,s.dtype),w=Ci(s.shape),k=Ci(a.shape),I=w[0],$=x?w[1]:w[2],N=x?w[2]:1,C=x?1:w[1],S=v.strides[0],E=x?v.strides[1]:v.strides[2],T=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*$;for(let e=0;e<d.outWidth;++e){const t=r+e*T,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const EC={kernelName:bo,backendName:"cpu",kernelFunc:SC},TC={kernelName:yo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;U$([s,a],"conv2dBackpropFilter");const h=vd(l),d=hd(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new ic(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new ic(s.shape,s.dtype,w),$=new ic(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=b?I.get(u,t,n,i)*$.get(u,c,e,o):I.get(u,i,t,n)*$.get(u,o,c,e)}}y.set(l,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},AC={kernelName:xo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;U$([s,a],"conv2dBackpropInput");const h=Ci(a.shape),d=Ci(s.shape);let p=vd(u);const f=hd(i,a.shape,o,1,l,c,!1,p),g=new ic(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:N,inHeight:C,inWidth:S,outChannels:E,outHeight:T,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=$-1-f.padInfo.left,M="channelsLast"===p,O=g.strides[0],L=M?g.strides[1]:g.strides[2],z=M?g.strides[2]:1,B=M?1:g.strides[1],P=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min(T,(I+r)/R);for(let i=0;i<S;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(A,($+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=l;r<u;++r){const a=P*e+W*n+V*r,i=x*(I-1-s)+v*($-1-(r*_-o))+w*t;for(let e=0;e<E;++e)c+=b[a+U*e]*y[i+e]}}m[O*e+L*n+z*i+B*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},RC={kernelName:vo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;U$([s,a],"conv3d");const u=dd(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,y=m.left,x=m.top,v=new ic(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,$=Ci(s.shape),N=Ci(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*$[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*$[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*$[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},_C={kernelName:wo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;U$([s,a],"conv3dBackpropFilterV2");const u=Ci(s.shape),c=Ci(a.shape),h=dd(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new ic(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,$=n.data.get(a.dataId).values,[N,C,S,E]=c,T=n.data.get(s.dataId).values,[A,R,_,F]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*A,b=g*N;for(let g=t;g<n;++g){const t=(e+g*d-D)*R+h,n=g*C+b;for(let e=a;e<i;++e){const a=(s+e*p-O)*_+t,i=e*S+n;for(let e=l;e<u;++e){const t=e*E+i;m+=T[(r+e*f-M)*F+a+o]*$[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},FC={kernelName:ko,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;U$([s],"conv3dBackpropInputV2");const u=Ci(s.shape),c=Ci(a.shape),h=dd(l,a.shape,o,1,i),d=new ic(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[$,N,C,S]=c,{batchSize:E,filterDepth:T,filterHeight:A,filterWidth:R,inChannels:_,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=T-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,(T+r)/P);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(R+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=l;r<u;++r){const a=r*W-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+k*i,l=$*(T-1-s)+N*(A-1-a)+C*(R-1-(i*V-h))+S*t;for(let e=0;e<O;++e)_+=y[o+e]*I[l+e]}}}p[f*e+g*n+m*i+b*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},DC=j$(Io,(e=>Math.cos(e))),MC={kernelName:Io,backendName:"cpu",kernelFunc:DC},OC=j$($o,(e=>Math.cosh(e))),LC={kernelName:$o,backendName:"cpu",kernelFunc:OC},zC={kernelName:Co,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=xh([f,g,m,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=Ci(s.shape),k=Ci(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},BC={kernelName:No,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;U$(s,"cumsum");const l=Sp([a],s.shape.length);let u=s;null!=l&&(u=LN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Tp(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=xc(u.dtype,"int32"),d=Ai(oi(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const r=g(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=LN({inputs:{x:m},backend:n,attrs:{perm:Ep(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},PC={kernelName:So,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=dC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=pC(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},WC={kernelName:Eo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ri("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),ri(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+u*(n+l*e));g[m++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}};function VC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;U$([s,a],"depthwiseConv2DNative");const c=Ci(s.shape),h=Ci(a.shape);let d=l;null==d&&(d=[1,1]),ri(xd(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=hd(s.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:y}=p,x=y.left,v=y.top,w=p.outChannels/p.inChannels,k=new ic(p.outShape,s.dtype),I=n.data.get(s.dataId).values,$=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*$[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const UC={kernelName:To,backendName:"cpu",kernelFunc:VC},GC={kernelName:Ao,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;U$([s,a],"depthwiseConv2dNativeBackpropFilter");const h=hd(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new ic(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new ic(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new ic(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}m.set(u,e,r,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},HC={kernelName:Ro,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;U$([s,a],"depthwiseConv2DNativeBackpropInput");const h=Ci(s.shape),d=Ci(a.shape),p=hd(c,a.shape,i,o,l,u,!0),f=new ic(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[$,N,C]=d,{batchSize:S,filterHeight:E,filterWidth:T,inChannels:A,inHeight:R,inWidth:_,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=E-1-p.padInfo.top,B=T-1-p.padInfo.left,P=F/A;for(let e=0;e<S;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(D,(E+r)/O);for(let i=0;i<_;++i){const o=i-B,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(T+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=$*(E-1-s)+N*(T-1-(r*L-o))+C*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}g[m*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},jC={kernelName:_o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=oi(r.shape),a=n.data.get(r.dataId).values,i=xh([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},KC={kernelName:Fo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:N,outShape:C}=ld(r.shape,s.shape,a,i,"NHWC",o),S=oi(C),E=C.length,T=bi(r.dtype,S);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let a=0;a<y;++a){const i=a*w-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*$;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<g){const i=Fi([e,a,p,o],c,Ci(r.shape)),f=Fi([t,n,o],d,Ci(s.shape)),g=u[i]+h[f];g>l&&(l=g)}}}T[Fi([e,t,a,o],E,Ci(C))]=l}}}return{dataId:l.write(qu(T,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},qC={kernelName:Mo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ei(r.shape,u.data.get(r.dataId).values),h=Ei(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=ld(r.shape,s.shape,i,o,"NHWC",l);ri(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Ei(N,u.data.get(a.dataId).values),S=Ri(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}S[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qu(S,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},XC={kernelName:Do,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ei(r.shape,u.data.get(r.dataId).values),h=Ei(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=ld(r.shape,s.shape,i,o,"NHWC",l);ri(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Ei(N,u.data.get(a.dataId).values),S=Ri(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}S[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(qu(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},YC=eN(((e,t)=>e*t)),JC=xN(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),ZC=yN(Rl,YC,JC),QC={kernelName:Rl,backendName:"cpu",kernelFunc:ZC};function eS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;U$(s,"sum"),o="bool"===s.dtype?mN({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Y$({inputs:{x:s},backend:n});const l=o.shape.length,u=fi(a,o.shape),c=Sp(u,l);let h=u,d=o;null!=c&&(d=LN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Tp(h.length,l)),Cp("sum",h,d.shape.length);const[p,f]=$p(d.shape,h);let g=pN(n,p,xc(d.dtype,"int32"));const m=oi(f),b=n.data.get(g.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=y[t+e];b[e]=n}if(i){const e=g;g=$N({inputs:{x:g},backend:n,attrs:{shape:Np(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const tS={kernelName:pu,backendName:"cpu",kernelFunc:eS},nS={kernelName:Lo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=tm(s,a.length);rm(i.length,l,a);const{path:u,steps:c}=sm(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=nm(p,l[t]);let s;am(e)?s=a[t]:(s=LN({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);li(s.shape,i)||(s=$N({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=ZC({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=eS({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},rS={kernelName:Bo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;U$([r,s],"eluGrad");const a=new Float32Array(oi(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},sS=eN(((e,t)=>e===t?1:0)),aS=yN(Wo,sS,null,"bool"),iS={kernelName:Wo,backendName:"cpu",kernelFunc:aS},oS=zg,lS=Bg,uS=Pg,cS=Wg,hS=Vg,dS=Ug,pS=j$(Po,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+oS*n);return t*(1-((((dS*r+hS)*r+cS)*r+uS)*r+lS)*r*Math.exp(-n*n))})),fS={kernelName:Po,backendName:"cpu",kernelFunc:pS},gS=gC((e=>Math.exp(e))),mS=K$(Vo,gS),bS={kernelName:Vo,backendName:"cpu",kernelFunc:mS};function yS(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(ri(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),$N({inputs:{x:s},backend:n,attrs:{shape:o}})}const xS={kernelName:Uo,backendName:"cpu",kernelFunc:yS},vS=gC((e=>Math.expm1(e))),wS=K$(Go,vS),kS={kernelName:Go,backendName:"cpu",kernelFunc:wS},IS=eN(((e,t)=>e/t)),$S=yN(Oo,IS),NS={kernelName:Oo,backendName:"cpu",kernelFunc:$S},CS=eN(((e,t)=>e-t)),SS=xN(((e,t,n,r)=>({real:e-n,imag:t-r}))),ES=yN(Iu,CS,SS),TS={kernelName:Iu,backendName:"cpu",kernelFunc:ES};function AS(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=oi(u),h=mi("float32",c),d=mi("float32",c);for(let e=0;e<s;e++){const r=uC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=uC({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=hN({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=RS(i,t,n),p=jg(u,c);for(let t=0;t<a;t++){const n=Yg(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=hN({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function RS(e,t,n){const r=oi(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=_S(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Ku(r,"float32")),i=Y$({inputs:{x:a},backend:n}),l=NS.kernelFunc({inputs:{a:e,b:a},backend:n}),u=NS.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o;return Kg(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Qg(s*r,t,n),l=Yg(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Jg(r,a,i,s)}return r}(jg(a,i),r,t))}function _S(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=jg(e,t),i=n/2,o=qg(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=hN({inputs:{real:h,imag:d},backend:s}),f=Xg(a),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=hN({inputs:{real:y,imag:x},backend:s}),w=_S(l,u,i,r,s),k=w.real,I=w.imag,$=[k.length],N=s.makeTensorInfo($,"float32",k),C=s.makeTensorInfo($,"float32",I),S=hN({inputs:{real:N,imag:C},backend:s}),E=_S(g,m,i,r,s),T=E.real,A=E.imag,R=[T.length],_=s.makeTensorInfo(R,"float32",T),F=s.makeTensorInfo(R,"float32",A),D=hN({inputs:{real:_,imag:F},backend:s}),M=Zg(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),B=hN({inputs:{real:L,imag:z},backend:s}),P=ZC({inputs:{a:B,b:D},backend:s}),W=kN({inputs:{a:S,b:P},backend:s}),V=ES({inputs:{a:S,b:P},backend:s}),U=fN({inputs:{input:W},backend:s}),G=fN({inputs:{input:V},backend:s}),H=IC({inputs:{input:W},backend:s}),j=IC({inputs:{input:V},backend:s}),K=NC({inputs:[U,G],backend:s,attrs:{axis:0}}),q=NC({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const FS={kernelName:Ho,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=oi(r.shape),a=r.shape[r.shape.length-1],i=$N({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=AS(i,!1,n),l=$N({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function DS(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||Ii(s),o=bi(i,oi(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const MS={kernelName:jo,backendName:"cpu",kernelFunc:DS},OS={kernelName:Ko,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=mi(r.dtype,oi(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[i,e,r,o][2],d=Math.round(l-h),p=t+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),a[p]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},LS=gC((e=>Math.floor(e))),zS=K$(qo,LS),BS={kernelName:qo,backendName:"cpu",kernelFunc:zS},PS=eN(((e,t)=>Math.floor(e/t))),WS=yN(Xo,PS,null,"int32"),VS={kernelName:Xo,backendName:"cpu",kernelFunc:WS},US={kernelName:Lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=SC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=kN({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=cN(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},GS={kernelName:zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=VC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=kN({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=cN(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},HS={kernelName:Zo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=oi(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=_g(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=xh([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=p[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function jS(e,t,n){const r=xh(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}const KS={kernelName:Jo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;U$([s,a],"gatherV2");let l=o;null==o&&(l=0);const u=oi(a.shape),c=cm(s,a,fi(i,s.shape)[0],l),h=$N({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=$N({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),g=jS(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,g.dtype,g.values)}},qS=eN(((e,t)=>e>t?1:0)),XS=yN(Qo,qS,null,"bool"),YS={kernelName:Qo,backendName:"cpu",kernelFunc:XS},JS=eN(((e,t)=>e>=t?1:0)),ZS=yN(el,JS,null,"bool"),QS={kernelName:el,backendName:"cpu",kernelFunc:ZS},eE={kernelName:nl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=oi(r.shape),a=r.shape[r.shape.length-1],i=$N({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=AS(i,!0,n),l=$N({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},tE=j$(sl,(e=>Number.isFinite(e)?1:0),"bool"),nE={kernelName:sl,backendName:"cpu",kernelFunc:tE},rE=j$(al,(e=>Math.abs(e)===1/0?1:0),"bool"),sE={kernelName:al,backendName:"cpu",kernelFunc:rE},aE=j$(il,(e=>Number.isNaN(e)?1:0),"bool"),iE={kernelName:il,backendName:"cpu",kernelFunc:aE},oE=eN(((e,t)=>e<t?1:0)),lE=yN(ll,oE,null,"bool"),uE={kernelName:ll,backendName:"cpu",kernelFunc:lE},cE=eN(((e,t)=>e<=t?1:0)),hE=yN(ul,cE,null,"bool"),dE={kernelName:ul,backendName:"cpu",kernelFunc:hE};function pE(e,t,n){const r=(t-e)/(n-1),s=Ai(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const fE={kernelName:cl,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=pE(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},gE=gC((e=>Math.log(e))),mE=K$(hl,gE),bE={kernelName:hl,backendName:"cpu",kernelFunc:mE},yE=j$(dl,(e=>Math.log1p(e))),xE={kernelName:dl,backendName:"cpu",kernelFunc:yE},vE=eN(((e,t)=>e&&t)),wE=yN(pl,vE,null,"bool"),kE={kernelName:pl,backendName:"cpu",kernelFunc:wE},IE=j$(fl,(e=>e?0:1),"bool"),$E={kernelName:fl,backendName:"cpu",kernelFunc:IE},NE=eN(((e,t)=>e||t)),CE=yN(gl,NE,null,"bool"),SE={kernelName:gl,backendName:"cpu",kernelFunc:CE},EE={kernelName:ml,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;U$(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=oi(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},TE={kernelName:bl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;U$(i,"LRNGrad");const h=oi(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,m)}};function AE(e,t,n,r){const s=mi(r,oi(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function RE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=fi(a,l);let h=c;const d=Sp(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=ON(p,l,s.dtype,d,e),h=Tp(h.length,u),l=e}U$(s,"max"),Cp("max",h,u);const[f,g]=$p(l,h),m=AE(p,oi(g),f,s.dtype),b=o.write(m,f,s.dtype);let y=f;return i&&(y=Np(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const _E={kernelName:yl,backendName:"cpu",kernelFunc:RE},FE=eN(((e,t)=>Math.max(e,t))),DE=yN(xl,FE),ME={kernelName:xl,backendName:"cpu",kernelFunc:DE},OE={kernelName:vl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;U$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ri(xd(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ud(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&li(u.inShape,u.outShape))c=Y$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ci(s.shape),r=eC(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},LE={kernelName:kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;U$(s,"maxPool3d");const c=cd(s.shape,a,i,1,o,l,u),h=nC(n.data.get(s.dataId).values,s.shape,s.dtype,Ci(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},zE={kernelName:Il,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;U$([s,a],"maxPool3DGrad");const c=cd(a.shape,i,o,1,l,u),h=function(e,t){const n=xh(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,r,a,m);o>=$&&($=o,N=n*c*h+s*c+i)}}}n.set(N,g,b,r,s,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,$=xh(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let l=0;for(let n=0;n<y;n+=g){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=m){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*v-1-h.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;0!==d&&(l+=N.get(e,r,a,u,t)*d)}}}$.set(l,e,n,r,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},BE={kernelName:wl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;U$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=ud(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=xh(d.outShape,o.dtype,tC(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=xh(o.shape,"float32"),$=n.data.get(s.dataId).values,N=xh(s.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},PE={kernelName:$l,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;U$(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=ud(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=eC(e,0,n,Ci(t),s,"max"),i=tC(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},WE={kernelName:Nl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=fi(a,s.shape),l=oi($p(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=mN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=$S({inputs:{a:h,b:c},backend:n});u.push(d);const p=eS({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},VE={kernelName:Cl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;U$(s,"min");const o=fi(a,s.shape);let l=o;const u=Sp(l,s.shape.length);let c=s;null!=u&&(c=LN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Tp(l.length,s.shape.length)),Cp("min",l,c.shape.length);const[h,d]=$p(c.shape,l),p=oi(d),f=Ai(oi(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=$N({inputs:{x:m},backend:n,attrs:{shape:Np(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},UE=eN(((e,t)=>Math.min(e,t))),GE=yN(Sl,UE),HE={kernelName:Sl,backendName:"cpu",kernelFunc:GE},jE={kernelName:El,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;U$(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Ci(s.shape),f=oi(o),g=o.length,m=Ci(o),b=mi(s.dtype,f);for(let e=0;e<f;e++){let t=Di(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Fi(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},KE=eN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),qE=yN(Tl,KE),XE={kernelName:Tl,backendName:"cpu",kernelFunc:qE};function YE(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=fi([o],s.shape),u=RE({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Np(u.shape,l),h=$N({inputs:{x:u},backend:n,attrs:{shape:c}}),d=ES({inputs:{a:s,b:h},backend:n}),p=mS({inputs:{x:d},backend:n}),f=eS({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=$N({inputs:{x:f},backend:n,attrs:{shape:c}}),m=$S({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const JE={kernelName:mu,backendName:"cpu",kernelFunc:YE},ZE={kernelName:Al,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;U$(s,"multinomial");const l=o?s:YE({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=Ai(oi(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=zp.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function QE(e,t,n){const r=Ku(-1,n);return YC([],t,r,e,n)}const eT={kernelName:_l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;U$(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=QE(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},tT=Bf,nT={kernelName:Dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;U$(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=tT(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},rT=Pf,sT={kernelName:Ml,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;U$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=rT(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},aT=Wf,iT={kernelName:Ol,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;U$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=aT(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},oT=eN(((e,t)=>e!==t?1:0)),lT=yN(Fl,oT,null,"bool"),uT={kernelName:Fl,backendName:"cpu",kernelFunc:lT},cT={kernelName:zl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;U$(s,"oneHot");const l=oi(s.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function hT(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=fN({inputs:{input:r},backend:n}),t=hT({inputs:{x:e},backend:n}),s=IC({inputs:{input:r},backend:n}),a=hT({inputs:{x:s},backend:n}),i=hN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return DS({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const dT={kernelName:Fu,backendName:"cpu",kernelFunc:hT},pT={kernelName:Ll,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=fN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=IC({inputs:{input:s},backend:r}),i=hT({inputs:{x:a},backend:r}),o=hN({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return DS({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function fT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return yS({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{si(a,e.shape,"All tensors passed to stack must have matching shapes"),ri(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=NC({inputs:t.map((e=>{const t=yS({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const gT={kernelName:Bl,backendName:"cpu",kernelFunc:fT},mT={kernelName:Pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;U$(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=oi(s.shape),h=s.shape.length,d=Ci(s.shape),p=oi(o),f=o.length,g=Ci(o),m=mi(s.dtype,p);0!==i&&m.fill(i);for(let e=0;e<c;e++)m[Fi(Di(e,h,d).map(((e,t)=>e+l[t])),f,g)]=u[e];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}},bT=eN(((e,t)=>Math.pow(e,t))),yT=yN(Wl,bT),xT={kernelName:Wl,backendName:"cpu",kernelFunc:yT};function vT(e,t,n,r){const[s,a]=$p(e,r),i=xc(t,"int32"),o=Ai(oi(s),i),l=oi(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const wT={kernelName:Ul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;U$(s,"prod");const o=s.shape.length,l=fi(a,s.shape),u=Sp(l,o);let c=l,h=s;const d=[];null!=u&&(h=LN({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Tp(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=vT(h.shape,h.dtype,p,c);let b=g;return i&&(b=Np(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function kT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Ai(0,r);const s=Ai(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const IT={kernelName:Gl,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=kT(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},$T=j$(jl,(e=>1/e)),NT={kernelName:jl,backendName:"cpu",kernelFunc:$T},CT={kernelName:Jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;U$(s,"resizeBilinear");const l=Ci(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(oi([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=b[0]/y[0],w=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[b+e]-n)*r-a)*s;m[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},ST={kernelName:Zl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;U$([a,s],"resizeBilinearGrad");const o=Ci(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,$=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*$}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},ET={kernelName:Xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;U$(s,"resizeNearestNeighbor");const l=Ci(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}},TT={kernelName:Yl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;U$([a,s],"resizeNearestNeighborGrad");const o=Ci(s.shape),l=Ci(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,$=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-$/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<$;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},AT={kernelName:eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;U$(s,"reverse");const i=s.shape.length,o=fi(a,s.shape);if(0===i)return Y$({inputs:{x:s},backend:n});const l=new ic(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},RT={kernelName:Mu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=mi(r.dtype,oi(r.shape)),[u,c,h,d]=r.shape,[p,f]=Cg(i,c,h),g=Math.sin(s),m=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],y=o[2],x=o[1];let v=(y-p)*m-(x-f)*g,w=(y-p)*g+(x-f)*m;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=b[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},_T=j$(tu,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),FT={kernelName:tu,backendName:"cpu",kernelFunc:_T},DT=gC((e=>1/Math.sqrt(e))),MT=K$(nu,DT),OT={kernelName:nu,backendName:"cpu",kernelFunc:MT};function LT(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return xh(n,t.dtype);const p=xh(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const zT={kernelName:ru,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Mg(0,s,i),d=LT(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},BT={kernelName:su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;U$([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=xc(s.dtype,a.dtype),h=Ai(oi(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:oi(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},PT=Og,WT=Lg,VT=j$(au,(e=>e>=0?WT*e:PT*(Math.exp(e)-1))),UT={kernelName:au,backendName:"cpu",kernelFunc:VT},GT=j$(uu,(e=>e<0?-1:e>0?1:0)),HT={kernelName:uu,backendName:"cpu",kernelFunc:GT},jT=j$(ou,(e=>Math.sin(e))),KT={kernelName:ou,backendName:"cpu",kernelFunc:jT},qT=j$(lu,(e=>Math.sinh(e))),XT={kernelName:lu,backendName:"cpu",kernelFunc:qT},YT=Math.log(1.1920928955078125e-7)+2,JT=j$(hu,(e=>{const t=e>-YT,n=e<YT,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),ZT={kernelName:hu,backendName:"cpu",kernelFunc:JT},QT={kernelName:fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;U$([s],"spaceToBatchND");const o=oi(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=mT.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Sg(u.shape,a,o,!1),h=Eg(c.length,a.length,!1),d=Tg(u.shape,a,o,!1),p=$N({inputs:{x:u},backend:n,attrs:{shape:c}}),f=LN({inputs:{x:p},backend:n,attrs:{perm:h}}),g=$N({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function eA(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[bi(n,0),[0,h],bi(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=bi(n,t*h),d=bi(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[o,h],d,u,c]}}const tA={kernelName:bu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=eA(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function nA(e,t,n,r,s){const a=oi(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}\n          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${l}`);l[c]=e}const h=oi(l);if(h!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${l}`);const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=bi(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<o;++e)g[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[g,[i,o],l]}const rA={kernelName:yu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=nA(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},sA={kernelName:xu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=Mg(0,s,o),p=LT(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},aA={kernelName:gu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=fi(i,s.shape)[0],l=om(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=uC({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},iA=j$(du,(e=>Math.sqrt(e))),oA={kernelName:du,backendName:"cpu",kernelFunc:iA},lA={kernelName:wu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;U$(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},uA=eN(((e,t)=>{const n=e-t;return n*n})),cA=yN(vu,uA),hA={kernelName:vu,backendName:"cpu",kernelFunc:cA},dA=j$(Du,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),pA={kernelName:Du,backendName:"cpu",kernelFunc:dA};function fA(e,t,n,r){const s=xh(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const gA={kernelName:ku,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;U$(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Gh(s.shape,a,i,o,l,u,c,h,d),x=$N({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=uC({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=$N({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else{const e=fA(y,n.bufferSync(x),g,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=$N({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},mA=j$($u,(e=>Math.tan(e))),bA={kernelName:$u,backendName:"cpu",kernelFunc:mA},yA=j$(Nu,(e=>Math.tanh(e)));function xA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=xh(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function vA(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=mi(n,i*r),u=mi("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=l.subarray(i,i+r),h=u.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[xh(c,n,l),xh(c,"int32",u)]}function wA(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return ti(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return ti(0,n,t-1)}(e,t);case"nearest":return function(e,t){return ti(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function kA(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function IA(e,t,n,r,s,a,i,o,l,u,c){return kA(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function $A(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*kA(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*kA(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*kA(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*kA(e,t,n,r,s,a,i,p,f,u,c))}function NA(e,t,n,r){const s=fi(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new ic(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new ic(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const CA=[EN,AN,_N,DN,IN,MN,BN,PN,WN,VN,GN,jN,qN,JN,QN,rC,sC,aC,iC,SN,oC,hC,fC,bN,yC,vC,dN,wC,CC,TC,AC,EC,_C,FC,RC,MC,LC,zC,BC,PC,WC,UC,GC,HC,jC,KC,XC,qC,NS,nS,X$,rS,iS,fS,bS,xS,kS,FS,MS,OS,BS,VS,US,GS,HS,KS,YS,QS,J$,eE,$C,nE,sE,iE,Q$,uE,dE,fE,bE,xE,kE,$E,SE,EE,TE,ME,OE,LE,zE,BE,PE,_E,WE,VE,HE,jE,XE,ZE,QC,eT,nT,sT,iT,uT,cT,pT,gT,mT,xT,rN,wT,IT,gN,NT,aN,oN,NN,CT,ST,ET,TT,AT,RT,FT,OT,zT,BT,UT,uN,HT,KT,XT,cC,JE,ZT,QT,tA,rA,sA,aA,oA,lA,hA,pA,gA,TS,tS,bA,{kernelName:Nu,backendName:"cpu",kernelFunc:yA},{kernelName:Cu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;U$(s,"tile");const i=xA(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;U$(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=vA(o,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},zN,{kernelName:Eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=Ci(s.shape),y=b[0],x=b[1],v=b[2],w=mi(s.dtype,oi(m));w.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<g;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=wA(c,d,o),g=wA(p,h,o);switch(i){case"nearest":a=IA(k,h,d,y,x,v,e,g,f,s,l);break;case"bilinear":a=$A(k,h,d,y,x,v,e,g,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*y+n*x+r*v+s]=a}return r.makeTensorInfo(m,s.dtype,w)}return{dataId:r.write(w,m,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:Au,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;U$(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=NA(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Ru,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=uC({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=$N({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:_u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;U$(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=yS({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Ku(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=aS({inputs:{a:r,b:c},backend:n}),i=mN({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=ZC({inputs:{a:i,b:s},backend:n}),h=eS({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=fT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},dT];for(const e of CA)Gu(e);const SA={},EA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function TA(e){if(!(e in SA)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete SA[e]}),!1),1===e?t.getContext("webgl",EA)||t.getContext("experimental-webgl",EA):t.getContext("webgl2",EA)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;SA[e]=t}const t=SA[e];return t.isContextLost()?(delete SA[e],TA(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),SA[e])}var AA,RA,_A;function FA(e,t){return[t,e]}function DA(e){const t=oi(e);return ci(Math.ceil(t/4))}function MA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function OA(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===zi().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function LA(e,t){const n=t();return zi().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function zA(e){return!!(zi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function BA(e,t){return KA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(AA||(AA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(RA||(RA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_A||(_A={}));const PA=/ERROR: [0-9]+:([0-9]+):/g;function WA(e,t){if(LA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function VA(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(LA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),LA(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),LA(e,(()=>e.enableVertexAttribArray(o))),!0)}function UA(e,t,n,r){LA(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),LA(e,(()=>e.activeTexture(e.TEXTURE0+n))),LA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),LA(e,(()=>e.uniform1i(n,r)))}function GA(e,t,n){LA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),LA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function HA(e,t){LA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),LA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function jA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function KA(e,t,n){const r=LA(e,(()=>t()));if(null==r)throw new Error(n);return r}function qA(e,t=2){return oi(e.slice(0,e.length-t))}function XA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function YA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[qA(e),...XA(e)]),t}function JA(e){return e%2==0}function ZA(e,t){if(li(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(JA(n)&&JA(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&JA(e[0])&&JA(t[0])}let QA,eR;function tR(e,t){return null!=e.getExtension(t)}function nR(e){try{if(null!=TA(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function rR(e){const t=OA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function sR(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ri("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const aR=zi();function iR(){let e,t,n,r,s,a,i,o,l,u;return 2===zi().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function oR(e,t,n="index"){const r=Ci(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function lR(e){const t=Ci(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}aR.registerFlag("HAS_WEBGL",(()=>aR.getNumber("WEBGL_VERSION")>0)),aR.registerFlag("WEBGL_VERSION",(()=>nR(2)?2:nR(1)?1:0)),aR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),aR.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===aR.get("WEBGL_VERSION"))),aR.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),aR.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),aR.registerFlag("WEBGL_PACK",(()=>aR.getBool("HAS_WEBGL"))),aR.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_CLIP",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_PACK_REDUCE",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_LAZILY_UNPACK",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_CONV_IM2COL",(()=>aR.getBool("WEBGL_PACK"))),aR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==QA){const t=TA(e);QA=t.getParameter(t.MAX_TEXTURE_SIZE)}return QA}(aR.getNumber("WEBGL_VERSION")))),aR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==eR){const t=TA(e);eR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,eR)}(aR.getNumber("WEBGL_VERSION")))),aR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=aR.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=TA(e);return t=tR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:tR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),aR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>aR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Rc())),aR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=TA(e);if(1===e){if(!tR(t,"OES_texture_float"))return!1}else if(!tR(t,"EXT_color_buffer_float"))return!1;return rR(t)}(aR.getNumber("WEBGL_VERSION")))),aR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!aR.getBool("WEBGL_FORCE_F16_TEXTURES")&&aR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),aR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=TA(e);if(1!==e){if(tR(t,"EXT_color_buffer_float"))return rR(t);const e="EXT_color_buffer_half_float";if(tR(t,e)){const n=t.getExtension(e);return function(e,t){const n=OA(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!tR(t,"OES_texture_float")&&!!tR(t,"WEBGL_color_buffer_float")&&rR(t)}(aR.getNumber("WEBGL_VERSION")))),aR.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=aR.getNumber("WEBGL_VERSION"))&&null!=TA(e).fenceSync;var e})),aR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>aR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),aR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),aR.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Rc()&&aR.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const uR="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class cR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=AA.DENSE;const t=DA(e),n=iR();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${oR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class hR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=AA.DENSE;const t=DA(e),n=iR();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${oR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class dR{constructor(e){this.variableNames=["A"],this.outTexUsage=RA.DOWNLOAD;const t=iR();this.outputShape=e,this.userCode=`\n      ${uR}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class pR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=RA.DOWNLOAD;const t=iR();this.outputShape=e,this.userCode=`\n      ${uR}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class fR{constructor(e,t,n=!1){this.variableNames=["A"];const r=iR(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${lR(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class gR{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=iR(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${lR(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function mR(e,t,n,r,s,a){!function(e,t){const n=zi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return KA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return LA(e,(()=>e.bindTexture(o,i))),LA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),LA(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),LA(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),LA(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),LA(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),LA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function bR(e){return e.internalFormatFloat}function yR(e){return e.internalFormatHalfFloat}function xR(e){return e.downloadTextureFormat}function vR(e){return e.internalFormatPackedFloat}function wR(e){return e.internalFormatPackedHalfFloat}class kR{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=zi().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){SA[e]=t}(t,e)):this.gl=TA(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===zi().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=BA(this.gl,e),tR(this.gl,t))this.textureHalfFloatExtension=BA(this.gl,t);else if(zi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tR(this.gl,r))this.colorBufferHalfFloatExtension=BA(this.gl,r);else if(zi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!tR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=KA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return LA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),LA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=KA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return LA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),LA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return KA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=OA(this.gl,this.textureHalfFloatExtension)}get debug(){return zi().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;LA(e,(()=>e.finish())),LA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),LA(e,(()=>e.deleteFramebuffer(this.framebuffer))),LA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),LA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),LA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=FA(t,n);return mR(e,s,a,bR(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=FA(t,n);return mR(e,s,a,yR(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=FA(t,n);return mR(e,s,a,xR(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){LA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?LA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):LA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),LA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;LA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),LA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),LA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MA(t,n);return mR(e,s,a,wR(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=MA(t,n);return mR(e,s,a,vR(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(HA(this.gl,this.framebuffer),this.outputTexture=null),LA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=FA(t,n),i=new Uint8Array(t*n*4);return LA(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=MA(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();LA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return LA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),LA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),LA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(zi().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return LA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=KA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(LA(e,(()=>e.shaderSource(n,t))),LA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=PA.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>hi((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${hi(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=iR();return function(e,t){const n=KA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(LA(e,(()=>e.shaderSource(n,t))),LA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return KA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return LA(t,(()=>t.attachShader(r,this.vertexShader))),LA(t,(()=>t.attachShader(r,n))),function(e,t){if(LA(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&WA(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return LA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),VA(e,t,"clipSpacePos",n,3,20,0)&&VA(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&LA(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&WA(this.gl,this.program),LA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return KA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),LA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),UA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=MA(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&WA(this.gl,this.program),jA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),LA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),LA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=BA(this.gl,2===zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await di((()=>this.disposed||this.isQueryAvailable(e,zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||di((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),GA(this.gl,e,this.framebuffer),this.debug&&jA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(GA(this.gl,this.outputTexture,this.framebuffer),this.debug&&jA(this.gl)):HA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;GA(r,e,this.framebuffer),this.debug&&jA(r),this.outputTexture=e,LA(r,(()=>r.viewport(0,0,t,n))),LA(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),LA(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:IR}=r;function $R(e,t,n,r){const s=[];e.forEach((e=>{const t=oi(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?CR(e):NR(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=IR(e.shapeInfo.logicalShape,t.logicalShape),l=FR(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===oi(e.shapeInfo.logicalShape),g=1===oi(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&li(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=FR(l),c=IR(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=iR(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${SR}\n    ${ER}\n    ${TR}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(li(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return li(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=oR(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=oR(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=oR(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=oR(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=AR),[d,u,h,a,c,i,n].join("\n")}function NR(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${RR(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${_R(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=RR(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&li(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=gi(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${NR(DR(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${MR(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${_R(e)}\n      }\n    `;const l=s[0],u=s[1],c=RR(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=gi(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${NR(DR(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${MR(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${_R(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${RR(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:l}=gi(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${NR(DR(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${MR(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${_R(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${RR(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=gi(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${NR(DR(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${MR(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${_R(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${RR(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=gi(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${NR(DR(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${MR(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${_R(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${RR(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function CR(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${iR().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=iR();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=iR();if(null!=s&&li(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${CR(DR(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${MR(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${iR().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${iR().texture2D}(${r}, uv);\n    }\n  `}(e)}}const SR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ER="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",TR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function RR(e){return`offset${e}`}function _R(e){const t=e.name,n=oi(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function FR(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function DR(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function MR(e,t){return t.map((t=>e[t])).join(", ")}function OR(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!li(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!li(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:LR,bincountImpl:zR,bincountReduceImpl:BR,ceilImpl:PR,concatImpl:WR,expImpl:VR,expm1Impl:UR,floorImpl:GR,gatherV2Impl:HR,greaterImpl:jR,lessImpl:KR,linSpaceImpl:qR,logImpl:XR,maxImpl:YR,maximumImpl:JR,minimumImpl:ZR,multiplyImpl:QR,negImpl:e_,prodImpl:t_,rangeImpl:n_,rsqrtImpl:r_,simpleAbsImpl:s_,sliceImpl:a_,sparseFillEmptyRowsImpl:i_,sparseReshapeImpl:o_,stridedSliceImpl:l_,subImpl:u_,tileImpl:c_,topKImpl:h_,transposeImpl:d_,uniqueImpl:p_}=s;function f_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function g_(e,t){return 1===t?[e]:f_(e,t)}class m_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=g_("rc",t),r=FR(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class b_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${oR(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${lR(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class y_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=v_(t,n),s=w_(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=x_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===_A.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===_A.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===_A.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===_A.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===_A.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=v_(n,r),a=w_(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=x_(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=zi().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function x_(e,t,n,r,s){const a=function(e,t){switch(e){case _A.PACKED_2X2_FLOAT32:return vR(t);case _A.PACKED_2X2_FLOAT16:return wR(t);case _A.UNPACKED_FLOAT32:return bR(t);case _A.UNPACKED_FLOAT16:return yR(t);case _A.PACKED_4X1_UNSIGNED_BYTE:return xR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=MA(e[0],e[1]);i=t*n}else{const[t,n]=FA(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function v_(e,t){if(e===RA.UPLOAD)return _A.PACKED_2X2_FLOAT32;if(e===RA.RENDER||null==e)return function(e){return zi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?_A.PACKED_2X2_FLOAT32:_A.UNPACKED_FLOAT32:e?_A.PACKED_2X2_FLOAT16:_A.UNPACKED_FLOAT16}(t);if(e===RA.DOWNLOAD||e===RA.PIXELS)return _A.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function w_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class k_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const I_="return abs(x);",$_="return x;";class N_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class C_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=g_("rc",t),r=FR(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const S_=pm,E_={};class T_ extends Za{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!zi().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=TA(zi().getNumber("WEBGL_VERSION"));this.binaryCache=((t=zi().getNumber("WEBGL_VERSION"))in E_||(E_[t]={}),E_[t]),this.gpgpu=new kR(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new y_(this.gpgpu),this.numMBBeforeWarning=null==zi().global.screen?1024:zi().global.screen.height*zi().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Ja(this,qh())}nextDataId(){return T_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((zi().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||zi().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:RA.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(zi().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:RA.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new N_(i,$_):new k_(i,$_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Xu()),c="complex64"===r?jg(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Xu()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new N_(r,$_):new k_(r,$_);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!zi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===zi().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&zi().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...DA(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=jg(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=oi(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&qh().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Ju(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xh(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!zA(n)){if(zi().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=oi(t);if(zi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...DA(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=zi().getBool("WEBGL_PACK")&&!0===r,i=a?YA(t):t,o=a?new pR(i):new dR(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ii(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ii(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xu(),endMs:null}}endTimer(e){return zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Xu(),e)}async getQueryTime(e){if(zi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return zi().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&oi(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Gg("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return S_(e.shape,t)}packedUnaryOp(e,t,n){const r=new N_(e.shape,t),s=this.compileAndRun(r,[e],n);return qh().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=s_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(zi().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,I_,e.dtype);const t=new k_(e.shape,I_),n=this.compileAndRun(t,[e]);return qh().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&wi(n[0])){const s=n.map((e=>Yu(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return qh().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new C_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new m_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[qA(e.shape),...XA(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[qA(t),...XA(t)],a=new b_(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=YA(r);let i;return i=n?new hR(a):new cR(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===AA.DENSE){const t=DA(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===oi(a.shape))return i.values=mi(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&oi(t.shape)<=zi().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ZA(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=$R(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===zi().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(u,r,s),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,s)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,r,s){OR(t.inShapeInfos,n),OR([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===zi().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(oi(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=zi().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Xu();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!zi().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(zi().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yh((()=>{if(!zi().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=zi().getBool("DEBUG");zi().set("DEBUG",!1);const t=this.abs(td(1e-8)).dataSync()[0];if(zi().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Xu());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=zi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?ni(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=gi(e);e=t.newShape}let r=oi(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=qA(e);let n=2,s=2;return e.length&&([n,s]=XA(e)),r=t*(n/2)*(s/2),ci(r).map((e=>2*e))}return ci(r)}(n,o),t.texShape=c),null!=s){const e=YA(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=MA(c[0],c[1]),a=new gR(e,[h,i],d)):a=new fR(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?RA.PIXELS:RA.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,g=this.runWebGLProgram(a,[p],r,null,f),m=this.texData.get(g.dataId);t.texture=m.texture,t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),t.values=null,l&&(this.uploadWaitMs+=Xu()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*vi(t)}}T_.nextDataId=0,_c()&&Qh("webgl",(()=>new T_),2);class A_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Kd(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class R_{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Kd(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===oi(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${FR(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=g_("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function __(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const F_={kernelName:tl,backendName:"webgl",kernelFunc:__};function D_(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=__({inputs:{x:r},backend:n}),l=__({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const M_={kernelName:fo,backendName:"webgl",kernelFunc:D_},O_="return (a < 0.) ? b * a : a;",L_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",z_={kernelName:ol,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Ku(a,"float32")),o=zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new R_(L_,s.shape,i.shape):new A_(O_,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),l}},B_="return (a < 0.) ? b * a : a;",P_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",W_={kernelName:Vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new R_(P_,r.shape,s.shape):new A_(B_,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function V_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=zi().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new N_(i.shape,t):new k_(i.shape,e),o.runWebGLProgram(u,[i],l)}}function U_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new A_(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],xc(n.dtype,r.dtype))})),a=D_({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||xc(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new R_(t,l.shape,u.shape,n):new A_(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function G_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?P_:B_;if("leakyrelu"===e)return t?L_:O_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class H_{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class j_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Kd(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const K_="return a * b;";function q_(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=xc(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new j_("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new j_("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=D_({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=QR(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new R_(K_,r.shape,s.shape):new A_(K_,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const X_={kernelName:Rl,backendName:"webgl",kernelFunc:q_};function Y_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=oi(s.shape),l=pi(a,o),u=oi(l);ri(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||ZA(s.shape,l)||null!==c.texture&&ZA(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[qA(e.shape),...XA(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[qA(t),...XA(t)],i=new b_(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,i)}const J_={kernelName:ql,backendName:"webgl",kernelFunc:Y_};class Z_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ui(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Q_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function eF(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ng(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new Z_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Z_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Q_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class tF{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=FR(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class nF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=FR(this.rank),s=f_("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function rF(e,t,n){const r=zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nF(e.shape,t):new tF(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function sF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=fi(s,e.shape);let o=i;const l=Sp(o,a),u=null!=l;let c=e;u&&(c=rF(e,l,r),o=Tp(o.length,a)),Cp("sum",o,a);const[h,d]=$p(c.shape,o);let p=h;n&&(p=Np(h,i));const f=oi(d),g=Y_({inputs:{x:c},attrs:{shape:[oi(e.shape)/f,f]},backend:r}),m=eF(g,vc(e.dtype),"sum",r),b=Y_({inputs:{x:m},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const aF={kernelName:pu,backendName:"webgl",kernelFunc:sF};function iF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=d_(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=rF(s,a,i);return u}const oF={kernelName:Tu,backendName:"webgl",kernelFunc:iF};function lF({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=oi(g),y=oi(m);ri(u>=2&&c>=2&&(b===y||1===b||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${m}).`));const x=(b>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);ri(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[b,h,p]:[b,p,h],w=r?[y,f,d]:[y,d,f],k=Y_({inputs:{x:e},backend:s,attrs:{shape:v}}),I=Y_({inputs:{x:t},backend:s,attrs:{shape:w}}),$=[k,I],N=Math.max(b,y),C=n?k.shape[1]:k.shape[2],S=null!=a,E=null!=i,T="leakyrelu"===l,A=null!=l?G_(l,!0):null;let R;if((1===p||1===f)&&C>1e3&&!1===(S||E||T||null!=A)){let e=k,t=I;n&&(e=iF({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=iF({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===f;let i=e;1!==f&&(i=Y_({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),$.push(i));const o=1===f?2:1;let l=t;a&&(l=Y_({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),$.push(l));const u=q_({inputs:{a:i,b:l},backend:s});R=sF({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=xc(e.dtype,t.dtype),u=new H_(v,w,[N,p,f],n,r,S,A,E,T),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),T){const e=s.makeTensorInfo([],"float32",Ku(o,"float32"));c.push(e),$.push(e)}R=s.runWebGLProgram(u,c,l)}const _=Y_({inputs:{x:R},backend:s,attrs:{shape:x}});$.push(R);for(const e of $)s.disposeIntermediateTensorInfo(e);return _}const uF={kernelName:Ou,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return lF({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},cF="return abs(x);",hF={kernelName:Ui,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=s_(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=zi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new N_(r.shape,cF):new k_(r.shape,cF),n.runWebGLProgram(s,[r],r.dtype)}},dF=V_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),pF={kernelName:Gi,backendName:"webgl",kernelFunc:dF},fF=V_({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gF={kernelName:Hi,backendName:"webgl",kernelFunc:fF},mF="return a + b;",bF=U_({opSnippet:mF,packedOpSnippet:mF,supportsComplex:!0,cpuKernelImpl:LR}),yF={kernelName:ji,backendName:"webgl",kernelFunc:bF};class xF{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class vF{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const wF={kernelName:Ki,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return __({inputs:{x:s[0]},backend:r});if(s.length>zi().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>xc(e,t))),i=s.map((e=>e.shape)),o=zi().getBool("WEBGL_PACK")?new vF(s[0].shape,i):new xF(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},kF={kernelName:qi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=fi(a,s.shape);let u=l;const c=Sp(u,o);let h=s;null!=c&&(h=iF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Tp(u.length,o)),Cp("all",u,o);const[d,p]=$p(h.shape,u),f=Y_({inputs:{x:h},backend:n,attrs:{shape:[-1,oi(p)]}}),g=eF(f,f.dtype,"all",n);let m;return m=Y_(i?{inputs:{x:g},backend:n,attrs:{shape:Np(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},IF={kernelName:Xi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=fi(a,s.shape);let u=l;const c=Sp(u,o);let h=s;null!=c&&(h=iF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Tp(u.length,o)),Cp("any",u,o);const[d,p]=$p(h.shape,u),f=Y_({inputs:{x:h},backend:n,attrs:{shape:[-1,oi(p)]}}),g=eF(f,f.dtype,"any",n);let m;return m=Y_(i?{inputs:{x:g},backend:n,attrs:{shape:Np(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class $F{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class NF{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ri(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=FR(o),u=g_("coords",o);let c,h;if(1===a){h=o+1;const e=FR(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=g_("sourceLocR",h-1).concat("inIdx.r"),m=g_("sourceLocG",h-1).concat("inIdx.g"),b=g_("sourceLocB",h-1).concat("inIdx.b"),y=g_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function CF(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Ng(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new $F(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=CF(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function SF(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Ng(s[s.length-1]),i=new NF(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=SF(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function EF(e,t,n,r){const s=[n];if(Cp("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!zi().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=$p(t.shape,s),o=oi(i),l=Y_({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=CF(e,l,r);n.push(u);const c=Y_({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return SF(e,t,r)}const TF={kernelName:Yi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=fi(a,s.shape);const o=Sp(i,s.shape.length);let l=s;const u=[];null!=o&&(l=iF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Tp(i.length,l.shape.length)),Cp("argMax",[i[0]],l.shape.length);const c=EF(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},AF={kernelName:Ji,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=fi(a,s.shape);const o=Sp(i,s.shape.length);let l=s;const u=[];null!=o&&(l=iF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Tp(i.length,l.shape.length)),Cp("argMin",[i[0]],l.shape.length);const c=EF(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},RF=V_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),_F={kernelName:Zi,backendName:"webgl",kernelFunc:RF},FF=V_({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),DF={kernelName:Qi,backendName:"webgl",kernelFunc:FF},MF=V_({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),OF={kernelName:eo,backendName:"webgl",kernelFunc:MF},LF=U_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zF={kernelName:no,backendName:"webgl",kernelFunc:LF},BF=V_({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),PF={kernelName:to,backendName:"webgl",kernelFunc:BF};class WF{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class VF{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const UF={kernelName:ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;sR(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ri(xd(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ud(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&li(u.inShape,u.outShape))return __({inputs:{x:s},backend:n});const c=new WF(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},GF={kernelName:ao,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=cd(s.shape,a,i,[1,1,1],o,l,u),h=new VF(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class HF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KF={kernelName:io,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=cd(i.shape,o,l,[1,1,1],u,c),d=new jF(h);return n.runWebGLProgram(d,[s],i.dtype)}},qF={kernelName:so,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;sR([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=ud(i.shape,o,l,1,u),h=new HF(c);return n.runWebGLProgram(h,[s],i.dtype)}},XF={kernelName:oo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return lF({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class YF{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Kd(e,t),Kd(e,n);let i="0.0";null!=r&&(Kd(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Kd(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class JF{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Kd(e,t),Kd(e,n);let i="vec4(0.0)";null!=r&&(Kd(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Kd(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ZF={kernelName:Yo,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ri(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ri(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ri(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=zi().getBool("WEBGL_PACK_NORMALIZATION")?new JF(r.shape,s.shape,a.shape,c,h,l):new YF(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class QF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=FR(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return eD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${eD[t]} = start[${t}] + coords.${eD[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const eD=["x","y","z","w","u","v"];class tD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=FR(this.rank),n=g_("coords",this.rank),r=g_("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function nD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Uh(s,a,i);if(Th(s,o,l),0===oi(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=a_(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Wh(s.shape,o,l);if(u||!c){const e=zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tD(l):new QF(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Vh(t,Ci(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const rD={kernelName:iu,backendName:"webgl",kernelFunc:nD},sD={kernelName:lo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ri(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Sg(s.shape,a,o),u=Eg(l.length,a.length),c=Tg(s.shape,a,o),h=Ag(i,a.length),d=Rg(c,i,a.length),p=[],f=Y_({inputs:{x:s},backend:n,attrs:{shape:l}}),g=iF({inputs:{x:f},backend:n,attrs:{perm:u}}),m=Y_({inputs:{x:g},backend:n,attrs:{shape:c}}),b=nD({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},aD={kernelName:uo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=zR(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},iD=U_({opSnippet:"return float(a != b);",dtype:"bool"}),oD={kernelName:Fl,backendName:"webgl",kernelFunc:iD};function lD(e){const{inputs:t,backend:n}=e,{input:r}=t;return __({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const uD={kernelName:Hl,backendName:"webgl",kernelFunc:lD},cD={kernelName:co,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return __({inputs:{x:a},backend:r});const t=yp(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=D_({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=lD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!yi(a.dtype,i)){const e=__({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new k_(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",mi("bool",1)),t=iD({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},hD="return ceil(x);",dD=V_({opSnippet:hD,packedOpSnippet:hD,cpuKernelImpl:PR}),pD={kernelName:ho,backendName:"webgl",kernelFunc:dD};class fD{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class gD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const mD={kernelName:po,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=zi().getBool("WEBGL_PACK_CLIP")?new gD(s.shape):new fD(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class bD{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function yD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const xD={kernelName:go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new bD(r.shape),i=[yD(r,s.complexTensorInfos.real),yD(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class vD{constructor(e){this.outputShape=[],this.outputShape=Ig(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class wD{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ig(e,t);const n=this.outputShape,r=n.length,s=FR(r),a=g_("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${kD(i,l,t)}),\n            vec2(${kD(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${kD(i,l,p)}),\n          vec2(${kD(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function kD(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function ID(e){const{inputs:t,backend:n}=e,{input:r}=t;return __({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const $D={kernelName:rl,backendName:"webgl",kernelFunc:ID};function ND(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>lD({inputs:{input:e},backend:n}))),s=e.map((e=>ID({inputs:{input:e},backend:n}))),a=ND(r,t,n),i=ND(s,t,n),o=D_({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=oi(e.shape.slice(t));return Y_({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Ig(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=WR(a,i,r,o),u=Ig(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>zi().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=ND(e.slice(0,r),t,n),a=ND(e.slice(r),t,n),i=ND([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new wD(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:i}=function(e,t,n){const r=Ig(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Y_({inputs:{x:e},attrs:{shape:[-1,oi(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new vD(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=Y_({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function CD(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=fi(s,t[0].shape)[0],i=Ig(t.map((e=>e.shape)),a);if(0===oi(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oi(e.shape)>0));return 1===o.length?__({inputs:{x:o[0]},backend:n}):(kg(o.map((e=>e.shape)),a),ND(o,a,n))}const SD={kernelName:mo,backendName:"webgl",kernelFunc:CD};class ED{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class TD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AD{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=iR(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}function RD({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const g=[],m=(1===h||1===d)&&c>1e3,b=l[2]%2!=0&&!!u.isPacked;if(!m&&zi().getBool("WEBGL_LAZILY_UNPACK")&&zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ri(ZA(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const m=Y_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(m);const b=lF({a:h,b:m,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(b.dataId);ri(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,f=__({inputs:{x:b},backend:r}),f.shape=n.outShape,g.push(b)}else{const u=Y_({inputs:{x:e},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Y_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=lF({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=Y_({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return f}function _D({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[g,m],y=[],x=Y_({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=Y_({inputs:{x:t},backend:r,attrs:{shape:[1,g,oi(t.shape)/g]}});y.push(x),y.push(v);const w=new AD(b,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=Y_({inputs:{x:k},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(k),y.push(I);const $=null!=s,N=null!=a,C="leakyrelu"===o,S=o?G_(o,!0):null,E=new H_(I.shape,v.shape,[1,m,n.outChannels],!0,!1,$,S,N,C),T=[I,v];if(s&&T.push(s),N&&T.push(a),C){const e=r.makeTensorInfo([],"float32",Ku(i,"float32"));T.push(e),y.push(e)}const A=r.runWebGLProgram(E,T,"float32"),R=Y_({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return R}const FD={kernelName:bo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=vd(l),d=hd(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(zi().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=_D({x:s,filter:a,convInfo:d,backend:n});else{const e=new ED(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=RD({x:s,filter:a,convInfo:d,backend:n});const f=Y_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class DD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const zD={kernelName:yo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=vd(l),d=hd(s.shape,c,i,1,o,u,!1,h),p=new DD(d);return n.runWebGLProgram(p,[s,a],"float32")}},BD={kernelName:xo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=vd(u),d=hd(i,a.shape,o,1,l,c,!1,h),p=new MD(d);return n.runWebGLProgram(p,[s,a],"float32")}},PD={kernelName:vo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=dd(s.shape,a.shape,i,l,o),c=new TD(u);return n.runWebGLProgram(c,[s,a],"float32")}},WD={kernelName:wo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=dd(s.shape,l,i,1,o),c=new OD(u);return n.runWebGLProgram(c,[s,a],"float32")}},VD={kernelName:ko,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=dd(l,a.shape,o,1,i),c=new LD(u);return n.runWebGLProgram(c,[s,a],"float32")}},UD=V_({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),GD={kernelName:Io,backendName:"webgl",kernelFunc:UD},HD=V_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),jD={kernelName:$o,backendName:"webgl",kernelFunc:HD};class KD{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const qD={kernelName:Co,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new KD(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class XD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${YD(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${FR(r)} coords = getOutputCoords();\n        int end = ${JD(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${JD(r,"coords")} = idx;\n          val += getX(${YD(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function YD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function JD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const ZD={kernelName:No,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=Sp([a],l);let c=s;null!=u&&(c=iF({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Tp(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=__({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new XD(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new XD(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=iF({inputs:{x:p},backend:n,attrs:{perm:Ep(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},QD={kernelName:So,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=zR(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=BR(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class eM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const tM={kernelName:Eo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ri(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l="NHWC"===i?s.shape[1]:s.shape[2],u="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=l*a,d=u*a,p=c/(a*a),f=new eM("NHWC"===i?[o,h,d,p]:[o,p,h,d],a,i);return n.runWebGLProgram(f,[s],s.dtype)}};class nM{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,g=e.outChannels/e.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class rM{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,m=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<(m+1)/2;t++){const n=2*t,r=n*p;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<g&&(u%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,b+=1===p&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<g)){const e=u%2==0?ni(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<g&&(u%2==1?(b+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<g&&(b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<g&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<g&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const sM={kernelName:To,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),ri(xd(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=hd(s.shape,a.shape,i,c,o,u,!0);let d;return d=zi().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new rM(h):new nM(h),n.runWebGLProgram(d,[s,a],"float32")}};class aM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const oM={kernelName:Ao,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=hd(s.shape,c,i,o,l,u,!0),d=new aM(h);return n.runWebGLProgram(d,[s,a],"float32")}},lM={kernelName:Ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=hd(c,a.shape,i,o,l,u,!0),d=new iM(h);return n.runWebGLProgram(d,[s,a],"float32")}};class uM{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const cM={kernelName:_o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=oi(r.shape),i=Y_({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new uM(a),l=n.runWebGLProgram(o,[i],i.dtype),u=Y_({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class hM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const dM={kernelName:Fo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=ld(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new hM(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=Y_({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},pM={kernelName:Lo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=tm(s,a.length);rm(i.length,l,a);const{path:u,steps:c}=sm(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=nm(p,l[t]);let s;am(e)?s=a[t]:(s=iF({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);li(s.shape,i)||(s=Y_({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=q_({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=sF({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},fM=V_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),gM={kernelName:zo,backendName:"webgl",kernelFunc:fM},mM={kernelName:Bo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=zi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new R_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new A_("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},bM=U_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),yM={kernelName:Wo,backendName:"webgl",kernelFunc:bM},xM=V_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${zg};\n  float a1 = ${Bg};\n  float a2 = ${Pg};\n  float a3 = ${Wg};\n  float a4 = ${Vg};\n  float a5 = ${Ug};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),vM={kernelName:Po,backendName:"webgl",kernelFunc:xM},wM="return exp(x);",kM=V_({opSnippet:wM,packedOpSnippet:wM,cpuKernelImpl:VR}),IM={kernelName:Vo,backendName:"webgl",kernelFunc:kM};function $M(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(ri(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Y_({inputs:{x:a},backend:r,attrs:{shape:o}})}const NM={kernelName:Uo,backendName:"webgl",kernelFunc:$M},CM="return exp(x) - 1.0;",SM=V_({opSnippet:CM,packedOpSnippet:CM,cpuKernelImpl:UR}),EM={kernelName:Go,backendName:"webgl",kernelFunc:SM};class TM{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function AM(e,t,n){const r=n.texData.get(e.dataId),s=oi(e.shape),a=e.shape[e.shape.length-1],i=Y_({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new TM("real",o,t),u=new TM("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=D_({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=Y_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const RM={kernelName:Ho,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AM(r,!1,n)}};class _M{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function FM(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ii(s),"string"===a){const e=bi(a,oi(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new _M(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const DM={kernelName:jo,backendName:"webgl",kernelFunc:FM};class MM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const OM={kernelName:Ko,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new MM(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},LM="return floor(x);",zM=V_({opSnippet:LM,packedOpSnippet:LM,cpuKernelImpl:GR}),BM={kernelName:qo,backendName:"webgl",kernelFunc:zM},PM=U_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),WM={kernelName:Xo,backendName:"webgl",kernelFunc:PM};class VM{constructor(e){this.variableNames=["A"];const t=iR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class UM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=iR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const GM={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(o||i)&&(null==HM&&(HM=document.createElement("canvas").getContext("2d")),HM.canvas.width=l,HM.canvas.height=u,HM.drawImage(s,0,0,l,u),s=HM.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=RA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=zi().getBool("WEBGL_PACK")?new UM(h):new VM(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let HM;const jM={kernelName:Lu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=vd(c),m=hd(s.shape,a.shape,l,h,u,d,!1,g);let b;const y=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(zi().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=_D({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,l=p?G_(p,!1):null,u=new ED(m,e,l,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Ku(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=RD({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=Y_({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},KM={kernelName:zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let g=c;null==g&&(g=[1,1]),ri(xd(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=hd(s.shape,a.shape,l,g,u,h,!0),b=zi().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,y=d?G_(d,b):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Ku(p,"float32"));x.push(e),f.push(e)}let I;I=b?new rM(m,v,y,w,k):new nM(m,v,y,w,k);const $=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class qM{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=FR(t.length),s=FR(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const XM={kernelName:Zo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,l,u,c]=_g(r,s),h=Y_({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=Y_({inputs:{x:r},backend:n,attrs:{shape:[oi(r.shape)/u,u]}}),p=new qM(i,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),g=Y_({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),g}};class YM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=FR(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const JM={kernelName:Jo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=cm(s,a,fi(i,s.shape)[0],o),u=oi(a.shape),c=[],h=Y_({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=Y_({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=HR(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new YM(h.shape,p),g=n.runWebGLProgram(f,[h,d],h.dtype);c.push(g);const m=Y_({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},ZM=U_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:jR,dtype:"bool"}),QM={kernelName:Qo,backendName:"webgl",kernelFunc:ZM},eO=U_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),tO={kernelName:el,backendName:"webgl",kernelFunc:eO},nO={kernelName:nl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return AM(r,!0,n)}},rO=V_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sO={kernelName:sl,backendName:"webgl",kernelFunc:rO},aO=V_({opSnippet:"return float(isinf(x));",dtype:"bool"}),iO={kernelName:al,backendName:"webgl",kernelFunc:aO},oO=V_({opSnippet:"return float(isnan(x));",dtype:"bool"}),lO={kernelName:il,backendName:"webgl",kernelFunc:oO},uO=U_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:KR,dtype:"bool"}),cO={kernelName:ll,backendName:"webgl",kernelFunc:uO},hO=U_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),dO={kernelName:ul,backendName:"webgl",kernelFunc:hO},pO={kernelName:cl,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=qR(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},fO=V_({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:XR}),gO={kernelName:hl,backendName:"webgl",kernelFunc:fO},mO=V_({opSnippet:"return log(1.0 + x);"}),bO={kernelName:dl,backendName:"webgl",kernelFunc:mO},yO=U_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),xO={kernelName:pl,backendName:"webgl",kernelFunc:yO},vO=V_({opSnippet:"return float(!(x >= 1.0));"}),wO={kernelName:fl,backendName:"webgl",kernelFunc:vO},kO=U_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),IO={kernelName:gl,backendName:"webgl",kernelFunc:kO};class $O{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class NO{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const CO={kernelName:ml,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=zi().getBool("WEBGL_PACK_NORMALIZATION")?new NO(s.shape,a,i,o,l):new $O(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class SO{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const EO={kernelName:bl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new SO(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function TO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=fi(a,s.shape);let u=l;const c=Sp(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=d_(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=rF(s,c,n);u=Tp(u.length,o)}Cp("max",u,o);const[f,g]=$p(p.shape,u);let m,b=f;if(i&&(b=Np(f,l)),d){const e=n.texData.get(p.dataId).values,t=YR(e,oi(g),b,s.dtype);m=n.makeTensorInfo(b,s.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const s=oi(t),a=Y_({inputs:{x:e},attrs:{shape:[oi(e.shape)/s,s]},backend:r}),i=eF(a,e.dtype,"max",r),o=Y_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const AO={kernelName:yl,backendName:"webgl",kernelFunc:TO},RO=U_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:JR}),_O={kernelName:xl,backendName:"webgl",kernelFunc:RO},FO={kernelName:vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;sR(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ri(xd(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=ud(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&li(u.inShape,u.outShape))return __({inputs:{x:s},backend:n});const c=new WF(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},DO={kernelName:kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=cd(s.shape,a,i,[1,1,1],o,u,l),h=new VF(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class MO{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OO{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const LO={kernelName:Il,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=cd(i.shape,o,l,[1,1,1],u,c),d=new VF(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new OO(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},zO={kernelName:wl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;sR([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=ud(o.shape,l,u,1,c,h),p=new WF(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new MO(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},BO={kernelName:$l,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;ri(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];ri(xd(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=ud(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new WF(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new WF(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},PO={kernelName:Nl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=fi(a,r.shape);let u=l;const c=Sp(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=d_(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=rF(r,c,i);p.push(f),u=Tp(u.length,o)}Cp("sum",u,o);const[g,m]=$p(f.shape,u);let b=g;s&&(b=Np(g,l));const y=function(e,t,n,r){const s=oi(t),a=Y_({inputs:{x:e},attrs:{shape:[oi(e.shape)/s,s]},backend:r}),i=eF(a,"float32","mean",r),o=Y_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,m,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},WO={kernelName:Cl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=fi(a,s.shape);let u=l;const c=Sp(u,o);let h=s;null!=c&&(h=iF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Tp(u.length,s.shape.length)),Cp("min",u,o);const[d,p]=$p(h.shape,u),f=Y_({inputs:{x:h},backend:n,attrs:{shape:[-1,oi(p)]}}),g=eF(f,f.dtype,"min",n);let m;return m=Y_(i?{inputs:{x:g},backend:n,attrs:{shape:Np(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},VO=U_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ZR}),UO={kernelName:Sl,backendName:"webgl",kernelFunc:VO};class GO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FR(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class HO{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FR(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=g_("rc",r),l=g_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const jO={kernelName:El,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new HO(r.shape,s,a):new GO(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},KO=U_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qO={kernelName:Tl,backendName:"webgl",kernelFunc:KO};class XO{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const YO=U_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),JO={kernelName:Oo,backendName:"webgl",kernelFunc:YO},ZO="return a - b;",QO=U_({opSnippet:ZO,packedOpSnippet:ZO,supportsComplex:!0,cpuKernelImpl:u_}),eL={kernelName:Iu,backendName:"webgl",kernelFunc:QO};function tL(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=fi([a],s.shape),o=TO({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Np(o.shape,i),u=Y_({inputs:{x:o},backend:n,attrs:{shape:l}}),c=QO({inputs:{a:s,b:u},backend:n}),h=kM({inputs:{x:c},backend:n}),d=sF({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=Y_({inputs:{x:d},backend:n,attrs:{shape:l}}),f=YO({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const nL={kernelName:mu,backendName:"webgl",kernelFunc:tL},rL={kernelName:Al,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:tL({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new XO(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},sL="return -x;",aL={kernelName:_l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=e_(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=zi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new N_(r.shape,sL):new k_(r.shape,sL),n.runWebGLProgram(s,[r],r.dtype)}},iL=Bf,oL={kernelName:Dl,backendName:"webgl",kernelFunc:function(e){Gg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=iL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},lL=Pf,uL={kernelName:Ml,backendName:"webgl",kernelFunc:function(e){Gg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=lL(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},cL=Wf,hL={kernelName:Ol,backendName:"webgl",kernelFunc:function(e){Gg("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=cL(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class dL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const pL={kernelName:zl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,l=oi(s.shape),u=new dL(l,a,i,o),c=Y_({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=Y_({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function fL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=lD({inputs:{input:r},backend:n}),t=fL({inputs:{x:e},backend:n}),s=ID({inputs:{input:r},backend:n}),a=fL({inputs:{x:s},backend:n}),i=D_({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return FM({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const gL={kernelName:Fu,backendName:"webgl",kernelFunc:fL},mL={kernelName:Ll,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=lD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ID({inputs:{input:s},backend:r}),i=fL({inputs:{x:a},backend:r}),o=D_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return FM({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},bL={kernelName:Bl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return $M({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{si(a,e.shape,"All tensors passed to stack must have matching shapes"),ri(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=CD({inputs:t.map((e=>{const t=$M({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class yL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FR(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class xL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=FR(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=g_("rc",r),l=g_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const vL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xL(s.shape,a,i):new yL(s.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[s],s.dtype,l)},wL={kernelName:Pl,backendName:"webgl",kernelFunc:vL},kL=U_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),IL={kernelName:Wl,backendName:"webgl",kernelFunc:kL},$L={kernelName:Ul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=fi(a,s.shape);let c=u;const h=Sp(c,o);let d,p=s;if(null!=h&&(p=iF({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Tp(c.length,o),l.push(p)),Cp("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=t_(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=$p(p.shape,c),r=oi(t),a=Y_({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=eF(a,vc(s.dtype),"prod",n);d=Y_({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Np(d.shape,u);d=Y_({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},NL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=n_(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},CL={kernelName:Gl,backendName:"webgl",kernelFunc:NL},SL=V_({opSnippet:"return 1.0 / x;"}),EL={kernelName:jl,backendName:"webgl",kernelFunc:SL},TL=V_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AL={kernelName:Kl,backendName:"webgl",kernelFunc:TL},RL=V_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_L={kernelName:Ql,backendName:"webgl",kernelFunc:RL};class FL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class DL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const ML={kernelName:Jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=zi().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new DL(s.shape,l,u,a,i):new FL(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class OL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const LL={kernelName:Zl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new OL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class zL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class BL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const PL={kernelName:Xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=zi().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new BL(s.shape,l,u,a,i):new zL(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class WL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const VL={kernelName:Yl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new WL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class UL{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=FR(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class GL{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=g_("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=FR(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const HL={kernelName:eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=fi(a,s.shape);if(0===i)return __({inputs:{x:s},backend:n});const l=zi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GL(s.shape,o):new UL(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class jL{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(s,a)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(a,"params")),s.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const KL={kernelName:Mu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new jL(r.shape,a),[u,c]=Cg(i,r.shape[1],r.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(s),Math.cos(s));return o.runWebGLProgram(l,[r],r.dtype,h)}},qL=V_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),XL={kernelName:tu,backendName:"webgl",kernelFunc:qL},YL=V_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:r_}),JL={kernelName:nu,backendName:"webgl",kernelFunc:YL};class ZL{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=FR(s.length),l=FR(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const QL={kernelName:ru,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=Mg(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=Y_({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=Y_({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new ZL(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=Y_({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class ez{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=FR(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const tz={kernelName:su,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new ez(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],xc(s.dtype,a.dtype))}},nz=V_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Og};\n  float scale = ${Lg};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),rz={kernelName:au,backendName:"webgl",kernelFunc:nz},sz=V_({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),az={kernelName:cu,backendName:"webgl",kernelFunc:sz},iz=V_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),oz={kernelName:uu,backendName:"webgl",kernelFunc:iz},lz=V_({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),uz={kernelName:ou,backendName:"webgl",kernelFunc:lz},cz=V_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),hz={kernelName:lu,backendName:"webgl",kernelFunc:cz},dz=V_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),pz={kernelName:hu,backendName:"webgl",kernelFunc:dz},fz={kernelName:fu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ri(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=vL({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Sg(c.shape,a,o,!1),d=Eg(h.length,a.length,!1),p=Tg(c.shape,a,o,!1),f=Y_({inputs:{x:c},backend:n,attrs:{shape:h}}),g=iF({inputs:{x:f},backend:n,attrs:{perm:d}}),m=Y_({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},gz={kernelName:bu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=i_(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},mz={kernelName:yu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=o_(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},bz={kernelName:xu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=Mg(0,s,o),d=new ZL(u,l,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=Y_({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},yz={kernelName:gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=fi(i,s.shape)[0],l=om(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=nD({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},xz=V_({opSnippet:"return sqrt(x);"}),vz={kernelName:du,backendName:"webgl",kernelFunc:xz},wz={kernelName:wu,backendName:"webgl",kernelFunc:V_({opSnippet:"return x * x;"})},kz="return (a - b) * (a - b);",Iz=U_({opSnippet:kz,packedOpSnippet:kz}),$z={kernelName:vu,backendName:"webgl",kernelFunc:Iz},Nz={kernelName:Du,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new k_(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Cz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=FR(n.length),a=FR(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Sz={kernelName:ku,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=Gh(s.shape,a,i,o,l,u,c,h,d),x=Y_({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=nD({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=Y_({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=xh(x.shape,x.dtype,e),r=l_(y,t,g,f);v=n.makeTensorInfo(y,x.dtype,r.values)}else{const e=new Cz(f,g,y);v=n.runWebGLProgram(e,[x],x.dtype)}const w=Y_({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},Ez=V_({opSnippet:"return tan(x);"}),Tz={kernelName:$u,backendName:"webgl",kernelFunc:Ez},Az=V_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Rz={kernelName:Nu,backendName:"webgl",kernelFunc:Az};class _z{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=FR(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Fz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Ju(e))):e,r=xh(s.shape,s.dtype,t),i=c_(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new _z(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const Dz={kernelName:Cu,backendName:"webgl",kernelFunc:Fz},Mz={kernelName:Su,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=h_(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class Oz{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Lz={kernelName:Eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=new Oz(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[s,a],"float32")}},zz={kernelName:Au,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;sR(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=p_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},Bz={kernelName:Ru,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=nD({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=Y_({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Pz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Wz=[CO,EO,uF,hF,pF,gF,yF,wF,kF,IF,TF,AF,_F,DF,zF,OF,PF,GF,UF,KF,qF,XF,ZF,sD,aD,cD,pD,mD,xD,M_,SD,zD,BD,FD,WD,VD,PD,GD,jD,qD,ZD,QD,tM,oM,lM,sM,cM,dM,pM,gM,mM,yM,vM,IM,NM,EM,RM,DM,OM,BM,WM,GM,jM,KM,XM,JM,QM,tO,F_,nO,$D,sO,iO,lO,z_,cO,dO,pO,bO,gO,xO,wO,IO,AO,DO,FO,LO,zO,BO,_O,PO,WO,UO,jO,qO,rL,X_,aL,oL,uL,hL,oD,pL,mL,bL,wL,IL,W_,$L,CL,uD,JO,EL,_L,AL,J_,ML,LL,PL,VL,HL,KL,XL,JL,QL,tz,rz,az,oz,uz,hz,rD,nL,pz,fz,gz,mz,bz,yz,vz,wz,$z,Nz,Sz,eL,aF,Tz,Rz,Dz,Mz,Lz,oF,zz,Bz,{kernelName:_u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=Sp([u],o);let h=s;null!=c&&(h=iF({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Tp(1,o)[0]);const d=um(h.shape,u,i),p=oi([h.shape[u]]),f=Y_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=vc(s.dtype),m=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=lm(o,a),c=new Pz({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=NL({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=Fz({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,s,a)},b=Y_({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=Ep(c);y=iF({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},gL];for(const e of Wz)Gu(e);const Vz={factor:Vc([-1,-1.5,2,-1.5]),center:Vc([[.5,.7],[.4,.2],[.6,.2],[.9,.3]])},Uz=e=>((e,t,n)=>Yh((()=>{var r=((e,t,n)=>Yh((()=>{var r=e.shape.slice(0,-1),s=t.shape.slice(0,-1);return r.forEach((()=>{t=t.expandDims(0)})),s.forEach((()=>{e=e.expandDims(-2)})),console.log(e.shape),console.log(t.shape),console.log(e.shape),Kp(cp(e.sub(t).square(),-1).mul(-10)).mul(n)})))(e,t,n);return cp(r,-1)})))(e,Vz.center,Vz.factor),Gz=e=>Yh((()=>{var[t,n]=e.split(2,-1);return t=t.mul(12).sub(6),n=n.mul(12).sub(6),t.square().add(n).sub(11).square().add(t.add(n.square()).sub(7).square())})),Hz=e=>Yh((()=>{var[t,n]=e.split(2,-1),t=t.mul(3.5).sub(1.5),n=n.mul(3.5).sub(.5);return td(1).sub(t).square().add(n.sub(t.square()).square().mul(100))})),jz=e=>Yh((()=>{var[t,n]=e.split(2,-1),t=t.mul(9).sub(4.5),n=n.mul(9).sub(4.5),r=t.mul(n),s=td(1.5).sub(t).add(r).square();return r=r.mul(n),s.add(td(2.25).sub(t).add(r).square()).add(td(2.625).sub(t).add(r).mul(n).square())}));function Kz(e){let t,n,r,s,i,o,l,u,c,h,b;return{c(){t=f("div"),t.innerHTML='<div class="col" id="plot-1"></div> \n      <div class="col" id="plot-2"></div> \n      <div class="col" id="plot-3"></div> \n      <div class="col" id="plot-4"></div>',n=g(),r=f("div"),r.textContent="\\( \\theta \\)",s=g(),i=f("div"),i.textContent="\\( \\phi_1 \\)",o=g(),l=f("div"),l.textContent="\\( \\phi_2 \\)",u=g(),c=f("div"),c.textContent="\\( \\phi_3 \\)",h=g(),b=f("div"),b.textContent="\\( \\phi_3 \\)",m(t,"class","container svelte-1772tyd"),m(r,"id","vector-theta"),m(i,"id","vector-phi1"),m(l,"id","vector-phi2"),m(c,"id","vector-phi3"),m(b,"id","vector-phi4")},m(e,a){d(e,t,a),d(e,n,a),d(e,r,a),d(e,s,a),d(e,i,a),d(e,o,a),d(e,l,a),d(e,u,a),d(e,c,a),d(e,h,a),d(e,b,a)},p:a,i:a,o:a,d(e){e&&p(t),e&&p(n),e&&p(r),e&&p(s),e&&p(i),e&&p(o),e&&p(l),e&&p(u),e&&p(c),e&&p(h),e&&p(b)}}}function qz(e){const t=[200,200],n={left:30,right:10,top:10,bottom:20};class r{constructor(e,r=t,s=n){var[a,i]=r,o=a-s.left-s.right,l=i-s.top-s.bottom;this.id=e,this.svg=Sr(e).append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("viewBox",`0 0 ${a} ${i}`),this.chart=this.svg.append("g").attr("transform",`translate(${s.left}, ${s.top})`),this.margin=s,this.xscale=ja().domain([0,1]).range([0,o]),this.yscale=ja().domain([0,1]).range([l,0]),this.svg_size=r,this.size=[o,l]}add_axis(){this.chart.append("g").attr("opacity",.5).attr("fill","black").attr("transform",`translate(0, ${this.size[1]})`).call(H(3,void 0).scale(this.xscale)).call((e=>e.select(".domain").remove())),this.chart.append("g").attr("opacity",.5).call(H(4,void 0).scale(this.yscale)).call((e=>e.select(".domain").remove()))}add_contour(e,t=!1){var n=e(sf(function(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Lc(e,"x","meshgrid",e instanceof cc?e.dtype:"float32");if(void 0===t)return[r];let s=Lc(t,"y","meshgrid",t instanceof cc?t.dtype:"float32");const a=oi(r.shape),i=oi(s.shape);return"xy"===n?(r=wd(r,[1,-1]),s=wd(s,[-1,1]),[bp(xp([i,1],r.dtype),r),bp(s,xp([1,a],s.dtype))]):(r=wd(r,[-1,1]),s=wd(s,[1,-1]),[bp(r,xp([1,i],r.dtype)),bp(xp([a,1],s.dtype),s)])}(sp(...this.xscale.domain(),256),sp(...this.yscale.domain(),256)),-1));t&&(n=ap(n)),n=Array.from(n.bufferSync().values);var r=Xa,s=ja().domain(O(n)).range([0,1]),a=function(){var e=1,t=1,n=pr,r=o;function s(e){var t=n(e);if(Array.isArray(t))t=t.slice().sort(vr);else{var r=O(e),s=r[0],i=r[1];t=yr(s,i,t),t=function(e,t,n){e=+e,t=+t,n=(s=arguments.length)<2?(t=e,e=0,1):s<3?1:+n;for(var r=-1,s=0|Math.max(0,Math.ceil((t-e)/n)),a=new Array(s);++r<s;)a[r]=e+r*n;return a}(Math.floor(s/t)*t,Math.floor(i/t)*t,t)}return t.map((function(t){return a(e,t)}))}function a(n,s){var a=[],o=[];return function(n,r,s){var a,o,l,u,c,h,d=new Array,p=new Array;for(a=o=-1,u=n[0]>=r,Cr[u<<1].forEach(f);++a<e-1;)l=u,u=n[a+1]>=r,Cr[l|u<<1].forEach(f);for(Cr[u<<0].forEach(f);++o<t-1;){for(a=-1,u=n[o*e+e]>=r,c=n[o*e]>=r,Cr[u<<1|c<<2].forEach(f);++a<e-1;)l=u,u=n[o*e+e+a+1]>=r,h=c,c=n[o*e+a+1]>=r,Cr[l|u<<1|c<<2|h<<3].forEach(f);Cr[u|c<<3].forEach(f)}for(a=-1,c=n[o*e]>=r,Cr[c<<2].forEach(f);++a<e-1;)h=c,c=n[o*e+a+1]>=r,Cr[c<<2|h<<3].forEach(f);function f(e){var t,n,r=[e[0][0]+a,e[0][1]+o],l=[e[1][0]+a,e[1][1]+o],u=i(r),c=i(l);(t=p[u])?(n=d[c])?(delete p[t.end],delete d[n.start],t===n?(t.ring.push(l),s(t.ring)):d[t.start]=p[n.end]={start:t.start,end:n.end,ring:t.ring.concat(n.ring)}):(delete p[t.end],t.ring.push(l),p[t.end=c]=t):(t=d[c])?(n=p[u])?(delete d[t.start],delete p[n.end],t===n?(t.ring.push(l),s(t.ring)):d[n.start]=p[t.end]={start:n.start,end:t.end,ring:n.ring.concat(t.ring)}):(delete d[t.start],t.ring.unshift(r),d[t.start=u]=t):d[u]=p[c]={start:u,end:c,ring:[r,l]}}Cr[c<<3].forEach(f)}(n,s,(function(e){r(e,n,s),function(e){for(var t=0,n=e.length,r=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)r+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return r}(e)>0?a.push([e]):o.push(e)})),o.forEach((function(e){for(var t,n=0,r=a.length;n<r;++n)if(-1!==kr((t=a[n])[0],e))return void t.push(e)})),{type:"MultiPolygon",value:s,coordinates:a}}function i(t){return 2*t[0]+t[1]*(e+1)*4}function o(n,r,s){n.forEach((function(n){var a,i=n[0],o=n[1],l=0|i,u=0|o,c=r[u*e+l];i>0&&i<e&&l===i&&(a=r[u*e+l-1],n[0]=i+(s-a)/(c-a)-.5),o>0&&o<t&&u===o&&(a=r[(u-1)*e+l],n[1]=o+(s-a)/(c-a)-.5)}))}return s.contour=a,s.size=function(n){if(!arguments.length)return[e,t];var r=Math.floor(n[0]),a=Math.floor(n[1]);if(!(r>=0&&a>=0))throw new Error("invalid size");return e=r,t=a,s},s.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?wr(xr.call(e)):wr(e),s):n},s.smooth=function(e){return arguments.length?(r=e?o:Nr,s):r===o},s}().size([256,256]).thresholds(20)(n),[i,o]=this.size;this.chart.append("g").attr("fill","none").attr("stroke","#fff").attr("stroke-opacity",.3).selectAll("path").data(a).enter().append("path").attr("fill",(e=>r(s(e.value)))).attr("stroke","#white").attr("transform",`translate(0,${o}), scale(${i/256}, ${-o/256})`).attr("d",function(e,t){var n,r,s=4.5;function a(e){return e&&("function"==typeof s&&r.pointRadius(+s.apply(this,arguments)),Gr(e,n(r))),r.result()}return a.area=function(e){return Gr(e,n(ps)),ps.result()},a.measure=function(e){return Gr(e,n(Qs)),Qs.result()},a.bounds=function(e){return Gr(e,n(ys)),ys.result()},a.centroid=function(e){return Gr(e,n(Vs)),Vs.result()},a.projection=function(t){return arguments.length?(n=null==t?(e=null,zr):(e=t).stream,a):e},a.context=function(e){return arguments.length?(r=null==e?(t=null,new ea):new Us(t=e),"function"!=typeof s&&r.pointRadius(s),a):t},a.pointRadius=function(e){return arguments.length?(s="function"==typeof e?e:(r.pointRadius(+e),+e),a):s},a.projection(e).context(t)}(ca()))}add_theta(e){var t=this.xscale,n=this.yscale,r=this.chart,s=[.1,.9],a=.1,i=this.chart.append("line").style("stroke","white").style("stroke-width",1).style("opacity",a).attr("x1",t(0)).attr("y1",n(s[1])).attr("x2",t(1)).attr("y2",n(s[1])),o=this.chart.append("line").style("stroke","white").style("stroke-width",1).style("opacity",a).attr("x1",t(s[0])).attr("y1",n(0)).attr("x2",t(s[0])).attr("y2",n(1)),l=this.chart.selectAll("dot").data([s]).enter().append("circle").attr("cx",(e=>this.xscale(e[0]))).attr("cy",(e=>this.yscale(e[1]))).attr("stroke-width",.5).attr("stroke","black").attr("fill","white").attr("r",2).on("mouseover",(function(e){l.transition().duration(100).attr("r",4),i.transition().duration(100).style("opacity",.7),o.transition().duration(100).style("opacity",.7)})).on("mouseout",(function(e){l.transition().duration(100).attr("r",2),i.transition().duration(100).style("opacity",a),o.transition().duration(100).style("opacity",a)}));e.on(`theta_changed.${this.id}`,((e,r)=>{l.attr("cx",t(e)).attr("cy",n(r)),i.attr("y1",n(r)).attr("y2",n(r)),o.attr("x1",t(e)).attr("x2",t(e))})),l.call(Lr().on("drag",(function(s){var[a,i]=Er(s,r.node());console.log(s),console.log(a,i),a=t.invert(a),i=n.invert(i),a=Math.max(Math.min(1,a),0),i=Math.max(Math.min(1,i),0),e.call("theta_changed",this,a,i),console.log(a,i)})))}}return x((()=>{var e=dt("theta_changed"),t=new r("#plot-1");t.add_contour(Uz),t.add_axis(),t.add_theta(e);var n=new r("#plot-2");n.add_contour(Gz,!0),n.add_axis(),n.add_theta(e);var s=new r("#plot-3");s.add_contour(Hz,!0),s.add_axis(),s.add_theta(e);var a=new r("#plot-4");a.add_contour(jz,!0),a.add_axis(),a.add_theta(e)})),[]}class Xz{constructor(e,t,n,r,s,a){this.g=e,this.innerWidth=n-t.left-t.right,this.innerHeight=r-t.top-t.bottom,this.xrange=s,this.yrange=a,this.margin=t,this.width=n,this.height=r,this.xscale=ja().domain(s).range([0,this.innerWidth]),this.yscale=ja().domain(a).range([this.innerHeight,0])}onHorizontalAxis=e=>this.xscale(e);fromHorizontalAxis=e=>e/this.innerWidth*(this.xrange[1]-this.xrange[0])+this.xrange[0];onVerticalAxis=e=>this.yscale(e);fromVerticalAxis=e=>(this.innerHeight-e)/this.innerHeight*(this.yrange[1]-this.yrange[0])+this.xrange[0];scaleVectorComponent=(e,t,n)=>(t-e)*n+e;d3eventToCoordinates=e=>{var[t,n]=Er(e,this.g.node());return t=this.xscale.invert(t),n=this.yscale.invert(n),{x:t=Math.max(Math.min(this.xrange[1],t),this.xrange[0]),y:n=Math.max(Math.min(this.yrange[1],n),this.yrange[0])}};d3sourceEventToCoordinates=e=>({x:this.fromHorizontalAxis(e.sourceEvent.layerX-this.margin.left),y:this.fromVerticalAxis(e.sourceEvent.layerY-this.margin.top)})}class Yz{constructor(e,t,n,r){this.svg=e,this.origin=t,this.vectors=n,this.coordinateConversions=r,this.defaultOrigin=t}declare(){return this.positionLabels(),this.renderVectorsWithShades(),this.renderOrigin(),this}animate(){this.animateOriginDrag()}positionLabels(){}renderVectorsWithShades(){var e=this.vectorsWithOriginData();this.vectorMarkerAttributes(this.svg.selectAll("defs").data(e).enter().append("defs").append("marker")),this.vectorElements=this.vectorAttributes(this.svg.append("g").selectAll("line").data(e).enter().append("line")),this.vectorShadeElements=this.vectorShadeAttributes(this.svg.append("g").selectAll("line").data(e).enter().append("line"))}renderOrigin(){console.log(this.origin),this.originElement=this.originAttributes(this.svg.selectAll("circle").data([this.origin]).enter().append("circle"))}animateOriginDrag(){Lr().on("drag",(e=>{this.origin=this.coordinateConversions.d3eventToCoordinates(e);var t=this.vectorsWithOriginData();this.originAttributes(this.originElement.datum(this.origin)),this.vectorAttributes(this.vectorElements.data(t)),this.vectorShadeAttributes(this.vectorShadeElements.data(t))}))(this.originElement)}animateVectorDrag(){Lr().on("drag",(e=>{this.vectors=this.vectors.map((t=>t.id==e.subject.id?{...t,...this.coordinateConversions.d3sourceEventToCoordinates(e)}:t));var t=this.vectorsWithOriginData();this.positionLabels(),this.vectorAttributes(this.vectorElements.data(t)),this.vectorShadeAttributes(this.vectorShadeElements.data(t))}))(this.vectorShadeElements)}vectorsWithOriginData(){return this.vectors.map((e=>({...e,origin:this.origin})))}vectorMarkerAttributes=e=>e.attr("id",(e=>`density-marker-${e.id}`)).attr("markerWidth",3).attr("markerHeight",3).attr("refX",0).attr("refY",1.5).attr("orient","auto").append("polygon").attr("points","0 0, 3 1.5, 0 3");vectorAttributes=e=>e.attr("x1",(e=>this.coordinateConversions.onHorizontalAxis(e.origin.x))).attr("x2",(e=>this.coordinateConversions.onHorizontalAxis(e.x))).attr("y1",(e=>this.coordinateConversions.onVerticalAxis(e.origin.y))).attr("y2",(e=>this.coordinateConversions.onVerticalAxis(e.y))).attr("stroke","#000").attr("stroke-width",2).attr("marker-end",(e=>`url(#density-marker-${e.id})`)).attr("pointer-events","bounding-box").attr("cursor","pointer");vectorShadeAttributes=e=>e.attr("x1",(e=>this.coordinateConversions.onHorizontalAxis(e.origin.x))).attr("x2",(e=>this.coordinateConversions.onHorizontalAxis(this.coordinateConversions.scaleVectorComponent(e.origin.x,e.x,1.05)))).attr("y1",(e=>this.coordinateConversions.onVerticalAxis(e.origin.y))).attr("y2",(e=>this.coordinateConversions.onVerticalAxis(this.coordinateConversions.scaleVectorComponent(e.origin.y,e.y,1.05)))).attr("stroke","lightgreen").attr("stroke-width",16).attr("stroke-opacity",0).attr("cursor","pointer");originAttributes=e=>e.attr("cx",(e=>this.coordinateConversions.onHorizontalAxis(e.x))).attr("cy",(e=>this.coordinateConversions.onVerticalAxis(e.y))).attr("r",4);labelAttributes=e=>e.attr("style",(e=>`\n        position: absolute; \n        left: ${this.coordinateConversions.onHorizontalAxis(e.x)+15+"px"};\n        top: ${this.coordinateConversions.onVerticalAxis(e.y)+30+"px"};\n    `))}function Jz(e){let t,n,r,s,i,o,l;return{c(){t=f("div"),n=g(),r=f("div"),r.textContent="\\( \\phi_1 \\)",s=g(),i=f("div"),i.textContent="\\( \\phi_2 \\)",o=g(),l=f("div"),l.textContent="\\( \\phi_3 \\)",m(t,"id","density"),m(r,"id","vector-phi1"),m(i,"id","vector-phi2"),m(l,"id","vector-phi3")},m(e,a){d(e,t,a),d(e,n,a),d(e,r,a),d(e,s,a),d(e,i,a),d(e,o,a),d(e,l,a)},p:a,i:a,o:a,d(e){e&&p(t),e&&p(n),e&&p(r),e&&p(s),e&&p(i),e&&p(o),e&&p(l)}}}function Zz(e){const t={top:20,right:30,bottom:30,left:40},n=[1,4],r=[1,6];return x((()=>{var e=Sr("#density").append("svg").attr("style","border: 1px solid").attr("width",400).attr("height",400).append("g").attr("transform","translate("+t.left+","+t.top+")"),s=new Xz(e,t,400,400,n,r);new Yz(e,{x:3.15,y:4.15},[{id:"vector-phi1",x:2.7,y:3.5},{id:"vector-phi2",x:2.3,y:4.5},{id:"vector-phi3",x:4,y:3.4}],s).declare().animate()})),[]}console.log(document.querySelector("#looking_for_theta")),new class extends M{constructor(e){super(),D(this,e,qz,Kz,c,{})}}({target:document.querySelector("#looking_for_theta")}),new class extends M{constructor(e){super(),D(this,e,Zz,Jz,c,{})}}({target:document.querySelector("#metaGradient")})})()})();