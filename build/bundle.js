/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(42)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},42:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Ch,computeFlatOffset:()=>Bh,computeOutShape:()=>Eh,getNormalizedAxes:()=>_h,isSliceContinous:()=>zh,maskToAxes:()=>Sh,parseSliceParams:()=>Ph,sliceInfo:()=>Wh,startForAxis:()=>Oh,startIndicesWithElidedDims:()=>Fh,stopForAxis:()=>Lh,stopIndicesWithElidedDims:()=>Dh,stridesForAxis:()=>Mh,stridesWithElidedDims:()=>Th});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>og,computeOutShape:()=>ig,segOpComputeOptimalWindowSize:()=>ag});var r={};n.r(r),n.d(r,{ERF_A1:()=>Om,ERF_A2:()=>Lm,ERF_A3:()=>zm,ERF_A4:()=>Bm,ERF_A5:()=>Pm,ERF_P:()=>Mm,PARALLELIZE_THRESHOLD:()=>wm,SELU_SCALE:()=>Dm,SELU_SCALEALPHA:()=>Fm,applyActivation:()=>If,assertAndGetBroadcastShape:()=>Gd,assertAxesAreInnerMostDims:()=>Ip,assertParamsConsistent:()=>xm,assignToTypedArray:()=>qm,axesAreInnerMostDims:()=>xp,calculateShapes:()=>_m,checkEinsumDimSizes:()=>eg,combineLocations:()=>vp,complexWithEvenIndex:()=>Hm,complexWithOddIndex:()=>jm,computeConv2DInfo:()=>ld,computeConv3DInfo:()=>ud,computeDefaultPad:()=>cd,computeDilation2DInfo:()=>ad,computeOptimalWindowSize:()=>km,computeOutAndReduceShapes:()=>wp,computeOutShape:()=>vm,computePool2DInfo:()=>id,computePool3DInfo:()=>od,convertConv2DDataFormat:()=>bd,decodeEinsumEquation:()=>Zm,eitherStridesOrDilationsAreOne:()=>gd,expandShapeToKeepDim:()=>kp,exponent:()=>Ym,exponents:()=>Xm,fromStringArrayToUint8:()=>ug,fromUint8ToStringArray:()=>lg,getAxesPermutation:()=>$p,getBroadcastDims:()=>Vd,getComplexWithIndex:()=>Km,getEinsumComputePath:()=>tg,getEinsumPermutation:()=>Qm,getFusedBiasGradient:()=>kf,getFusedDyActivation:()=>wf,getImageCenter:()=>Im,getInnerMostAxes:()=>Cp,getPermuted:()=>Nm,getReductionAxes:()=>Ud,getReshaped:()=>$m,getReshapedPermuted:()=>Cm,getSliceBeginCoords:()=>Sm,getSliceSize:()=>Em,getUndoAxesPermutation:()=>Np,isIdentityPermutation:()=>ng,log:()=>Vm,mergeRealAndImagArrays:()=>Um,prepareAndValidate:()=>Tm,prepareSplitSize:()=>sg,segment_util:()=>t,shouldFuse:()=>$f,slice_util:()=>e,splitRealAndImagArrays:()=>Gm,tupleValuesAreOne:()=>md,upcastType:()=>gc,validateInput:()=>Am,validateUpdateShape:()=>Rm,warn:()=>Wm});var s={};function a(){}function i(e){return e()}function o(){return Object.create(null)}function l(e){e.forEach(i)}function u(e){return"function"==typeof e}function c(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function h(e){return 0===Object.keys(e).length}function d(e,t,n){e.insertBefore(t,n||null)}function p(e){e.parentNode.removeChild(e)}function f(e){return document.createElement(e)}function m(){return e=" ",document.createTextNode(e);var e}function g(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}let b;function y(e){b=e}n.r(s),n.d(s,{addImpl:()=>bN,bincountImpl:()=>uC,bincountReduceImpl:()=>cC,ceilImpl:()=>pC,concatImpl:()=>xC,expImpl:()=>dS,expm1Impl:()=>bS,floorImpl:()=>DS,gatherV2Impl:()=>US,greaterImpl:()=>HS,lessImpl:()=>sE,linSpaceImpl:()=>cE,logImpl:()=>dE,maxImpl:()=>SE,maximumImpl:()=>RE,minimumImpl:()=>PE,multiplyImpl:()=>KC,negImpl:()=>YE,notEqualImpl:()=>sT,prodImpl:()=>bT,rangeImpl:()=>xT,rsqrtImpl:()=>AT,simpleAbsImpl:()=>CN,sliceImpl:()=>aC,sparseFillEmptyRowsImpl:()=>JT,sparseReshapeImpl:()=>QT,squaredDifferenceImpl:()=>iR,stridedSliceImpl:()=>hR,subImpl:()=>IS,tileImpl:()=>gR,topKImpl:()=>bR,transposeImpl:()=>FN,uniqueImpl:()=>kR}),new Set,new Set;const x=[],v=[],w=[],k=[],I=Promise.resolve();let $=!1;function N(e){w.push(e)}let C=!1;const S=new Set;function E(){if(!C){C=!0;do{for(let e=0;e<x.length;e+=1){const t=x[e];y(t),T(t.$$)}for(y(null),x.length=0;v.length;)v.pop()();for(let e=0;e<w.length;e+=1){const t=w[e];S.has(t)||(S.add(t),t())}w.length=0}while(x.length);for(;k.length;)k.pop()();$=!1,C=!1,S.clear()}}function T(e){if(null!==e.fragment){e.update(),l(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(N)}}const R=new Set;let A;function _(e,t){const n=e.$$;null!==n.fragment&&(l(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function F(e,t,n,r,s,c,h=[-1]){const d=b;y(e);const f=e.$$={fragment:null,ctx:null,props:c,update:a,not_equal:s,bound:o(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(d?d.$$.context:t.context||[]),callbacks:o(),dirty:h,skip_bound:!1};let m=!1;if(f.ctx=n?n(e,t.props||{},((t,n,...r)=>{const a=r.length?r[0]:n;return f.ctx&&s(f.ctx[t],f.ctx[t]=a)&&(!f.skip_bound&&f.bound[t]&&f.bound[t](a),m&&function(e,t){-1===e.$$.dirty[0]&&(x.push(e),$||($=!0,I.then(E)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}(e,t)),n})):[],f.update(),m=!0,l(f.before_update),f.fragment=!!r&&r(f.ctx),t.target){if(t.hydrate){const e=(w=t.target,Array.from(w.childNodes));f.fragment&&f.fragment.l(e),e.forEach(p)}else f.fragment&&f.fragment.c();t.intro&&((g=e.$$.fragment)&&g.i&&(R.delete(g),g.i(v))),function(e,t,n,r){const{fragment:s,on_mount:a,on_destroy:o,after_update:c}=e.$$;s&&s.m(t,n),r||N((()=>{const t=a.map(i).filter(u);o?o.push(...t):l(t),e.$$.on_mount=[]})),c.forEach(N)}(e,t.target,t.anchor,t.customElement),E()}var g,v,w;y(d)}"undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global,new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]),"function"==typeof HTMLElement&&(A=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:e}=this.$$;this.$$.on_disconnect=e.map(i).filter(u);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(e,t,n){this[e]=n}disconnectedCallback(){l(this.$$.on_disconnect)}$destroy(){_(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!h(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}});function D(e,t){let n,r;if(void 0===t)for(const t of e)null!=t&&(void 0===n?t>=t&&(n=r=t):(n>t&&(n=t),r<t&&(r=t)));else{let s=-1;for(let a of e)null!=(a=t(a,++s,e))&&(void 0===n?a>=a&&(n=r=a):(n>a&&(n=a),r<a&&(r=a)))}return[n,r]}var M=Array.prototype.slice;function O(e){return e}var L=1e-6;function z(e){return"translate("+e+",0)"}function B(e){return"translate(0,"+e+")"}function P(e){return t=>+e(t)}function W(e,t){return t=Math.max(0,e.bandwidth()-2*t)/2,e.round()&&(t=Math.round(t)),n=>+e(n)+t}function V(){return!this.__axis}function U(e,t){var n=[],r=null,s=null,a=6,i=6,o=3,l="undefined"!=typeof window&&window.devicePixelRatio>1?0:.5,u=1===e||4===e?-1:1,c=4===e||2===e?"x":"y",h=1===e||3===e?z:B;function d(d){var p=null==r?t.ticks?t.ticks.apply(t,n):t.domain():r,f=null==s?t.tickFormat?t.tickFormat.apply(t,n):O:s,m=Math.max(a,0)+o,g=t.range(),b=+g[0]+l,y=+g[g.length-1]+l,x=(t.bandwidth?W:P)(t.copy(),l),v=d.selection?d.selection():d,w=v.selectAll(".domain").data([null]),k=v.selectAll(".tick").data(p,t).order(),I=k.exit(),$=k.enter().append("g").attr("class","tick"),N=k.select("line"),C=k.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),k=k.merge($),N=N.merge($.append("line").attr("stroke","currentColor").attr(c+"2",u*a)),C=C.merge($.append("text").attr("fill","currentColor").attr(c,u*m).attr("dy",1===e?"0em":3===e?"0.71em":"0.32em")),d!==v&&(w=w.transition(d),k=k.transition(d),N=N.transition(d),C=C.transition(d),I=I.transition(d).attr("opacity",L).attr("transform",(function(e){return isFinite(e=x(e))?h(e+l):this.getAttribute("transform")})),$.attr("opacity",L).attr("transform",(function(e){var t=this.parentNode.__axis;return h((t&&isFinite(t=t(e))?t:x(e))+l)}))),I.remove(),w.attr("d",4===e||2===e?i?"M"+u*i+","+b+"H"+l+"V"+y+"H"+u*i:"M"+l+","+b+"V"+y:i?"M"+b+","+u*i+"V"+l+"H"+y+"V"+u*i:"M"+b+","+l+"H"+y),k.attr("opacity",1).attr("transform",(function(e){return h(x(e)+l)})),N.attr(c+"2",u*a),C.attr(c,u*m).text(f),v.filter(V).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===e?"start":4===e?"end":"middle"),v.each((function(){this.__axis=x}))}return d.scale=function(e){return arguments.length?(t=e,d):t},d.ticks=function(){return n=M.call(arguments),d},d.tickArguments=function(e){return arguments.length?(n=null==e?[]:M.call(e),d):n.slice()},d.tickValues=function(e){return arguments.length?(r=null==e?null:M.call(e),d):r&&r.slice()},d.tickFormat=function(e){return arguments.length?(s=e,d):s},d.tickSize=function(e){return arguments.length?(a=i=+e,d):a},d.tickSizeInner=function(e){return arguments.length?(a=+e,d):a},d.tickSizeOuter=function(e){return arguments.length?(i=+e,d):i},d.tickPadding=function(e){return arguments.length?(o=+e,d):o},d.offset=function(e){return arguments.length?(l=+e,d):l},d}function G(){}function H(e){return null==e?G:function(){return this.querySelector(e)}}function j(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function K(){return[]}function q(e){return null==e?K:function(){return this.querySelectorAll(e)}}function X(e){return function(){return this.matches(e)}}function Y(e){return function(t){return t.matches(e)}}var J=Array.prototype.find;function Z(){return this.firstElementChild}var Q=Array.prototype.filter;function ee(){return this.children}function te(e){return new Array(e.length)}function ne(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function re(e){return function(){return e}}function se(e,t,n,r,s,a){for(var i,o=0,l=t.length,u=a.length;o<u;++o)(i=t[o])?(i.__data__=a[o],r[o]=i):n[o]=new ne(e,a[o]);for(;o<l;++o)(i=t[o])&&(s[o]=i)}function ae(e,t,n,r,s,a,i){var o,l,u,c=new Map,h=t.length,d=a.length,p=new Array(h);for(o=0;o<h;++o)(l=t[o])&&(p[o]=u=i.call(l,l.__data__,o,t)+"",c.has(u)?s[o]=l:c.set(u,l));for(o=0;o<d;++o)u=i.call(e,a[o],o,a)+"",(l=c.get(u))?(r[o]=l,l.__data__=a[o],c.delete(u)):n[o]=new ne(e,a[o]);for(o=0;o<h;++o)(l=t[o])&&c.get(p[o])===l&&(s[o]=l)}function ie(e){return e.__data__}function oe(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}ne.prototype={constructor:ne,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var le="http://www.w3.org/1999/xhtml";const ue={svg:"http://www.w3.org/2000/svg",xhtml:le,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ce(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),ue.hasOwnProperty(t)?{space:ue[t],local:e}:e}function he(e){return function(){this.removeAttribute(e)}}function de(e){return function(){this.removeAttributeNS(e.space,e.local)}}function pe(e,t){return function(){this.setAttribute(e,t)}}function fe(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function me(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}function ge(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function be(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function ye(e){return function(){this.style.removeProperty(e)}}function xe(e,t,n){return function(){this.style.setProperty(e,t,n)}}function ve(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function we(e,t){return e.style.getPropertyValue(t)||be(e).getComputedStyle(e,null).getPropertyValue(t)}function ke(e){return function(){delete this[e]}}function Ie(e,t){return function(){this[e]=t}}function $e(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}function Ne(e){return e.trim().split(/^|\s+/)}function Ce(e){return e.classList||new Se(e)}function Se(e){this._node=e,this._names=Ne(e.getAttribute("class")||"")}function Ee(e,t){for(var n=Ce(e),r=-1,s=t.length;++r<s;)n.add(t[r])}function Te(e,t){for(var n=Ce(e),r=-1,s=t.length;++r<s;)n.remove(t[r])}function Re(e){return function(){Ee(this,e)}}function Ae(e){return function(){Te(this,e)}}function _e(e,t){return function(){(t.apply(this,arguments)?Ee:Te)(this,e)}}function Fe(){this.textContent=""}function De(e){return function(){this.textContent=e}}function Me(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function Oe(){this.innerHTML=""}function Le(e){return function(){this.innerHTML=e}}function ze(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function Be(){this.nextSibling&&this.parentNode.appendChild(this)}function Pe(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function We(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===le&&t.documentElement.namespaceURI===le?t.createElement(e):t.createElementNS(n,e)}}function Ve(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function Ue(e){var t=ce(e);return(t.local?Ve:We)(t)}function Ge(){return null}function He(){var e=this.parentNode;e&&e.removeChild(this)}function je(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function Ke(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function qe(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}function Xe(e){return function(){var t=this.__on;if(t){for(var n,r=0,s=-1,a=t.length;r<a;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++s]=n:this.removeEventListener(n.type,n.listener,n.options);++s?t.length=s:delete this.__on}}}function Ye(e,t,n){return function(){var r,s=this.__on,a=function(e){return function(t){e.call(this,t,this.__data__)}}(t);if(s)for(var i=0,o=s.length;i<o;++i)if((r=s[i]).type===e.type&&r.name===e.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=a,r.options=n),void(r.value=t);this.addEventListener(e.type,a,n),r={type:e.type,name:e.name,value:t,listener:a,options:n},s?s.push(r):this.__on=[r]}}function Je(e,t,n){var r=be(e),s=r.CustomEvent;"function"==typeof s?s=new s(t,n):(s=r.document.createEvent("Event"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e.dispatchEvent(s)}function Ze(e,t){return function(){return Je(this,e,t)}}function Qe(e,t){return function(){return Je(this,e,t.apply(this,arguments))}}Se.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var et=[null];function tt(e,t){this._groups=e,this._parents=t}function nt(){return new tt([[document.documentElement]],et)}tt.prototype=nt.prototype={constructor:tt,select:function(e){"function"!=typeof e&&(e=H(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i,o=t[s],l=o.length,u=r[s]=new Array(l),c=0;c<l;++c)(a=o[c])&&(i=e.call(a,a.__data__,c,o))&&("__data__"in a&&(i.__data__=a.__data__),u[c]=i);return new tt(r,this._parents)},selectAll:function(e){e="function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);return null==t?[]:j(t)}}(e):q(e);for(var t=this._groups,n=t.length,r=[],s=[],a=0;a<n;++a)for(var i,o=t[a],l=o.length,u=0;u<l;++u)(i=o[u])&&(r.push(e.call(i,i.__data__,u,o)),s.push(i));return new tt(r,s)},selectChild:function(e){return this.select(null==e?Z:function(e){return function(){return J.call(this.children,e)}}("function"==typeof e?e:Y(e)))},selectChildren:function(e){return this.selectAll(null==e?ee:function(e){return function(){return Q.call(this.children,e)}}("function"==typeof e?e:Y(e)))},filter:function(e){"function"!=typeof e&&(e=X(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new tt(r,this._parents)},data:function(e,t){if(!arguments.length)return Array.from(this,ie);var n=t?ae:se,r=this._parents,s=this._groups;"function"!=typeof e&&(e=re(e));for(var a=s.length,i=new Array(a),o=new Array(a),l=new Array(a),u=0;u<a;++u){var c=r[u],h=s[u],d=h.length,p=j(e.call(c,c&&c.__data__,u,r)),f=p.length,m=o[u]=new Array(f),g=i[u]=new Array(f),b=l[u]=new Array(d);n(c,h,m,g,b,p,t);for(var y,x,v=0,w=0;v<f;++v)if(y=m[v]){for(v>=w&&(w=v+1);!(x=g[w])&&++w<f;);y._next=x||null}}return(i=new tt(i,r))._enter=o,i._exit=l,i},enter:function(){return new tt(this._enter||this._groups.map(te),this._parents)},exit:function(){return new tt(this._exit||this._groups.map(te),this._parents)},join:function(e,t,n){var r=this.enter(),s=this,a=this.exit();return r="function"==typeof e?e(r):r.append(e+""),null!=t&&(s=t(s)),null==n?a.remove():n(a),r&&s?r.merge(s).order():s},merge:function(e){if(!(e instanceof tt))throw new Error("invalid merge");for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new tt(i,this._parents)},selection:function(){return this},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,s=e[t],a=s.length-1,i=s[a];--a>=0;)(r=s[a])&&(i&&4^r.compareDocumentPosition(i)&&i.parentNode.insertBefore(r,i),i=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=oe);for(var n=this._groups,r=n.length,s=new Array(r),a=0;a<r;++a){for(var i,o=n[a],l=o.length,u=s[a]=new Array(l),c=0;c<l;++c)(i=o[c])&&(u[c]=i);u.sort(t)}return new tt(s,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],s=0,a=r.length;s<a;++s){var i=r[s];if(i)return i}return null},size:function(){let e=0;for(const t of this)++e;return e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var s,a=t[n],i=0,o=a.length;i<o;++i)(s=a[i])&&e.call(s,s.__data__,i,a);return this},attr:function(e,t){var n=ce(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?de:he:"function"==typeof t?n.local?ge:me:n.local?fe:pe)(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?ye:"function"==typeof t?ve:xe)(e,t,null==n?"":n)):we(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?ke:"function"==typeof t?$e:Ie)(e,t)):this.node()[e]},classed:function(e,t){var n=Ne(e+"");if(arguments.length<2){for(var r=Ce(this.node()),s=-1,a=n.length;++s<a;)if(!r.contains(n[s]))return!1;return!0}return this.each(("function"==typeof t?_e:t?Re:Ae)(n,t))},text:function(e){return arguments.length?this.each(null==e?Fe:("function"==typeof e?Me:De)(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?Oe:("function"==typeof e?ze:Le)(e)):this.node().innerHTML},raise:function(){return this.each(Be)},lower:function(){return this.each(Pe)},append:function(e){var t="function"==typeof e?e:Ue(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))},insert:function(e,t){var n="function"==typeof e?e:Ue(e),r=null==t?Ge:"function"==typeof t?t:H(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(He)},clone:function(e){return this.select(e?Ke:je)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,s,a=qe(e+""),i=a.length;if(!(arguments.length<2)){for(o=t?Ye:Xe,r=0;r<i;++r)this.each(o(a[r],t,n));return this}var o=this.node().__on;if(o)for(var l,u=0,c=o.length;u<c;++u)for(r=0,l=o[u];r<i;++r)if((s=a[r]).type===l.type&&s.name===l.name)return l.value},dispatch:function(e,t){return this.each(("function"==typeof t?Qe:Ze)(e,t))},[Symbol.iterator]:function*(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r,s=e[t],a=0,i=s.length;a<i;++a)(r=s[a])&&(yield r)}};const rt=nt;var st={value:()=>{}};function at(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new it(r)}function it(e){this._=e}function ot(e,t){return e.trim().split(/^|\s+/).map((function(e){var n="",r=e.indexOf(".");if(r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}}))}function lt(e,t){for(var n,r=0,s=e.length;r<s;++r)if((n=e[r]).name===t)return n.value}function ut(e,t,n){for(var r=0,s=e.length;r<s;++r)if(e[r].name===t){e[r]=st,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}it.prototype=at.prototype={constructor:it,on:function(e,t){var n,r=this._,s=ot(e+"",r),a=-1,i=s.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++a<i;)if(n=(e=s[a]).type)r[n]=ut(r[n],e.name,t);else if(null==t)for(n in r)r[n]=ut(r[n],e.name,null);return this}for(;++a<i;)if((n=(e=s[a]).type)&&(n=lt(r[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new it(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,s=new Array(n),a=0;a<n;++a)s[a]=arguments[a+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(a=0,n=(r=this._[e]).length;a<n;++a)r[a].value.apply(t,s)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],s=0,a=r.length;s<a;++s)r[s].value.apply(t,n)}};const ct=at;var ht,dt,pt=0,ft=0,mt=0,gt=0,bt=0,yt=0,xt="object"==typeof performance&&performance.now?performance:Date,vt="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function wt(){return bt||(vt(kt),bt=xt.now()+yt)}function kt(){bt=0}function It(){this._call=this._time=this._next=null}function $t(e,t,n){var r=new It;return r.restart(e,t,n),r}function Nt(){bt=(gt=xt.now())+yt,pt=ft=0;try{!function(){wt(),++pt;for(var e,t=ht;t;)(e=bt-t._time)>=0&&t._call.call(null,e),t=t._next;--pt}()}finally{pt=0,function(){for(var e,t,n=ht,r=1/0;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:ht=t);dt=e,St(r)}(),bt=0}}function Ct(){var e=xt.now(),t=e-gt;t>1e3&&(yt-=t,gt=e)}function St(e){pt||(ft&&(ft=clearTimeout(ft)),e-bt>24?(e<1/0&&(ft=setTimeout(Nt,e-xt.now()-yt)),mt&&(mt=clearInterval(mt))):(mt||(gt=xt.now(),mt=setInterval(Ct,1e3)),pt=1,vt(Nt)))}function Et(e,t,n){var r=new It;return t=null==t?0:+t,r.restart((n=>{r.stop(),e(n+t)}),t,n),r}It.prototype=$t.prototype={constructor:It,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?wt():+n)+(null==t?0:+t),this._next||dt===this||(dt?dt._next=this:ht=this,dt=this),this._call=e,this._time=n,St()},stop:function(){this._call&&(this._call=null,this._time=1/0,St())}};var Tt=ct("start","end","cancel","interrupt"),Rt=[];function At(e,t,n,r,s,a){var i=e.__transition;if(i){if(n in i)return}else e.__transition={};!function(e,t,n){var r,s=e.__transition;function a(l){var u,c,h,d;if(1!==n.state)return o();for(u in s)if((d=s[u]).name===n.name){if(3===d.state)return Et(a);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete s[u]):+u<t&&(d.state=6,d.timer.stop(),d.on.call("cancel",e,e.__data__,d.index,d.group),delete s[u])}if(Et((function(){3===n.state&&(n.state=4,n.timer.restart(i,n.delay,n.time),i(l))})),n.state=2,n.on.call("start",e,e.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(h=n.tween.length),u=0,c=-1;u<h;++u)(d=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function i(t){for(var s=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(o),n.state=5,1),a=-1,i=r.length;++a<i;)r[a].call(e,s);5===n.state&&(n.on.call("end",e,e.__data__,n.index,n.group),o())}function o(){for(var r in n.state=6,n.timer.stop(),delete s[t],s)return;delete e.__transition}s[t]=n,n.timer=$t((function(e){n.state=1,n.timer.restart(a,n.delay,n.time),n.delay<=e&&a(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:s,on:Tt,tween:Rt,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:0})}function _t(e,t){var n=Dt(e,t);if(n.state>0)throw new Error("too late; already scheduled");return n}function Ft(e,t){var n=Dt(e,t);if(n.state>3)throw new Error("too late; already running");return n}function Dt(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function Mt(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}var Ot,Lt=180/Math.PI,zt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Bt(e,t,n,r,s,a){var i,o,l;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(l=e*n+t*r)&&(n-=e*l,r-=t*l),(o=Math.sqrt(n*n+r*r))&&(n/=o,r/=o,l/=o),e*r<t*n&&(e=-e,t=-t,l=-l,i=-i),{translateX:s,translateY:a,rotate:Math.atan2(t,e)*Lt,skewX:Math.atan(l)*Lt,scaleX:i,scaleY:o}}function Pt(e,t,n,r){function s(e){return e.length?e.pop()+" ":""}return function(a,i){var o=[],l=[];return a=e(a),i=e(i),function(e,r,s,a,i,o){if(e!==s||r!==a){var l=i.push("translate(",null,t,null,n);o.push({i:l-4,x:Mt(e,s)},{i:l-2,x:Mt(r,a)})}else(s||a)&&i.push("translate("+s+t+a+n)}(a.translateX,a.translateY,i.translateX,i.translateY,o,l),function(e,t,n,a){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),a.push({i:n.push(s(n)+"rotate(",null,r)-2,x:Mt(e,t)})):t&&n.push(s(n)+"rotate("+t+r)}(a.rotate,i.rotate,o,l),function(e,t,n,a){e!==t?a.push({i:n.push(s(n)+"skewX(",null,r)-2,x:Mt(e,t)}):t&&n.push(s(n)+"skewX("+t+r)}(a.skewX,i.skewX,o,l),function(e,t,n,r,a,i){if(e!==n||t!==r){var o=a.push(s(a)+"scale(",null,",",null,")");i.push({i:o-4,x:Mt(e,n)},{i:o-2,x:Mt(t,r)})}else 1===n&&1===r||a.push(s(a)+"scale("+n+","+r+")")}(a.scaleX,a.scaleY,i.scaleX,i.scaleY,o,l),a=i=null,function(e){for(var t,n=-1,r=l.length;++n<r;)o[(t=l[n]).i]=t.x(e);return o.join("")}}}var Wt=Pt((function(e){const t=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?zt:Bt(t.a,t.b,t.c,t.d,t.e,t.f)}),"px, ","px)","deg)"),Vt=Pt((function(e){return null==e?zt:(Ot||(Ot=document.createElementNS("http://www.w3.org/2000/svg","g")),Ot.setAttribute("transform",e),(e=Ot.transform.baseVal.consolidate())?Bt((e=e.matrix).a,e.b,e.c,e.d,e.e,e.f):zt)}),", ",")",")");function Ut(e,t){var n,r;return function(){var s=Ft(this,e),a=s.tween;if(a!==n)for(var i=0,o=(r=n=a).length;i<o;++i)if(r[i].name===t){(r=r.slice()).splice(i,1);break}s.tween=r}}function Gt(e,t,n){var r,s;if("function"!=typeof n)throw new Error;return function(){var a=Ft(this,e),i=a.tween;if(i!==r){s=(r=i).slice();for(var o={name:t,value:n},l=0,u=s.length;l<u;++l)if(s[l].name===t){s[l]=o;break}l===u&&s.push(o)}a.tween=s}}function Ht(e,t,n){var r=e._id;return e.each((function(){var e=Ft(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return Dt(e,r).value[t]}}function jt(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function Kt(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function qt(){}var Xt=.7,Yt=1/Xt,Jt="\\s*([+-]?\\d+)\\s*",Zt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Qt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",en=/^#([0-9a-f]{3,8})$/,tn=new RegExp("^rgb\\("+[Jt,Jt,Jt]+"\\)$"),nn=new RegExp("^rgb\\("+[Qt,Qt,Qt]+"\\)$"),rn=new RegExp("^rgba\\("+[Jt,Jt,Jt,Zt]+"\\)$"),sn=new RegExp("^rgba\\("+[Qt,Qt,Qt,Zt]+"\\)$"),an=new RegExp("^hsl\\("+[Zt,Qt,Qt]+"\\)$"),on=new RegExp("^hsla\\("+[Zt,Qt,Qt,Zt]+"\\)$"),ln={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function un(){return this.rgb().formatHex()}function cn(){return this.rgb().formatRgb()}function hn(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=en.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?dn(t):3===n?new gn(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?pn(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?pn(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=tn.exec(e))?new gn(t[1],t[2],t[3],1):(t=nn.exec(e))?new gn(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=rn.exec(e))?pn(t[1],t[2],t[3],t[4]):(t=sn.exec(e))?pn(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=an.exec(e))?vn(t[1],t[2]/100,t[3]/100,1):(t=on.exec(e))?vn(t[1],t[2]/100,t[3]/100,t[4]):ln.hasOwnProperty(e)?dn(ln[e]):"transparent"===e?new gn(NaN,NaN,NaN,0):null}function dn(e){return new gn(e>>16&255,e>>8&255,255&e,1)}function pn(e,t,n,r){return r<=0&&(e=t=n=NaN),new gn(e,t,n,r)}function fn(e){return e instanceof qt||(e=hn(e)),e?new gn((e=e.rgb()).r,e.g,e.b,e.opacity):new gn}function mn(e,t,n,r){return 1===arguments.length?fn(e):new gn(e,t,n,null==r?1:r)}function gn(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function bn(){return"#"+xn(this.r)+xn(this.g)+xn(this.b)}function yn(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function xn(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function vn(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new kn(e,t,n,r)}function wn(e){if(e instanceof kn)return new kn(e.h,e.s,e.l,e.opacity);if(e instanceof qt||(e=hn(e)),!e)return new kn;if(e instanceof kn)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,s=Math.min(t,n,r),a=Math.max(t,n,r),i=NaN,o=a-s,l=(a+s)/2;return o?(i=t===a?(n-r)/o+6*(n<r):n===a?(r-t)/o+2:(t-n)/o+4,o/=l<.5?a+s:2-a-s,i*=60):o=l>0&&l<1?0:i,new kn(i,o,l,e.opacity)}function kn(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function In(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function $n(e,t,n,r,s){var a=e*e,i=a*e;return((1-3*e+3*a-i)*t+(4-6*a+3*i)*n+(1+3*e+3*a-3*i)*r+i*s)/6}jt(qt,hn,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:un,formatHex:un,formatHsl:function(){return wn(this).formatHsl()},formatRgb:cn,toString:cn}),jt(gn,mn,Kt(qt,{brighter:function(e){return e=null==e?Yt:Math.pow(Yt,e),new gn(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?Xt:Math.pow(Xt,e),new gn(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:bn,formatHex:bn,formatRgb:yn,toString:yn})),jt(kn,(function(e,t,n,r){return 1===arguments.length?wn(e):new kn(e,t,n,null==r?1:r)}),Kt(qt,{brighter:function(e){return e=null==e?Yt:Math.pow(Yt,e),new kn(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?Xt:Math.pow(Xt,e),new kn(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,s=2*n-r;return new gn(In(e>=240?e-240:e+120,s,r),In(e,s,r),In(e<120?e+240:e-120,s,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));const Nn=e=>()=>e;function Cn(e,t){var n=t-e;return n?function(e,t){return function(n){return e+n*t}}(e,n):Nn(isNaN(e)?t:e)}const Sn=function e(t){var n=function(e){return 1==(e=+e)?Cn:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Nn(isNaN(t)?n:t)}}(t);function r(e,t){var r=n((e=mn(e)).r,(t=mn(t)).r),s=n(e.g,t.g),a=n(e.b,t.b),i=Cn(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=s(t),e.b=a(t),e.opacity=i(t),e+""}}return r.gamma=e,r}(1);function En(e){return function(t){var n,r,s=t.length,a=new Array(s),i=new Array(s),o=new Array(s);for(n=0;n<s;++n)r=mn(t[n]),a[n]=r.r||0,i[n]=r.g||0,o[n]=r.b||0;return a=e(a),i=e(i),o=e(o),r.opacity=1,function(e){return r.r=a(e),r.g=i(e),r.b=o(e),r+""}}}En((function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),s=e[r],a=e[r+1],i=r>0?e[r-1]:2*s-a,o=r<t-1?e[r+2]:2*a-s;return $n((n-r/t)*t,i,s,a,o)}})),En((function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),s=e[(r+t-1)%t],a=e[r%t],i=e[(r+1)%t],o=e[(r+2)%t];return $n((n-r/t)*t,s,a,i,o)}}));var Tn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Rn=new RegExp(Tn.source,"g");function An(e,t){var n,r,s,a=Tn.lastIndex=Rn.lastIndex=0,i=-1,o=[],l=[];for(e+="",t+="";(n=Tn.exec(e))&&(r=Rn.exec(t));)(s=r.index)>a&&(s=t.slice(a,s),o[i]?o[i]+=s:o[++i]=s),(n=n[0])===(r=r[0])?o[i]?o[i]+=r:o[++i]=r:(o[++i]=null,l.push({i,x:Mt(n,r)})),a=Rn.lastIndex;return a<t.length&&(s=t.slice(a),o[i]?o[i]+=s:o[++i]=s),o.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,r=0;r<t;++r)o[(n=l[r]).i]=n.x(e);return o.join("")})}function _n(e,t){var n;return("number"==typeof t?Mt:t instanceof hn?Sn:(n=hn(t))?(t=n,Sn):An)(e,t)}function Fn(e){return function(){this.removeAttribute(e)}}function Dn(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Mn(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttribute(e);return i===a?null:i===r?s:s=t(r=i,n)}}function On(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttributeNS(e.space,e.local);return i===a?null:i===r?s:s=t(r=i,n)}}function Ln(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttribute(e))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttribute(e)}}function zn(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttributeNS(e.space,e.local))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttributeNS(e.space,e.local)}}function Bn(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}function Pn(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}function Wn(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&Pn(e,s)),n}return s._value=t,s}function Vn(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&Bn(e,s)),n}return s._value=t,s}function Un(e,t){return function(){_t(this,e).delay=+t.apply(this,arguments)}}function Gn(e,t){return t=+t,function(){_t(this,e).delay=t}}function Hn(e,t){return function(){Ft(this,e).duration=+t.apply(this,arguments)}}function jn(e,t){return t=+t,function(){Ft(this,e).duration=t}}function Kn(e,t){if("function"!=typeof t)throw new Error;return function(){Ft(this,e).ease=t}}function qn(e,t,n){var r,s,a=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?_t:Ft;return function(){var i=a(this,e),o=i.on;o!==r&&(s=(r=o).copy()).on(t,n),i.on=s}}var Xn=rt.prototype.constructor;function Yn(e){return function(){this.style.removeProperty(e)}}function Jn(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}function Zn(e,t,n){var r,s;function a(){var a=t.apply(this,arguments);return a!==s&&(r=(s=a)&&Jn(e,a,n)),r}return a._value=t,a}function Qn(e){return function(t){this.textContent=e.call(this,t)}}function er(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&Qn(r)),t}return r._value=e,r}var tr=0;function nr(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function rr(){return++tr}var sr=rt.prototype;nr.prototype=function(e){return rt().transition(e)}.prototype={constructor:nr,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=H(e));for(var r=this._groups,s=r.length,a=new Array(s),i=0;i<s;++i)for(var o,l,u=r[i],c=u.length,h=a[i]=new Array(c),d=0;d<c;++d)(o=u[d])&&(l=e.call(o,o.__data__,d,u))&&("__data__"in o&&(l.__data__=o.__data__),h[d]=l,At(h[d],t,n,d,h,Dt(o,n)));return new nr(a,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=q(e));for(var r=this._groups,s=r.length,a=[],i=[],o=0;o<s;++o)for(var l,u=r[o],c=u.length,h=0;h<c;++h)if(l=u[h]){for(var d,p=e.call(l,l.__data__,h,u),f=Dt(l,n),m=0,g=p.length;m<g;++m)(d=p[m])&&At(d,t,n,m,p,f);a.push(p),i.push(l)}return new nr(a,i,t,n)},filter:function(e){"function"!=typeof e&&(e=X(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new nr(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new nr(i,this._parents,this._name,this._id)},selection:function(){return new Xn(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=rr(),r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)if(i=o[u]){var c=Dt(i,t);At(i,e,n,u,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new nr(r,this._parents,e,n)},call:sr.call,nodes:sr.nodes,node:sr.node,size:sr.size,empty:sr.empty,each:sr.each,on:function(e,t){var n=this._id;return arguments.length<2?Dt(this.node(),n).on.on(e):this.each(qn(n,e,t))},attr:function(e,t){var n=ce(e),r="transform"===n?Vt:_n;return this.attrTween(e,"function"==typeof t?(n.local?zn:Ln)(n,r,Ht(this,"attr."+e,t)):null==t?(n.local?Dn:Fn)(n):(n.local?On:Mn)(n,r,t))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=ce(e);return this.tween(n,(r.local?Wn:Vn)(r,t))},style:function(e,t,n){var r="transform"==(e+="")?Wt:_n;return null==t?this.styleTween(e,function(e,t){var n,r,s;return function(){var a=we(this,e),i=(this.style.removeProperty(e),we(this,e));return a===i?null:a===n&&i===r?s:s=t(n=a,r=i)}}(e,r)).on("end.style."+e,Yn(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,s,a;return function(){var i=we(this,e),o=n(this),l=o+"";return null==o&&(this.style.removeProperty(e),l=o=we(this,e)),i===l?null:i===r&&l===s?a:(s=l,a=t(r=i,o))}}(e,r,Ht(this,"style."+e,t))).each(function(e,t){var n,r,s,a,i="style."+t,o="end."+i;return function(){var l=Ft(this,e),u=l.on,c=null==l.value[i]?a||(a=Yn(t)):void 0;u===n&&s===c||(r=(n=u).copy()).on(o,s=c),l.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,s,a=n+"";return function(){var i=we(this,e);return i===a?null:i===r?s:s=t(r=i,n)}}(e,r,t),n).on("end.style."+e,null)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,Zn(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(Ht(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},textTween:function(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,er(e))},remove:function(){return this.on("end.remove",function(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}(this._id))},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,s=Dt(this.node(),n).tween,a=0,i=s.length;a<i;++a)if((r=s[a]).name===e)return r.value;return null}return this.each((null==t?Ut:Gt)(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Un:Gn)(t,e)):Dt(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Hn:jn)(t,e)):Dt(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(Kn(t,e)):Dt(this.node(),t).ease},easeVarying:function(e){if("function"!=typeof e)throw new Error;return this.each(function(e,t){return function(){var n=t.apply(this,arguments);if("function"!=typeof n)throw new Error;Ft(this,e).ease=n}}(this._id,e))},end:function(){var e,t,n=this,r=n._id,s=n.size();return new Promise((function(a,i){var o={value:i},l={value:function(){0==--s&&a()}};n.each((function(){var n=Ft(this,r),s=n.on;s!==e&&((t=(e=s).copy())._.cancel.push(o),t._.interrupt.push(o),t._.end.push(l)),n.on=t})),0===s&&a()}))},[Symbol.iterator]:sr[Symbol.iterator]};var ar={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function ir(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}rt.prototype.interrupt=function(e){return this.each((function(){!function(e,t){var n,r,s,a=e.__transition,i=!0;if(a){for(s in t=null==t?null:t+"",a)(n=a[s]).name===t?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete a[s]):i=!1;i&&delete e.__transition}}(this,e)}))},rt.prototype.transition=function(e){var t,n;e instanceof nr?(t=e._id,e=e._name):(t=rr(),(n=ar).time=wt(),e=null==e?null:e+"");for(var r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)(i=o[u])&&At(i,e,t,u,o,n||ir(i,t));return new nr(r,this._parents,e,t)};const{abs:or,max:lr,min:ur}=Math;function cr(e){return{type:e}}function hr(e){return Math.ceil(Math.log(function(e,t){let n=0;for(let t of e)null!=t&&(t=+t)>=t&&++n;return n}(e))/Math.LN2)+1}["w","e"].map(cr),["n","s"].map(cr),["n","w","e","s","nw","ne","sw","se"].map(cr);var dr=Math.sqrt(50),pr=Math.sqrt(10),fr=Math.sqrt(2);function mr(e,t,n){var r=(t-e)/Math.max(0,n),s=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,s);return s>=0?(a>=dr?10:a>=pr?5:a>=fr?2:1)*Math.pow(10,s):-Math.pow(10,-s)/(a>=dr?10:a>=pr?5:a>=fr?2:1)}function gr(e,t,n){var r=Math.abs(t-e)/Math.max(0,n),s=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/s;return a>=dr?s*=10:a>=pr?s*=5:a>=fr&&(s*=2),t<e?-s:s}var br=Array.prototype.slice;function yr(e,t){return e-t}const xr=e=>()=>e;function vr(e,t){for(var n,r=-1,s=t.length;++r<s;)if(n=wr(e,t[r]))return n;return 0}function wr(e,t){for(var n=t[0],r=t[1],s=-1,a=0,i=e.length,o=i-1;a<i;o=a++){var l=e[a],u=l[0],c=l[1],h=e[o],d=h[0],p=h[1];if(kr(l,h,t))return 0;c>r!=p>r&&n<(d-u)*(r-c)/(p-c)+u&&(s=-s)}return s}function kr(e,t,n){var r;return function(e,t,n){return(t[0]-e[0])*(n[1]-e[1])==(n[0]-e[0])*(t[1]-e[1])}(e,t,n)&&function(e,t,n){return e<=t&&t<=n||n<=t&&t<=e}(e[r=+(e[0]===t[0])],n[r],t[r])}function Ir(){}var $r=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function Nr(e){return"string"==typeof e?new tt([[document.querySelector(e)]],[document.documentElement]):new tt([[e]],et)}function Cr(e,t){if(e=function(e){let t;for(;t=e.sourceEvent;)e=t;return e}(e),void 0===t&&(t=e.currentTarget),t){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}if(t.getBoundingClientRect){var s=t.getBoundingClientRect();return[e.clientX-s.left-t.clientLeft,e.clientY-s.top-t.clientTop]}}return[e.pageX,e.pageY]}function Sr(e){e.stopImmediatePropagation()}function Er(e){e.preventDefault(),e.stopImmediatePropagation()}const Tr=e=>()=>e;function Rr(e,{sourceEvent:t,subject:n,target:r,identifier:s,active:a,x:i,y:o,dx:l,dy:u,dispatch:c}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},subject:{value:n,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},identifier:{value:s,enumerable:!0,configurable:!0},active:{value:a,enumerable:!0,configurable:!0},x:{value:i,enumerable:!0,configurable:!0},y:{value:o,enumerable:!0,configurable:!0},dx:{value:l,enumerable:!0,configurable:!0},dy:{value:u,enumerable:!0,configurable:!0},_:{value:c}})}function Ar(e){return!e.ctrlKey&&!e.button}function _r(){return this.parentNode}function Fr(e,t){return null==t?{x:e.x,y:e.y}:t}function Dr(){return navigator.maxTouchPoints||"ontouchstart"in this}Rr.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e};const Mr=e=>e;function Or(e,t){e&&zr.hasOwnProperty(e.type)&&zr[e.type](e,t)}var Lr={Feature:function(e,t){Or(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,s=n.length;++r<s;)Or(n[r].geometry,t)}},zr={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){Br(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)Br(n[r],t,0)},Polygon:function(e,t){Pr(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)Pr(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,s=n.length;++r<s;)Or(n[r],t)}};function Br(e,t,n){var r,s=-1,a=e.length-n;for(t.lineStart();++s<a;)r=e[s],t.point(r[0],r[1],r[2]);t.lineEnd()}function Pr(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)Br(e[n],t,1);t.polygonEnd()}function Wr(e,t){e&&Lr.hasOwnProperty(e.type)?Lr[e.type](e,t):Or(e,t)}class Vr{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const t=this._partials;let n=0;for(let r=0;r<this._n&&r<32;r++){const s=t[r],a=e+s,i=Math.abs(e)<Math.abs(s)?e-(a-s):s-(a-e);i&&(t[n++]=i),e=a}return t[n]=e,this._n=n+1,this}valueOf(){const e=this._partials;let t,n,r,s=this._n,a=0;if(s>0){for(a=e[--s];s>0&&(t=a,n=e[--s],a=t+n,r=n-(a-t),!r););s>0&&(r<0&&e[s-1]<0||r>0&&e[s-1]>0)&&(n=2*r,t=a+n,n==t-a&&(a=t))}return a}}var Ur=1e-6,Gr=Math.PI,Hr=2*Gr,jr=180/Gr,Kr=Gr/180,qr=Math.abs,Xr=(Math.atan,Math.atan2,Math.cos),Yr=(Math.ceil,Math.exp,Math.floor,Math.hypot,Math.log,Math.pow,Math.sin),Jr=(Math.sign,Math.sqrt);function Zr(){}Math.tan;var Qr,es,ts,ns,rs=new Vr,ss=new Vr,as={point:Zr,lineStart:Zr,lineEnd:Zr,polygonStart:function(){as.lineStart=is,as.lineEnd=us},polygonEnd:function(){as.lineStart=as.lineEnd=as.point=Zr,rs.add(qr(ss)),ss=new Vr},result:function(){var e=rs/2;return rs=new Vr,e}};function is(){as.point=os}function os(e,t){as.point=ls,Qr=ts=e,es=ns=t}function ls(e,t){ss.add(ns*e-ts*t),ts=e,ns=t}function us(){ls(Qr,es)}const cs=as;var hs=1/0,ds=hs,ps=-hs,fs=ps;const ms={point:function(e,t){e<hs&&(hs=e),e>ps&&(ps=e),t<ds&&(ds=t),t>fs&&(fs=t)},lineStart:Zr,lineEnd:Zr,polygonStart:Zr,polygonEnd:Zr,result:function(){var e=[[hs,ds],[ps,fs]];return ps=fs=-(ds=hs=1/0),e}};var gs,bs,ys,xs,vs=0,ws=0,ks=0,Is=0,$s=0,Ns=0,Cs=0,Ss=0,Es=0,Ts={point:Rs,lineStart:As,lineEnd:Ds,polygonStart:function(){Ts.lineStart=Ms,Ts.lineEnd=Os},polygonEnd:function(){Ts.point=Rs,Ts.lineStart=As,Ts.lineEnd=Ds},result:function(){var e=Es?[Cs/Es,Ss/Es]:Ns?[Is/Ns,$s/Ns]:ks?[vs/ks,ws/ks]:[NaN,NaN];return vs=ws=ks=Is=$s=Ns=Cs=Ss=Es=0,e}};function Rs(e,t){vs+=e,ws+=t,++ks}function As(){Ts.point=_s}function _s(e,t){Ts.point=Fs,Rs(ys=e,xs=t)}function Fs(e,t){var n=e-ys,r=t-xs,s=Jr(n*n+r*r);Is+=s*(ys+e)/2,$s+=s*(xs+t)/2,Ns+=s,Rs(ys=e,xs=t)}function Ds(){Ts.point=Rs}function Ms(){Ts.point=Ls}function Os(){zs(gs,bs)}function Ls(e,t){Ts.point=zs,Rs(gs=ys=e,bs=xs=t)}function zs(e,t){var n=e-ys,r=t-xs,s=Jr(n*n+r*r);Is+=s*(ys+e)/2,$s+=s*(xs+t)/2,Ns+=s,Cs+=(s=xs*e-ys*t)*(ys+e),Ss+=s*(xs+t),Es+=3*s,Rs(ys=e,xs=t)}const Bs=Ts;function Ps(e){this._context=e}Ps.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._context.moveTo(e,t),this._point=1;break;case 1:this._context.lineTo(e,t);break;default:this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,Hr)}},result:Zr};var Ws,Vs,Us,Gs,Hs,js=new Vr,Ks={point:Zr,lineStart:function(){Ks.point=qs},lineEnd:function(){Ws&&Xs(Vs,Us),Ks.point=Zr},polygonStart:function(){Ws=!0},polygonEnd:function(){Ws=null},result:function(){var e=+js;return js=new Vr,e}};function qs(e,t){Ks.point=Xs,Vs=Gs=e,Us=Hs=t}function Xs(e,t){Gs-=e,Hs-=t,js.add(Jr(Gs*Gs+Hs*Hs)),Gs=e,Hs=t}const Ys=Ks;function Js(){this._string=[]}function Zs(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}function Qs(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function ea(e){if(t=e.length){for(var t,n,r=0,s=e[0];++r<t;)s.n=n=e[r],n.p=s,s=n;s.n=n=e[0],n.p=s}}Js.prototype={_radius:4.5,_circle:Zs(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._string.push("M",e,",",t),this._point=1;break;case 1:this._string.push("L",e,",",t);break;default:null==this._circle&&(this._circle=Zs(this._radius)),this._string.push("M",e,",",t,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}};var ta=1e9,na=-ta;function ra(e,t,n,r){function s(s,a){return e<=s&&s<=n&&t<=a&&a<=r}function a(s,a,o,u){var c=0,h=0;if(null==s||(c=i(s,o))!==(h=i(a,o))||l(s,a)<0^o>0)do{u.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+o+4)%4)!==h);else u.point(a[0],a[1])}function i(r,s){return qr(r[0]-e)<Ur?s>0?0:3:qr(r[0]-n)<Ur?s>0?2:1:qr(r[1]-t)<Ur?s>0?1:0:s>0?3:2}function o(e,t){return l(e.x,t.x)}function l(e,t){var n=i(e,1),r=i(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(i){var l,u,c,h,d,p,f,m,g,b,y,x,v,w=i,k=(v=[],{point:function(e,t,n){x.push([e,t,n])},lineStart:function(){v.push(x=[])},lineEnd:Zr,rejoin:function(){v.length>1&&v.push(v.pop().concat(v.shift()))},result:function(){var e=v;return v=[],x=null,e}}),I={point:$,lineStart:function(){I.point=N,u&&u.push(c=[]),b=!0,g=!1,f=m=NaN},lineEnd:function(){l&&(N(h,d),p&&g&&k.rejoin(),l.push(k.result())),I.point=$,g&&w.lineEnd()},polygonStart:function(){w=k,l=[],u=[],y=!0},polygonEnd:function(){var t,n=function(){for(var t=0,n=0,s=u.length;n<s;++n)for(var a,i,o=u[n],l=1,c=o.length,h=o[0],d=h[0],p=h[1];l<c;++l)a=d,i=p,d=(h=o[l])[0],p=h[1],i<=r?p>r&&(d-a)*(r-i)>(p-i)*(e-a)&&++t:p<=r&&(d-a)*(r-i)<(p-i)*(e-a)&&--t;return t}(),s=y&&n,h=(t=l,l=Array.from(function*(e){for(const t of e)yield*t}(t))).length;(s||h)&&(i.polygonStart(),s&&(i.lineStart(),a(null,null,1,i),i.lineEnd()),h&&function(e,t,n,r,s){var a,i,o=[],l=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n,r,i,u=e[0],c=e[t];if(i=c,qr((r=u)[0]-i[0])<Ur&&qr(r[1]-i[1])<Ur){if(!u[2]&&!c[2]){for(s.lineStart(),a=0;a<t;++a)s.point((u=e[a])[0],u[1]);return void s.lineEnd()}c[0]+=2e-6}o.push(n=new Qs(u,e,null,!0)),l.push(n.o=new Qs(u,null,n,!1)),o.push(n=new Qs(c,e,null,!1)),l.push(n.o=new Qs(c,null,n,!0))}})),o.length){for(l.sort(t),ea(o),ea(l),a=0,i=l.length;a<i;++a)l[a].e=n=!n;for(var u,c,h=o[0];;){for(var d=h,p=!0;d.v;)if((d=d.n)===h)return;u=d.z,s.lineStart();do{if(d.v=d.o.v=!0,d.e){if(p)for(a=0,i=u.length;a<i;++a)s.point((c=u[a])[0],c[1]);else r(d.x,d.n.x,1,s);d=d.n}else{if(p)for(u=d.p.z,a=u.length-1;a>=0;--a)s.point((c=u[a])[0],c[1]);else r(d.x,d.p.x,-1,s);d=d.p}u=(d=d.o).z,p=!p}while(!d.v);s.lineEnd()}}}(l,o,n,a,i),i.polygonEnd()),w=i,l=u=c=null}};function $(e,t){s(e,t)&&w.point(e,t)}function N(a,i){var o=s(a,i);if(u&&c.push([a,i]),b)h=a,d=i,p=o,b=!1,o&&(w.lineStart(),w.point(a,i));else if(o&&g)w.point(a,i);else{var l=[f=Math.max(na,Math.min(ta,f)),m=Math.max(na,Math.min(ta,m))],x=[a=Math.max(na,Math.min(ta,a)),i=Math.max(na,Math.min(ta,i))];!function(e,t,n,r,s,a){var i,o=e[0],l=e[1],u=0,c=1,h=t[0]-o,d=t[1]-l;if(i=n-o,h||!(i>0)){if(i/=h,h<0){if(i<u)return;i<c&&(c=i)}else if(h>0){if(i>c)return;i>u&&(u=i)}if(i=s-o,h||!(i<0)){if(i/=h,h<0){if(i>c)return;i>u&&(u=i)}else if(h>0){if(i<u)return;i<c&&(c=i)}if(i=r-l,d||!(i>0)){if(i/=d,d<0){if(i<u)return;i<c&&(c=i)}else if(d>0){if(i>c)return;i>u&&(u=i)}if(i=a-l,d||!(i<0)){if(i/=d,d<0){if(i>c)return;i>u&&(u=i)}else if(d>0){if(i<u)return;i<c&&(c=i)}return u>0&&(e[0]=o+u*h,e[1]=l+u*d),c<1&&(t[0]=o+c*h,t[1]=l+c*d),!0}}}}}(l,x,e,t,n,r)?o&&(w.lineStart(),w.point(a,i),y=!1):(g||(w.lineStart(),w.point(l[0],l[1])),w.point(x[0],x[1]),o||w.lineEnd(),y=!1)}f=a,m=i,g=o}return I}}function sa(){}function aa(e,t,n){var r=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=r&&e.clipExtent(null),Wr(n,e.stream(ms)),t(ms.result()),null!=r&&e.clipExtent(r),e}function ia(e,t,n){return aa(e,(function(n){var r=t[1][0]-t[0][0],s=t[1][1]-t[0][1],a=Math.min(r/(n[1][0]-n[0][0]),s/(n[1][1]-n[0][1])),i=+t[0][0]+(r-a*(n[1][0]+n[0][0]))/2,o=+t[0][1]+(s-a*(n[1][1]+n[0][1]))/2;e.scale(150*a).translate([i,o])}),n)}function oa(){var e,t,n,r,s,a,i,o,l=1,u=0,c=0,h=1,d=1,p=0,f=null,m=1,g=1,b=(o={point:function(e,t){var n=v([e,t]);this.stream.point(n[0],n[1])}},function(e){var t=new sa;for(var n in o)t[n]=o[n];return t.stream=e,t}),y=Mr;function x(){return m=l*h,g=l*d,a=i=null,v}function v(n){var r=n[0]*m,s=n[1]*g;if(p){var a=s*e-r*t;r=r*e+s*t,s=a}return[r+u,s+c]}return v.invert=function(n){var r=n[0]-u,s=n[1]-c;if(p){var a=s*e+r*t;r=r*e-s*t,s=a}return[r/m,s/g]},v.stream=function(e){return a&&i===e?a:a=b(y(i=e))},v.postclip=function(e){return arguments.length?(y=e,f=n=r=s=null,x()):y},v.clipExtent=function(e){return arguments.length?(y=null==e?(f=n=r=s=null,Mr):ra(f=+e[0][0],n=+e[0][1],r=+e[1][0],s=+e[1][1]),x()):null==f?null:[[f,n],[r,s]]},v.scale=function(e){return arguments.length?(l=+e,x()):l},v.translate=function(e){return arguments.length?(u=+e[0],c=+e[1],x()):[u,c]},v.angle=function(n){return arguments.length?(t=Yr(p=n%360*Kr),e=Xr(p),x()):p*jr},v.reflectX=function(e){return arguments.length?(h=e?-1:1,x()):h<0},v.reflectY=function(e){return arguments.length?(d=e?-1:1,x()):d<0},v.fitExtent=function(e,t){return ia(v,e,t)},v.fitSize=function(e,t){return function(e,t,n){return ia(e,[[0,0],t],n)}(v,e,t)},v.fitWidth=function(e,t){return function(e,t,n){return aa(e,(function(n){var r=+t,s=r/(n[1][0]-n[0][0]),a=(r-s*(n[1][0]+n[0][0]))/2,i=-s*n[0][1];e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v.fitHeight=function(e,t){return function(e,t,n){return aa(e,(function(n){var r=+t,s=r/(n[1][1]-n[0][1]),a=-s*n[0][0],i=(r-s*(n[1][1]+n[0][1]))/2;e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v}function la(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function ua(e){let t=e,n=e;function r(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)<0?r=a+1:s=a}return r}return 1===e.length&&(t=(t,n)=>e(t)-n,n=function(e){return(t,n)=>la(e(t),n)}(e)),{left:r,center:function(e,n,s,a){null==s&&(s=0),null==a&&(a=e.length);const i=r(e,n,s,a-1);return i>s&&t(e[i-1],n)>-t(e[i],n)?i-1:i},right:function(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)>0?s=a:r=a+1}return r}}}sa.prototype={constructor:sa,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};const ca=ua(la),ha=ca.right,da=(ca.left,ua((function(e){return null===e?NaN:+e})).center,ha);function pa(e,t){var n,r=t?t.length:0,s=e?Math.min(r,e.length):0,a=new Array(s),i=new Array(r);for(n=0;n<s;++n)a[n]=ba(e[n],t[n]);for(;n<r;++n)i[n]=t[n];return function(e){for(n=0;n<s;++n)i[n]=a[n](e);return i}}function fa(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}function ma(e,t){var n,r={},s={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?r[n]=ba(e[n],t[n]):s[n]=t[n];return function(e){for(n in r)s[n]=r[n](e);return s}}function ga(e,t){t||(t=[]);var n,r=e?Math.min(t.length,e.length):0,s=t.slice();return function(a){for(n=0;n<r;++n)s[n]=e[n]*(1-a)+t[n]*a;return s}}function ba(e,t){var n,r,s=typeof t;return null==t||"boolean"===s?Nn(t):("number"===s?Mt:"string"===s?(n=hn(t))?(t=n,Sn):An:t instanceof hn?Sn:t instanceof Date?fa:(r=t,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(t)?pa:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?ma:Mt:ga))(e,t)}function ya(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function xa(e){return+e}var va=[0,1];function wa(e){return e}function ka(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:(n=isNaN(t)?NaN:.5,function(){return n});var n}function Ia(e,t,n){var r=e[0],s=e[1],a=t[0],i=t[1];return s<r?(r=ka(s,r),a=n(i,a)):(r=ka(r,s),a=n(a,i)),function(e){return a(r(e))}}function $a(e,t,n){var r=Math.min(e.length,t.length)-1,s=new Array(r),a=new Array(r),i=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<r;)s[i]=ka(e[i],e[i+1]),a[i]=n(t[i],t[i+1]);return function(t){var n=da(e,t,1,r)-1;return a[n](s[n](t))}}function Na(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function Ca(){return function(){var e,t,n,r,s,a,i=va,o=va,l=ba,u=wa;function c(){var e,t,n,l=Math.min(i.length,o.length);return u!==wa&&(e=i[0],t=i[l-1],e>t&&(n=e,e=t,t=n),u=function(n){return Math.max(e,Math.min(t,n))}),r=l>2?$a:Ia,s=a=null,h}function h(t){return null==t||isNaN(t=+t)?n:(s||(s=r(i.map(e),o,l)))(e(u(t)))}return h.invert=function(n){return u(t((a||(a=r(o,i.map(e),Mt)))(n)))},h.domain=function(e){return arguments.length?(i=Array.from(e,xa),c()):i.slice()},h.range=function(e){return arguments.length?(o=Array.from(e),c()):o.slice()},h.rangeRound=function(e){return o=Array.from(e),l=ya,c()},h.clamp=function(e){return arguments.length?(u=!!e||wa,c()):u!==wa},h.interpolate=function(e){return arguments.length?(l=e,c()):l},h.unknown=function(e){return arguments.length?(n=e,h):n},function(n,r){return e=n,t=r,c()}}()(wa,wa)}function Sa(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}var Ea,Ta=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ra(e){if(!(t=Ta.exec(e)))throw new Error("invalid format: "+e);var t;return new Aa({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function Aa(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function _a(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function Fa(e){return(e=_a(Math.abs(e)))?e[1]:NaN}function Da(e,t){var n=_a(e,t);if(!n)return e+"";var r=n[0],s=n[1];return s<0?"0."+new Array(-s).join("0")+r:r.length>s+1?r.slice(0,s+1)+"."+r.slice(s+1):r+new Array(s-r.length+2).join("0")}Ra.prototype=Aa.prototype,Aa.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const Ma={"%":(e,t)=>(100*e).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>Da(100*e,t),r:Da,s:function(e,t){var n=_a(e,t);if(!n)return e+"";var r=n[0],s=n[1],a=s-(Ea=3*Math.max(-8,Math.min(8,Math.floor(s/3))))+1,i=r.length;return a===i?r:a>i?r+new Array(a-i+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+new Array(1-a).join("0")+_a(e,Math.max(0,t+a-1))[0]},X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function Oa(e){return e}var La,za,Ba,Pa=Array.prototype.map,Wa=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function Va(e){var t=e.domain;return e.ticks=function(e){var n=t();return function(e,t,n){var r,s,a,i,o=-1;if(n=+n,(e=+e)==(t=+t)&&n>0)return[e];if((r=t<e)&&(s=e,e=t,t=s),0===(i=mr(e,t,n))||!isFinite(i))return[];if(i>0){let n=Math.round(e/i),r=Math.round(t/i);for(n*i<e&&++n,r*i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)*i}else{i=-i;let n=Math.round(e*i),r=Math.round(t*i);for(n/i<e&&++n,r/i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)/i}return r&&a.reverse(),a}(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var r=t();return function(e,t,n,r){var s,a=gr(e,t,n);switch((r=Ra(null==r?",f":r)).type){case"s":var i=Math.max(Math.abs(e),Math.abs(t));return null!=r.precision||isNaN(s=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Fa(t)/3)))-Fa(Math.abs(e)))}(a,i))||(r.precision=s),Ba(r,i);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(s=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Fa(t)-Fa(e))+1}(a,Math.max(Math.abs(e),Math.abs(t))))||(r.precision=s-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(s=function(e){return Math.max(0,-Fa(Math.abs(e)))}(a))||(r.precision=s-2*("%"===r.type))}return za(r)}(r[0],r[r.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var r,s,a=t(),i=0,o=a.length-1,l=a[i],u=a[o],c=10;for(u<l&&(s=l,l=u,u=s,s=i,i=o,o=s);c-- >0;){if((s=mr(l,u,n))===r)return a[i]=l,a[o]=u,t(a);if(s>0)l=Math.floor(l/s)*s,u=Math.ceil(u/s)*s;else{if(!(s<0))break;l=Math.ceil(l*s)/s,u=Math.floor(u*s)/s}r=s}return e},e}function Ua(){var e=Ca();return e.copy=function(){return Na(e,Ua())},Sa.apply(e,arguments),Va(e)}function Ga(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}function Ha(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}La=function(e){var t,n,r=void 0===e.grouping||void 0===e.thousands?Oa:(t=Pa.call(e.grouping,Number),n=e.thousands+"",function(e,r){for(var s=e.length,a=[],i=0,o=t[0],l=0;s>0&&o>0&&(l+o+1>r&&(o=Math.max(1,r-l)),a.push(e.substring(s-=o,s+o)),!((l+=o+1)>r));)o=t[i=(i+1)%t.length];return a.reverse().join(n)}),s=void 0===e.currency?"":e.currency[0]+"",a=void 0===e.currency?"":e.currency[1]+"",i=void 0===e.decimal?".":e.decimal+"",o=void 0===e.numerals?Oa:function(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}(Pa.call(e.numerals,String)),l=void 0===e.percent?"%":e.percent+"",u=void 0===e.minus?"−":e.minus+"",c=void 0===e.nan?"NaN":e.nan+"";function h(e){var t=(e=Ra(e)).fill,n=e.align,h=e.sign,d=e.symbol,p=e.zero,f=e.width,m=e.comma,g=e.precision,b=e.trim,y=e.type;"n"===y?(m=!0,y="g"):Ma[y]||(void 0===g&&(g=12),b=!0,y="g"),(p||"0"===t&&"="===n)&&(p=!0,t="0",n="=");var x="$"===d?s:"#"===d&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",v="$"===d?a:/[%p]/.test(y)?l:"",w=Ma[y],k=/[defgprs%]/.test(y);function I(e){var s,a,l,d=x,I=v;if("c"===y)I=w(e)+I,e="";else{var $=(e=+e)<0||1/e<0;if(e=isNaN(e)?c:w(Math.abs(e),g),b&&(e=function(e){e:for(var t,n=e.length,r=1,s=-1;r<n;++r)switch(e[r]){case".":s=t=r;break;case"0":0===s&&(s=r),t=r;break;default:if(!+e[r])break e;s>0&&(s=0)}return s>0?e.slice(0,s)+e.slice(t+1):e}(e)),$&&0==+e&&"+"!==h&&($=!1),d=($?"("===h?h:u:"-"===h||"("===h?"":h)+d,I=("s"===y?Wa[8+Ea/3]:"")+I+($&&"("===h?")":""),k)for(s=-1,a=e.length;++s<a;)if(48>(l=e.charCodeAt(s))||l>57){I=(46===l?i+e.slice(s+1):e.slice(s))+I,e=e.slice(0,s);break}}m&&!p&&(e=r(e,1/0));var N=d.length+e.length+I.length,C=N<f?new Array(f-N+1).join(t):"";switch(m&&p&&(e=r(C+e,C.length?f-I.length:1/0),C=""),n){case"<":e=d+e+I+C;break;case"=":e=d+C+e+I;break;case"^":e=C.slice(0,N=C.length>>1)+d+e+I+C.slice(N);break;default:e=C+d+e+I}return o(e)}return g=void 0===g?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,g)):Math.max(0,Math.min(20,g)),I.toString=function(){return e+""},I}return{format:h,formatPrefix:function(e,t){var n=h(((e=Ra(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(Fa(t)/3))),s=Math.pow(10,-r),a=Wa[8+r/3];return function(e){return n(s*e)+a}}}}({thousands:",",grouping:[3],currency:["$",""]}),za=La.format,Ba=La.formatPrefix;const ja=Ha(Ga("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));function Ka(e,t,n){this.k=e,this.x=t,this.y=n}Ha(Ga("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),Ha(Ga("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),Ha(Ga("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),Ka.prototype={constructor:Ka,scale:function(e){return 1===e?this:new Ka(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new Ka(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new Ka(1,0,0),Ka.prototype;class qa{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Xa{refCount(e){return Ya("refCount")}incRef(e){return Ya("incRef")}timerAvailable(){return!0}time(e){return Ya("time")}read(e){return Ya("read")}readSync(e){return Ya("readSync")}numDataIds(){return Ya("numDataIds")}disposeData(e,t){return Ya("disposeData")}write(e,t,n){return Ya("write")}move(e,t,n,r,s){return Ya("move")}memory(){return Ya("memory")}floatPrecision(){return Ya("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Ya("dispose")}}function Ya(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Ja(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function Za(e,t,n){return Math.max(e,Math.min(t,n))}function Qa(e){return e%2==0?e:e+1}function ei(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ti(e,t,n=""){ei(ai(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ni(e){ei(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ri(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||gi(e)&&!n)for(let r=0;r<e.length;++r)ri(e[r],t,n);else t.push(e);return t}function si(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ai(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ii(e){return e%1==0}function oi(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function li(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ui(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function ci(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function hi(e,t){const n=t.length;return ei((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),ei(e.every((e=>ii(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function di(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:hi(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function pi(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function fi(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function mi(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function gi(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function bi(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function yi(e){return"string"==typeof e||e instanceof String}function xi(e){return"number"==typeof e}function vi(e){return Array.isArray(e)?vi(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":xi(e)?"float32":yi(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function wi(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ki(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ii(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function $i(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=$i(e+t*o,i,n,r)}return s}function Ni(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return $i(0,e,t,n)}function Ci(e,t){const n=Si(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Si(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ei(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Ni(e,new Float32Array(n));if("int32"===t)return Ni(e,new Int32Array(n));if("bool"===t)return Ni(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ti(e){e.forEach((t=>{ei(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ri(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ai(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function _i(e){return e&&e.then&&"function"==typeof e.then}class Fi{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Di,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(_i(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Di(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Mi(){return Li}let Oi,Li=null;function zi(){if(null==Oi){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Oi=e}return Oi}function Bi(e,t){const n=function(){const e=zi();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Pi="Abs",Wi="Acos",Vi="Acosh",Ui="Add",Gi="AddN",Hi="All",ji="Any",Ki="ArgMax",qi="ArgMin",Xi="Asin",Yi="Asinh",Ji="Atan",Zi="Atanh",Qi="Atan2",eo="AvgPool",to="AvgPoolGrad",no="AvgPool3D",ro="AvgPool3DGrad",so="BatchMatMul",ao="BatchToSpaceND",io="Bincount",oo="Cast",lo="Ceil",uo="ClipByValue",co="Complex",ho="ComplexAbs",po="Concat",fo="Conv2D",mo="Conv2DBackpropFilter",go="Conv2DBackpropInput",bo="Conv3D",yo="Conv3DBackpropFilterV2",xo="Conv3DBackpropInputV2",vo="Cos",wo="Cosh",ko="Cumsum",Io="CropAndResize",$o="DenseBincount",No="DepthToSpace",Co="DepthwiseConv2dNative",So="DepthwiseConv2dNativeBackpropFilter",Eo="DepthwiseConv2dNativeBackpropInput",To="Diag",Ro="Dilation2D",Ao="Dilation2DBackpropInput",_o="Dilation2DBackpropFilter",Fo="RealDiv",Do="Einsum",Mo="Elu",Oo="EluGrad",Lo="Erf",zo="Equal",Bo="Exp",Po="ExpandDims",Wo="Expm1",Vo="FFT",Uo="Fill",Go="FlipLeftRight",Ho="Floor",jo="FloorDiv",Ko="FusedBatchNorm",qo="GatherV2",Xo="GatherNd",Yo="Greater",Jo="GreaterEqual",Zo="Identity",Qo="IFFT",el="Imag",tl="IsFinite",nl="IsInf",rl="IsNan",sl="LeakyRelu",al="Less",il="LessEqual",ol="LinSpace",ll="Log",ul="Log1p",cl="LogicalAnd",hl="LogicalNot",dl="LogicalOr",pl="LRN",fl="LRNGrad",ml="Max",gl="Maximum",bl="MaxPool",yl="MaxPoolGrad",xl="MaxPool3D",vl="MaxPool3DGrad",wl="MaxPoolWithArgmax",kl="Mean",Il="Min",$l="Minimum",Nl="MirrorPad",Cl="Mod",Sl="Multinomial",El="Multiply",Tl="Neg",Rl="NotEqual",Al="NonMaxSuppressionV3",_l="NonMaxSuppressionV4",Fl="NonMaxSuppressionV5",Dl="OnesLike",Ml="OneHot",Ol="Pack",Ll="PadV2",zl="Pow",Bl="Prelu",Pl="Prod",Wl="Range",Vl="Real",Ul="Reciprocal",Gl="Relu",Hl="Reshape",jl="ResizeNearestNeighbor",Kl="ResizeNearestNeighborGrad",ql="ResizeBilinear",Xl="ResizeBilinearGrad",Yl="Relu6",Jl="Reverse",Zl="Round",Ql="Rsqrt",eu="ScatterNd",tu="Select",nu="Selu",ru="Slice",su="Sin",au="Sinh",iu="Sign",ou="Sigmoid",lu="Softplus",uu="Sqrt",cu="Sum",hu="SpaceToBatchND",du="SplitV",pu="Softmax",fu="SparseFillEmptyRows",mu="SparseReshape",gu="SparseToDense",bu="SquaredDifference",yu="Square",xu="StridedSlice",vu="Sub",wu="Tan",ku="Tanh",Iu="Tile",$u="TopK",Nu="Transform",Cu="Transpose",Su="Unique",Eu="Unpack",Tu="UnsortedSegmentSum",Ru="ZerosLike",Au="Step",_u="RotateWithOffset",Fu="_FusedMatMul",Du="FusedConv2D",Mu="FusedDepthwiseConv2D",Ou=Bi("kernelRegistry",(()=>new Map)),Lu=Bi("gradRegistry",(()=>new Map));function zu(e,t){const n=Uu(e,t);return Ou.get(n)}function Bu(e){return Lu.get(e)}function Pu(e){const t=Ou.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Wu(e){const{kernelName:t,backendName:n}=e,r=Uu(t,n);Ou.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Ou.set(r,e)}function Vu(e){const{kernelName:t}=e;Lu.has(t)&&Mi().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Lu.set(t,e)}function Uu(e,t){return`${t}_${e}`}function Gu(e,t){return"string"===t?Ku(e):Hu([e],t)}function Hu(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ri(e)),Mi().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ju(){return Mi().platform.now()}function Ku(e,t="utf-8"){return t=t||"utf-8",Mi().platform.encode(e,t)}function qu(e,t="utf-8"){return t=t||"utf-8",Mi().platform.decode(e,t)}class Xu{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ju)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=ju();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:ju()-i})}if(Mi().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Yu(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Yu(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ju{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?li(`${r}ms`,9):r.error,o=li(e,25),l=t.rank,u=t.size,c=li(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Zu(e,t,n,r){const s=Ii(t),a=function(e,t,n,r){const s=si(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?nc(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Qu(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=tc(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Qu(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:yi(e)?`'${e}'`:"bool"===n?ec(e):parseFloat(e.toFixed(7)).toString(),li(r,t)}function ec(e){return 0===e?"false":"true"}function tc(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Qu(nc(e)[0],0,n)]:"bool"===n?[ec(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=nc(r),a=nc(a)),["["+r.map(((e,t)=>Qu(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Qu(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?nc(e):Array.from(e)).map(((e,t)=>Qu(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...tc(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...tc(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...tc(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function nc(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class rc{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=si(e),null!=n){const e=n.length;ei(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||fi(t,this.size),this.strides=Ii(e)}set(e,...t){0===t.length&&(t=[0]),ei(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return sc().makeTensor(this.values,this.shape,this.dtype)}}let sc=null,ac=null,ic=null;class oc{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=si(e),this.strides=Ii(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ac.buffer(this.shape,this.dtype,e)}bufferSync(){return ac.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ni(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ni(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=sc().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>qu(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=sc().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>qu(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await sc().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(sc().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ac.print(this,e)}clone(){return this.throwIfDisposed(),ac.clone(this)}toString(e=!1){return Zu(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ac.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),sc().makeVariable(this,e,t,n)}}function lc(){return Bi("Tensor",(()=>oc))}Object.defineProperty(oc,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),lc();class uc extends oc{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ai(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);sc().disposeTensor(this),this.dataId=e.dataId,sc().incRef(this,null)}dispose(){sc().disposeVariable(this),this.isDisposedInternal=!0}}var cc,hc,dc,pc,fc;Object.defineProperty(uc,Symbol.hasInstance,{value:e=>e instanceof oc&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(cc||(cc={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(hc||(hc={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(dc||(dc={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(pc||(pc={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(fc||(fc={}));const mc={float32:pc,int32:hc,bool:dc,complex64:fc};function gc(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return mc[e][t]}function bc(e){return gc(e,"int32")}function yc(e,t){if(e.dtype===t.dtype)return[e,t];const n=gc(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function xc(e,t){return t.some((t=>t.id===e.id))}function vc(e){const t=[];return wc(e,t,new Set),t}function wc(e,t,n){if(null==e)return;if(e instanceof oc)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),wc(r,t,n))}}function kc(e){return null!=e.kernelName}class Ic{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class $c{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ic}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Xu(this.backendInstance),!0}setupRegisteredKernels(){Pu(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Pu(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Xa||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return $c.nextTensorId++}nextVariableId(){return $c.nextVariableId++}clone(e){const t=Cc.runKernel(Zo,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Cc.runKernel(oo,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==zu(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=kc(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(kc(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=zu(t,this.backendName);ei(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=kc(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Bu(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(ei(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&yi(e[0])&&(s=e.map((e=>Ku(e))));const a=r.write(s,t,n),i=new oc(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new oc(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new uc(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*bi(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof uc||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*bi(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Bu(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Si(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=vc(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(ei(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));ei(s instanceof oc,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Ci(si(e),"float32");return Cc.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!ai(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Sc);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return ei(wi(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;ei(t.every((e=>e instanceof oc)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),ei(n.value instanceof oc,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),ei(wi(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];ei(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),ei(a.every((e=>e instanceof oc)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=ju(),n=await this.backend.time(e);return n.wallMs=ju()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ic;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Nc(){const e=zi();if(null==e._tfengine){const t=new Fi(e);e._tfengine=new $c(t)}var t;return t=e._tfengine.ENV,Li=t,sc=()=>e._tfengine,e._tfengine}$c.nextTensorId=0,$c.nextVariableId=0;const Cc=Nc();function Sc(e,t){const n={a:e,b:t};return Cc.runKernel(Ui,n)}function Ec(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Tc(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Rc=Mi();function Ac(e,t){let n=e;if(gi(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||gi(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Mi().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&_c(e,r,[]),r}function _c(e,t,n){if(n=n||[],!Array.isArray(e)&&!gi(e))return void ei(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));ei(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),ei(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)_c(e[t],r,n.concat(t))}function Fc(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Dc(e,t,n,r="numeric"){if(e instanceof oc)return Fc(r,e.dtype,t,n),e;let s=vi(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Fc(r,s,t,n),null==e||!gi(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ac(e,s);gi(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Hu(e,s):ri(e,[],!0);return Cc.makeTensor(i,a,s)}function Mc(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Dc(e,`${t}[${s}]`,n,r)))}function Oc(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Cc.startScope(n);try{const t=r(...e);return _i(t)&&console.error("Cannot return a Promise inside of tidy."),Cc.endScope(t),t}catch(e){throw Cc.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Rc.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Rc.registerFlag("IS_BROWSER",(()=>Tc())),Rc.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Rc.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Rc.registerFlag("PROD",(()=>!1)),Rc.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Rc.getBool("DEBUG"))),Rc.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Rc.registerFlag("IS_TEST",(()=>!1)),Rc.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Rc.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Lc=Oc({complex_:function(e,t){const n=Dc(e,"real","complex"),r=Dc(t,"imag","complex");ti(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Cc.runKernel(co,s)}});function zc(e,t,n,r){if(null==r&&(r=vi(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!gi(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ti(t);const e=si(t),r=si(n);ei(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==si(t.slice(e));ei(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return gi(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Hu(e,r):ri(e,[],!0),Cc.makeTensor(e,t,r)}function Bc(e,t,n){return zc(e,t,Ac(e,n),n)}async function Pc(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Wc(await Promise.all(r)),specs:n}}function Wc(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Vc="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Uc(e){return Vc?Buffer.byteLength(e):new Blob([e]).size}function Gc(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Hc(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Uc(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Uc(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class jc{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==jc.instance&&(jc.instance=new jc),jc.instance}static registerSaveRouter(e){jc.getInstance().saveRouters.push(e)}static registerLoadRouter(e){jc.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return jc.getHandlers(e,"save")}static getLoadHandlers(e,t){return jc.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?jc.getInstance().loadRouters:jc.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Kc="tensorflowjs",qc="models_store",Xc="model_info_store";function Yc(){if(!Mi().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Jc(e){const t=e.result;t.createObjectStore(qc,{keyPath:"modelPath"}),t.createObjectStore(Xc,{keyPath:"modelPath"})}class Zc{constructor(e){if(this.indexedDB=Yc(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Kc,1);r.onupgradeneeded=()=>Jc(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(qc,"readonly"),r=t.objectStore(qc).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Hc(t),a=s.transaction(Xc,"readwrite");let i=a.objectStore(Xc);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(qc,"readwrite");const o=l.objectStore(qc).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Xc);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Zc.URL_SCHEME="indexeddb://";const Qc=e=>{return Mi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Zc.URL_SCHEME)?(t=e.slice(Zc.URL_SCHEME.length),new Zc(t)):null;var t};jc.registerSaveRouter(Qc),jc.registerLoadRouter(Qc);class eh{constructor(){this.indexedDB=Yc()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Kc,1);n.onupgradeneeded=()=>Jc(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xc,"readonly"),a=s.objectStore(Xc).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Zc.URL_SCHEME)?t.slice(Zc.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Kc,1);r.onupgradeneeded=()=>Jc(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Xc,"readwrite"),i=a.objectStore(Xc),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(qc,"readwrite");const r=l.objectStore(qc).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const th="/",nh="tensorflowjs_models",rh="info",sh="model_topology",ah="weight_specs",ih="weight_data",oh="model_metadata";function lh(e){return{info:[nh,e,rh].join(th),topology:[nh,e,sh].join(th),weightSpecs:[nh,e,ah].join(th),weightData:[nh,e,ih].join(th),modelMetadata:[nh,e,oh].join(th)}}function uh(e){const t=e.split(th);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(th)}class ch{constructor(e){if(!Mi().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=lh(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Hc(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Vc)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Vc){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ch.URL_SCHEME="localstorage://";const hh=e=>{return Mi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ch.URL_SCHEME)?(t=e.slice(ch.URL_SCHEME.length),new ch(t)):null;var t};jc.registerSaveRouter(hh),jc.registerLoadRouter(hh);class dh{constructor(){ei(Mi().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),ei("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=nh+th,n=th+rh;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[uh(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=lh(e=(t=e).startsWith(ch.URL_SCHEME)?t.slice(ch.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class ph{constructor(){this.managers={}}static getInstance(){return null==ph.instance&&(ph.instance=new ph),ph.instance}static registerManager(e,t){ei(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),ei(e.length>0,(()=>"scheme must not be an empty string."));const n=ph.getInstance();ei(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class fh{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Mi().get("IS_BROWSER")){Mi().setPlatform("browser",new fh);try{ph.registerManager(ch.URL_SCHEME,new dh)}catch(e){}try{ph.registerManager(Zc.URL_SCHEME,new eh)}catch(e){}}let mh;function gh(e,t="float32",n){return t=t||"float32",Ti(e),new rc(e,t,n)}Mi().get("IS_NODE")&&Mi().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Mi().global.fetch?Mi().global.fetch(e,t):(null==mh&&(mh=n(410)),mh(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const bh=Oc({cast_:function(e,t){const n=Dc(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Cc.runKernel(oo,r,s)}}),yh=Oc({clone_:function(e){const t={x:Dc(e,"x","clone","string_or_numeric")};return Cc.runKernel(Zo,t)}});function xh(e){return new Promise((e=>setTimeout(e))).then(e)}Nc(),ac={buffer:gh,cast:bh,clone:yh,print:function(e,t=!1){console.log(e.toString(t))}};class vh{constructor(e){if(!Mi().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(vh.URL_SCHEME)&&(e=e.slice(vh.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await xh((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xh((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Hc(e)}}}}function wh(e,t,n,r){!function(e){ei(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){ei(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),ei(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),ei(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function kh(e,t){null==t&&(t={});const n=null==t.fetchFunc?Mi().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await wh(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await wh(s,t.onProgress,.5,1)}vh.URL_SCHEME="downloads://",jc.registerSaveRouter((e=>Mi().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vh.URL_SCHEME)?function(e="model"){return new vh(e)}(e.slice(vh.URL_SCHEME.length)):null));class Ih{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(ei("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Mi().platform.fetch,ei(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&ei(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Hc(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Gc(await kh(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function $h(e){return null!=e.match(Ih.URL_SCHEME_REGEX)}Ih.URL_SCHEME_REGEX=/^https?:\/\//;const Nh=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$h(e))):$h(e),n)return function(e,t){return new Ih(e,t)}(e,t)}return null};function Ch(e,t,n){const r=e.shape.length;ei(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),ei(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)ei(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Sh(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Eh(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Th(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Rh(e,t,n){return n<=e?n:n-(t-1)}function Ah(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function _h(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Fh(i,l,u,r,e),h=Dh(o,l,u,s,e),d=Th(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Oh(i,r,a,e,t,l),h[t]=Lh(o,s,a,e,t,l),d[t]=Mh(a,t,l);return{begin:c,end:h,strides:d}}function Fh(e,t,n,r,s){const a=[...s],i=Ah(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Rh(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Dh(e,t,n,r,s){const a=[...s],i=Ah(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Rh(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=Za(0,a[e],s[e])}return a}function Mh(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Oh(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=Za(0,i,l-1),i}function Lh(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?Za(0,i,l):Za(-1,i,l-1),i}function zh(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Bh(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ph(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{ei(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(ei(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Wh(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=Sh(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=Sh(o),m=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:b,strides:y}=_h(m,d,p,u,c,h,s,a,i);u=g,c=b,h=y;const x=Sh(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const v=Eh(u,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:v,newShape:m,outShape:w}}jc.registerSaveRouter(Nh),jc.registerLoadRouter(Nh);class Vh{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Uh{constructor(){this.classNameMap={}}static getMap(){return null==Uh.instance&&(Uh.instance=new Uh),Uh.instance}static register(e){Uh.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Gh(e){ei(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),ei("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),ei(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Uh.register(e)}function Hh(){return Cc}function jh(){return Cc.memory()}function Kh(e,t){return Cc.tidy(e,t)}function qh(e){vc(e).forEach((e=>e.dispose()))}function Xh(e){return Cc.keep(e)}function Yh(e,t,n=1){return Cc.registerBackend(e,t,n)}function Jh(e){return Cc.customGrad(e)}function Zh(e,t){if((gi(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&gi(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return zc(e,[],[],t)}ic=function(e){Mi().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Qh extends Vh{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return qh(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){ei(wi(e),(()=>"The f passed in variableGrads(f) must be a function")),ei(null==t||Array.isArray(t)&&t.every((e=>e instanceof uc)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Cc.registeredVariables)t.push(Cc.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;ei((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Cc.gradients(e,t,null,!0);ei(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),ei(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&qh(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Zh(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Qh,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const ed=Oc({abs_:function(e){const t=Dc(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Cc.runKernel(ho,e)}{const e={x:t};return Cc.runKernel(Pi,e)}}}),td=Oc({add_:function(e,t){let n=Dc(e,"a","add"),r=Dc(t,"b","add");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(Ui,s)}}),nd=Oc({all_:function(e,t=null,n=!1){const r={x:Dc(e,"x","all","bool")},s={axis:t,keepDims:n};return Cc.runKernel(Hi,r,s)}}),rd=Oc({any_:function(e,t=null,n=!1){const r={x:Dc(e,"x","any","bool")},s={axis:t,keepDims:n};return Cc.runKernel(ji,r,s)}}),sd=Oc({argMax_:function(e,t=0){const n={x:Dc(e,"x","argMax")},r={axis:t};return Cc.runKernel(Ki,n,r)}});function ad(e,t,n,r,s="NHWC",a){return ld(e,[...t,e[3]],n,a,r,null,null,bd(s))}function id(e,t,n,r,s,a,i="channelsLast"){const[o,l]=hd(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ld(e,u,n,r,s,a,!1,i)}function od(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=dd(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return ud(e,c,n,r,s,!1,h,a)}function ld(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[m,g]=hd(n),[b,y]=hd(r),x=pd(d,b),v=pd(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=cd(e,t,n));const a=e[1];return[fd((e[0]-t+2*r)/n+1,s),fd((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=fd((t-a+d+p)/r+1,o),h=fd((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,v,a,o),$=i?f*h:f;let N;return"channelsFirst"===o?N=[l,$,k,I]:"channelsLast"===o&&(N=[l,k,I,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function ud(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,m,,g]=t,[b,y,x]=dd(n),[v,w,k]=dd(r),I=pd(p,v),$=pd(f,w),N=pd(m,k),{padInfo:C,outDepth:S,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=cd(e,t,r));const i=e[1],o=e[2];return[fd((e[0]-t+2*s)/r+1,a),fd((i-t+2*s)/r+1,a),fd((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),b=e-g,y=Math.floor(c/2),x=c-y,v=Math.floor(m/2);h={top:y,bottom:x,left:v,right:m-v,front:g,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,$,N,o),R=a?g*d:g;let A;return"channelsFirst"===i?A=[l,R,S,E,T]:"channelsLast"===i&&(A=[l,S,E,T,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:T,outChannels:R,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function cd(e,t,n,r=1){const s=pd(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function hd(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function dd(e){return"number"==typeof e?[e,e,e]:e}function pd(e,t){return t<=1?e:e+(e-1)*(t-1)}function fd(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function md(e){const[t,n,r]=hd(e);return 1===t&&1===n&&1===r}function gd(e,t){return md(e)||md(t)}function bd(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const yd=Oc({reshape_:function(e,t){const n={x:Dc(e,"x","reshape","string_or_numeric")},r={shape:t};return Cc.runKernel(Hl,n,r)}}),xd=Oc({avgPool_:function(e,t,n,r,s){const a=Dc(e,"x","avgPool","float32");ei(gd(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=yd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ei(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&ei(ii(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Cc.runKernel(eo,l,u);return c=bh(c,a.dtype),o?yd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),vd=Oc({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Dc(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=yd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ei(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),ei("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&ei(ii(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Cc.runKernel(no,u,c);return h=bh(h,o.dtype),l?yd(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),wd=Oc({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Dc(e,"x","batchNorm"),o=Dc(t,"mean","batchNorm"),l=Dc(n,"variance","batchNorm");let u,c;null!=s&&(u=Dc(s,"scale","batchNorm")),null!=r&&(c=Dc(r,"offset","batchNorm")),ei(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ei(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ei(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?yd(e,[1,1,1,e.size]):2===e.rank?yd(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?yd(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=Cc.runKernel(Ko,h,d);return yd(p,i.shape)}}),kd=Oc({batchNorm2d_:function(e,t,n,r,s,a){const i=Dc(e,"x","batchNorm"),o=Dc(t,"mean","batchNorm"),l=Dc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dc(s,"scale","batchNorm")),null!=r&&(c=Dc(r,"offset","batchNorm")),ei(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),ei(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),ei(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&ei(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&ei(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),wd(i,o,l,c,u,a)}}),Id=Oc({batchNorm3d_:function(e,t,n,r,s,a){const i=Dc(e,"x","batchNorm"),o=Dc(t,"mean","batchNorm"),l=Dc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dc(s,"scale","batchNorm")),null!=r&&(c=Dc(r,"offset","batchNorm")),ei(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),ei(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),ei(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&ei(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&ei(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),wd(i,o,l,c,u,a)}}),$d=Oc({batchNorm4d_:function(e,t,n,r,s,a){const i=Dc(e,"x","batchNorm"),o=Dc(t,"mean","batchNorm"),l=Dc(n,"variance","batchNorm");let u,c;return null!=s&&(u=Dc(s,"scale","batchNorm")),null!=r&&(c=Dc(r,"offset","batchNorm")),ei(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),ei(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),ei(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&ei(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&ei(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),wd(i,o,l,c,u,a)}}),Nd=Oc({clipByValue_:function(e,t,n){const r=Dc(e,"x","clipByValue");ei(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Cc.runKernel(uo,s,a)}}),Cd=Oc({concat_:function(e,t=0){ei(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Mc(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return yh(n[0]);const r=n,s={axis:t};return Cc.runKernel(po,r,s)}}),Sd=Oc({concat1d_:function(e){return Cd(e,0)}}),Ed=Oc({concat2d_:function(e,t){return Cd(e,t)}}),Td=Oc({concat3d_:function(e,t){return Cd(e,t)}}),Rd=Oc({concat4d_:function(e,t){return Cd(e,t)}}),Ad=Oc({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Dc(e,"x","conv2d"),l=Dc(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=yd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ei(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),ei(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&ei(ii(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];ei(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),ei(gd(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Cc.runKernel(fo,d,p);return c?yd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),_d=Oc({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Dc(e,"x","conv1d"),l=Dc(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=yd(o,[1,o.shape[0],o.shape[1]])),ei(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),ei(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&ei(ii(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ei(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),ei(gd(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),ei("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=yd(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=yd(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Ad(d,h,[1,n],r,"NHWC",[1,a],i);return yd(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Fd=Oc({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){ei(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=yd(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),ei(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),ei(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),ei(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];ei(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ei(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&ei(ii(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Cc.runKernel(go,d,p);return u?yd(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Dd=Oc({conv2dTranspose_:function(e,t,n,r,s,a){const i=Dc(e,"x","conv2dTranspose"),o=Dc(t,"filter","conv2dTranspose");return Fd(n,i,o,r,s,"NHWC",a)}}),Md=Oc({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Dc(e,"x","conv3d"),o=Dc(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=yd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ei(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),ei(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),ei(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),ei(gd(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ei("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Cc.runKernel(bo,c,h);return u?yd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Od=Oc({conv3DBackpropInput_:function(e,t,n,r,s){ei(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=yd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];ei(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),ei(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),ei(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),ei(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),ei(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Cc.runKernel(xo,c,h);return o?yd(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ld=Oc({conv3dTranspose_:function(e,t,n,r,s){const a=Dc(e,"x","conv3dTranspose"),i=Dc(t,"filter","conv3dTranspose");return Od(n,a,i,r,s)}}),zd=Oc({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Dc(e,"x","depthwiseConv2d"),l=Dc(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=yd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),ei(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),ei(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),ei(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&ei(ii(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=Cc.runKernel(Co,h,d);return c?yd(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Bd=Oc({floorDiv_:function(e,t){let n=Dc(e,"a","floorDiv"),r=Dc(t,"b","floorDiv");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(jo,s)}}),Pd=Oc({div_:function(e,t){let n=Dc(e,"a","div"),r=Dc(t,"b","div");if([n,r]=yc(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Bd(n,r);const s={a:n,b:r};return Cc.runKernel(Fo,s,{})}}),Wd=Oc({elu_:function(e){const t={x:Dc(e,"x","elu")};return Cc.runKernel(Mo,t)}});function Vd(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Ud(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Gd(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Hd=Oc({equal_:function(e,t){let n=Dc(e,"a","equal"),r=Dc(t,"b","equal");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(zo,s)}}),jd=Oc({expandDims_:function(e,t=0){const n=Dc(e,"x","expandDims","string_or_numeric");ei(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Cc.runKernel(Po,r,s)}}),Kd=Oc({tile_:function(e,t){const n=Dc(e,"x","tile","string_or_numeric");ei(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Cc.runKernel(Iu,r,s)}}),qd=Oc({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=gh([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=yd(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Kd(jd(i,0),[n[0],1,1]);if(2===n.length)return Kd(jd(jd(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Kd(jd(jd(jd(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Xd(e,t,n){const r={shape:e,value:t,dtype:n};return Cc.runKernel(Uo,{},r)}const Yd=Oc({floor_:function(e){const t={x:Dc(e,"x","floor")};return Cc.runKernel(Ho,t)}}),Jd=Oc({gather_:function(e,t,n=0,r=0){const s={x:Dc(e,"x","gather"),indices:Dc(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Cc.runKernel(qo,s,a)}}),Zd=Oc({greater_:function(e,t){let n=Dc(e,"a","greater"),r=Dc(t,"b","greater");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(Yo,s)}}),Qd=Oc({greaterEqual_:function(e,t){let n=Dc(e,"a","greaterEqual"),r=Dc(t,"b","greaterEqual");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(Jo,s)}}),ep=Oc({leakyRelu_:function(e,t=.2){const n={x:Dc(e,"x","leakyRelu")},r={alpha:t};return Cc.runKernel(sl,n,r)}});function tp(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Cc.runKernel(ol,{},r)}const np=Oc({log_:function(e){const t={x:Dc(e,"x","log")};return Cc.runKernel(ll,t)}}),rp=Oc({exp_:function(e){const t={x:Dc(e,"x","exp")};return Cc.runKernel(Bo,t)}}),sp=Oc({max_:function(e,t=null,n=!1){const r={x:Dc(e,"x","max")},s={reductionIndices:t,keepDims:n};return Cc.runKernel(ml,r,s)}}),ap=Oc({mul_:function(e,t){let n=Dc(e,"a","mul"),r=Dc(t,"b","mul");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(El,s)}}),ip=Oc({sub_:function(e,t){let n=Dc(e,"a","sub"),r=Dc(t,"b","sub");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(vu,s)}}),op=Oc({sum_:function(e,t=null,n=!1){let r=Dc(e,"x","sum");"bool"===r.dtype&&(r=bh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Cc.runKernel(cu,s,a)}}),lp=Oc({logSoftmax_:function(e,t=-1){const n=Dc(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Jh(((e,n)=>{const r=sp(e,t,!0),s=ip(e,r),a=ip(bh(s,"float32"),np(op(rp(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=rp(r);return ip(e,ap(op(e,t,!0),s))}}}))(n)}}),up=Oc({logicalAnd_:function(e,t){const n=Dc(e,"a","logicalAnd","bool"),r=Dc(t,"b","logicalAnd","bool");Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(cl,s)}}),cp=Oc({maxPool_:function(e,t,n,r,s){const a=Dc(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=yd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ei(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),ei(gd(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&ei(ii(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Cc.runKernel(bl,l,u);return o?yd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),hp=Oc({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Dc(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=yd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),ei(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),ei("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&ei(ii(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Cc.runKernel(xl,u,c);return l?yd(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),dp=Oc({maximum_:function(e,t){let n=Dc(e,"a","maximum"),r=Dc(t,"b","maximum");[n,r]=yc(n,r),"bool"===n.dtype&&(n=bh(n,"int32"),r=bh(r,"int32")),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(gl,s)}}),pp=Oc({mean_:function(e,t=null,n=!1){const r={x:Dc(e,"x","mean")},s={axis:t,keepDims:n};return Cc.runKernel(kl,r,s)}}),fp=Oc({matMul_:function(e,t,n=!1,r=!1){let s=Dc(e,"a","matMul"),a=Dc(t,"b","matMul");[s,a]=yc(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Cc.runKernel(so,i,o)}});function mp(e,t="float32"){if("complex64"===t){const t=mp(e,"float32"),n=mp(e,"float32");return Lc(t,n)}const n=Si(si(e),t);return Cc.makeTensor(n,e,t)}function gp(e,t="float32"){if("complex64"===t){const t=gp(e,"float32"),n=mp(e,"float32");return Lc(t,n)}const n=Ci(si(e),t);return Cc.makeTensor(n,e,t)}const bp=Oc({min_:function(e,t=null,n=!1){const r={x:Dc(e,"x","min")},s={axis:t,keepDims:n};return Cc.runKernel(Il,r,s)}}),yp=Oc({minimum_:function(e,t){let n=Dc(e,"a","minimum"),r=Dc(t,"b","minimum");[n,r]=yc(n,r),"bool"===n.dtype&&(n=bh(n,"int32"),r=bh(r,"int32")),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel($l,s)}});function xp(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function vp(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function wp(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function kp(e,t){return vp(e,t.map((e=>1)),t)}function Ip(e,t,n){ei(xp(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function $p(e,t){if(xp(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Np(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Cp(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Sp=Oc({square_:function(e){const t=Dc(e,"x","square");return Cc.runKernel("Square",{x:t},{})}}),Ep=Oc({moments_:function(e,t=null,n=!1){const r=hi(t,(e=Dc(e,"x","moments")).shape),s=pp(e,r,n);let a=s.shape;n||(a=kp(s.shape,r));const i=Sp(ip(bh(e,"float32"),yd(s,a)));return{mean:s,variance:pp(i,r,n)}}}),Tp=Oc({neg_:function(e){const t={x:Dc(e,"x","neg")};return Cc.runKernel(Tl,t)}}),Rp=Oc({notEqual_:function(e,t){let n=Dc(e,"a","notEqual"),r=Dc(t,"b","notEqual");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(Rl,s)}}),Ap=Oc({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Dc(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Cc.runKernel(Ml,s,a)}}),_p=Oc({onesLike_:function(e){const t={x:Dc(e,"x","onesLike")};return Cc.runKernel(Dl,t)}}),Fp=Oc({pad_:function(e,t,n=0){const r=Dc(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Cc.runKernel(Ll,a,s)}}),Dp=Oc({prelu_:function(e,t){const n={x:Dc(e,"x","prelu"),alpha:Dc(t,"alpha","prelu")};return Cc.runKernel(Bl,n)}});var Mp=n(377);class Op{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Mp.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Lp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Mp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const zp=Oc({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Op(t,n,r,!1,s),i=gh(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Bp=Oc({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=gh(e,r),i=new Lp(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Pp=Oc({relu_:function(e){const t={x:Dc(e,"x","relu")};return Cc.runKernel(Gl,t)}}),Wp=Oc({reverse_:function(e,t){const n={x:Dc(e,"x","reverse")},r={dims:t};return Cc.runKernel(Jl,n,r)}}),Vp=Oc({selu_:function(e){const t={x:Dc(e,"x","selu")};return Cc.runKernel(nu,t)}}),Up=Oc({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Dc(e,"x","separableConv2d"),l=Dc(t,"depthwiseFilter","separableConv2d"),u=Dc(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=yd(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");ei(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),ei(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),ei(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),ei(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),ei(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];ei(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=zd(c,l,r,s,i,a),m=Ad(f,u,1,"valid",i);return h?yd(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Gp=Oc({sigmoid_:function(e){const t={x:Dc(e,"x","sigmoid")};return Cc.runKernel(ou,t)}}),Hp=Oc({slice_:function(e,t,n){const r=Dc(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Cc.runKernel(ru,s,a)}}),jp=Oc({slice1d_:function(e,t,n){const r=Dc(e,"x","slice1d");return ei(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Hp(r,[t],[n])}}),Kp=Oc({slice2d_:function(e,t,n){const r=Dc(e,"x","slice2d");return ei(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Hp(r,t,n)}}),qp=Oc({slice3d_:function(e,t,n){const r=Dc(e,"x","slice3d");return ei(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Hp(r,t,n)}}),Xp=Oc({slice4d_:function(e,t,n){const r=Dc(e,"x","slice4d");return ei(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Hp(r,t,n)}}),Yp=Oc({softmax_:function(e,t=-1){const n=Dc(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Cc.runKernel(pu,r,s)}}),Jp=Oc({softplus_:function(e){const t={x:Dc(e,"x","softplus")};return Cc.runKernel(lu,t)}}),Zp=Oc({split_:function(e,t,n=0){const r={x:Dc(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Cc.runKernel(du,r,s)}}),Qp=Oc({sqrt_:function(e){const t={x:Dc(e,"x","sqrt")};return Cc.runKernel(uu,t)}}),ef=Oc({squeeze_:function(e,t){const n=Dc(e,"x","squeeze");return yd(n,di(n.shape,t).newShape)}}),tf=Oc({stack_:function(e,t=0){const n=Mc(e,"tensors","stack","string_or_numeric");ei(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&ei(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Cc.runKernel(Ol,r,s)}}),nf=Oc({tanh_:function(e){const t={x:Dc(e,"x","tanh")};return Cc.runKernel(ku,t)}});function rf(e,t){ni(e);const n=Ac(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return zc(e,null,n,t)}const sf=Oc({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Op(t,n,r,!0,s),i=gh(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),af=Oc({unstack_:function(e,t=0){const n=Dc(e,"x","unstack","string_or_numeric");ei(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Cc.runKernel(Eu,r,s)}}),of=Oc({broadcastTo_:function(e,t){let n=Dc(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=yd(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return yh(n);const i={x:n},o={reps:a};return Cc.runKernel(Iu,i,o)}}),lf=Oc({where_:function(e,t,n){const r=Dc(t,"a","where"),s=Dc(n,"b","where"),a=Dc(e,"condition","where","bool"),i=Gd(Gd(a.shape,r.shape),s.shape),o={condition:of(a,i),t:of(r,i),e:of(s,i)};return Cc.runKernel(tu,o)}}),uf=Oc({zerosLike_:function(e){const t={x:Dc(e,"x","zerosLike")};return Cc.runKernel(Ru,t)}}),cf=Oc({transpose_:function(e,t){const n=Dc(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),ei(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{ei(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Cc.runKernel(Cu,r,s)}}),hf=Oc({dropout_:function(e,t,n,r){const s=Dc(e,"x","dropout");if(ei("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),ei(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof oc?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(ai(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Pd(Yd(td(Bp(a,0,1,"float32",r),i)),i);return ap(s,o)}}),df=Oc({imag_:function(e){const t={input:Dc(e,"input","imag")};return Cc.runKernel(el,t)}}),pf=Oc({real_:function(e){const t={input:Dc(e,"input","real")};return Cc.runKernel(Vl,t)}}),ff=Oc({fft_:function(e){ei("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cc.runKernel(Vo,t)}}),mf=Oc({rfft_:function(e,t){ei("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Hp(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Cd([e,mp(r)],e.shape.length-1),n=t}else s=e;const a=uf(s),i=yd(Lc(s,a),[r,n]),o=ff(i),l=Math.floor(n/2)+1,u=pf(o),c=df(o),h=Zp(u,[l,n-l],u.shape.length-1),d=Zp(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,yd(Lc(h[0],d[0]),p)}}),gf=Oc({ifft_:function(e){ei("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Cc.runKernel(Qo,t)}}),bf=Oc({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=yd(e,[n,t]);r=gf(s)}else{const s=[n,2*(t-1)],a=yd(pf(e),[n,t]),i=yd(df(e),[n,t]),o=Wp(Hp(a,[0,1],[n,t-2]),1),l=ap(Wp(Hp(i,[0,1],[n,t-2]),1),Zh(-1)),u=Cd([a,o],1),c=Cd([i,l],1),h=yd(Lc(u,c),[s[0],s[1]]);r=gf(h)}if(r=pf(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=yd(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),yf=Oc({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=yd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=yd(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ei(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),ei(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),ei(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];ei(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),ei(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&ei(ii(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Cc.runKernel(mo,h,d)}}),xf=Oc({relu6_:function(e){const t={x:Dc(e,"x","relu6")};return Cc.runKernel(Yl,t)}}),vf=Oc({step_:function(e,t=0){const n={x:Dc(e,"x","step")},r={alpha:t};return Cc.runKernel(Au,n,r)}});function wf(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ap(e,vf(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function kf(e,t){let n=t;const r=Ud(e.shape,t.shape);return r.length>0&&(n=op(n,r)),yd(n,e.shape)}function If(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Pp(e);if("elu"===t)return Wd(e);if("relu6"===t)return xf(e);if("prelu"===t)return Dp(e,n);if("leakyrelu"===t)return ep(e,r);if("sigmoid"===t)return Gp(e);throw new Error(`Unknown fused activation ${t}.`)}const $f=(e,t)=>!(e>0)||"linear"===t,Nf=Oc({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===$f(Cc.state.gradientDepth,l)){let h=Ad(e,t,n,r,s,a,i);return null!=o&&(h=td(h,o)),If(h,l,u,c)}const h=Dc(e,"x","conv2d"),d=Dc(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=yd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ei(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),ei(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&ei(ii(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),ei(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),ei(gd(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ei("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=ld(p.shape,d.shape,n,a,r,i);let g,b;null!=o&&(g=Dc(o,"bias","fused conv2d"),[g]=yc(g,h),Gd(m.outShape,g.shape)),null!=u&&(b=Dc(u,"prelu weights","fused conv2d"));const y=(e,t)=>{const[s,i,o,u]=t,c=wf(e,o,l);ei(md(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Fd(i.shape,c,s,n,r),yf(i,c,s.shape,n,r)];if(null!=u){const e=kf(u,c);h.push(e)}return h},x={x:p,filter:d,bias:g,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Jh(((e,t,n)=>{let r=Cc.runKernel(Du,x,v);return n([t,e,r]),f&&(r=yd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Jh(((e,t,n,r)=>{let s=Cc.runKernel(Du,x,v);return r([t,e,s,n]),f&&(s=yd(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,g)}}),Cf=Oc({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=yd(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=yd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Cc.runKernel(So,u,c)}}),Sf=Oc({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=yd(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Cc.runKernel(Eo,u,c);return l?yd(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});Oc({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===$f(Cc.state.gradientDepth,l)){let h=zd(e,t,n,r,s,a,i);return null!=o&&(h=td(h,o)),If(h,l,u,c)}const h=Dc(e,"x","depthwiseConv2d"),d=Dc(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=yd(h,[1,h.shape[0],h.shape[1],h.shape[2]])),ei(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),ei(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),ei(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),ei(gd(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&ei(ii(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const m=ld(p.shape,d.shape,n,a,r,i,!0);let g,b;null!=o&&(g=Dc(o,"bias","fused conv2d"),[g]=yc(g,h),Gd(m.outShape,g.shape)),null!=u&&(b=Dc(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{ei(md(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=wf(e,u,l),d=Sf(o.shape,h,s,n,r,a,i),p=Cf(o,h,s.shape,n,r,a,i);return null!=c?[d,p,kf(g,h)]:[d,p]},x={x:p,filter:d,bias:g,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Jh(((e,t,n)=>{let r=Cc.runKernel(Mu,x,v);return n([t,e,r]),f&&(r=yd(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Jh(((e,t,n,r)=>{let s=Cc.runKernel(Mu,x,v);return r([t,e,s,n]),f&&(s=yd(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,g)}});const Ef=Oc({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===$f(Cc.state.gradientDepth,a)){let l=fp(e,t,n,r);return null!=s&&(l=td(l,s)),If(l,a,i,o)}let l=Dc(e,"a","fused matMul"),u=Dc(t,"b","fused matMul");[l,u]=yc(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=si(f),b=si(m);ei(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),ei(ai(f,m),(()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),ei(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=l.shape.slice(0,-2).concat([d,p]),x=yd(l,n?[g,c,d]:[g,d,c]),v=yd(u,r?[b,p,h]:[b,h,p]);let w,k;null!=s&&(w=Dc(s,"bias","fused matMul"),[w]=yc(w,l),Gd(y,w.shape)),null!=i&&(k=Dc(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=wf(yd(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=fp(c,o,!1,!1),d=fp(c,i,!0,!1)):n&&!r?(h=fp(o,c,!1,!0),d=fp(i,c,!1,!1)):(h=fp(o,c,!0,!0),d=fp(c,i,!0,!0)):(h=fp(c,o,!1,!0),d=fp(i,c,!0,!1)),null!=s?[h,d,kf(u,c)]:[h,d]},$={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?Jh(((e,t,n)=>{const r=Cc.runKernel(Fu,$,N);return n([e,t,r]),{value:yd(r,y),gradFunc:I}}))(x,v):Jh(((e,t,n,r)=>{const s=Cc.runKernel(Fu,$,N);return r([e,t,s,n]),{value:yd(s,y),gradFunc:I}}))(x,v,w)}});function Tf(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return rf(s,"float32")}Oc({hammingWindow_:function(e){return Tf(e,.54,.46)}});const Rf=Oc({hannWindow_:function(e){return Tf(e,.5,.5)}});function Af(e,t,n){if(ni(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ac(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return zc(e,t,r,n)}const _f=Oc({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Hp(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Cd([Hp(e,a,t-r),Xd([r],s)]);i.push(o),a+=n}return 0===i.length?Af([],[0,t]):yd(Cd(i),[i.length,t])}});function Ff(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),ei(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),ei(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),ei(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),ei(1===t.rank,(()=>"scores must be a 1D tensor")),ei(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),ei(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Df(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Mf)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Mf(e,t){return e>t?1:e<t?-1:0}function Of(e,t,n,r,s){return Bf(e,t,n,r,s,0)}function Lf(e,t,n,r,s,a){return Bf(e,t,n,r,s,0,!1,a,!0)}function zf(e,t,n,r,s,a){return Bf(e,t,n,r,s,a,!0)}function Bf(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Vf);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Pf(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Wf(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Df(u,t,Vf))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=p),m}function Pf(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Wf(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Vf(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}Oc({stft_:function(e,t,n,r,s=Rf){null==r&&(r=function(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}(t));const a=_f(e,t,n),i=ap(a,s(t));return mf(i,r)}}),Oc({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Dc(e,"image","cropAndResize"),o=Dc(t,"boxes","cropAndResize","float32"),l=Dc(n,"boxInd","cropAndResize","int32"),u=o.shape[0];ei(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),ei(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),ei(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),ei(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),ei(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),ei("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Cc.runKernel(Io,c,h)}}),Oc({flipLeftRight_:function(e){const t=Dc(e,"image","flipLeftRight","float32");ei(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Cc.runKernel(Go,n,{})}}),Oc({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Dc(e,"image","rotateWithOffset","float32");ei(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Cc.runKernel(_u,a,i)}}),Oc({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Dc(e,"boxes","nonMaxSuppression"),i=Dc(t,"scores","nonMaxSuppression"),o=Ff(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Cc.runKernel(Al,{boxes:a,scores:i},l)}}),Oc({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Dc(e,"boxes","nonMaxSuppression"),o=Dc(t,"scores","nonMaxSuppression"),l=Ff(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Cc.runKernel(Fl,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Oc({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Dc(e,"boxes","nonMaxSuppression"),o=Dc(t,"scores","nonMaxSuppression"),l=Ff(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Cc.runKernel(_l,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Uf=Oc({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Dc(e,"images","resizeBilinear");ei(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),ei(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),ei(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=yd(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Cc.runKernel(ql,o,l);return i?yd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Gf=Oc({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Dc(e,"images","resizeNearestNeighbor");ei(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),ei(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),ei("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),ei(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=yd(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Cc.runKernel(jl,o,l);return i?yd(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Hf=Oc({bincount_:function(e,t,n){const r=Dc(e,"x","bincount"),s=Dc(t,"weights","bincount");ei("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),ei(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ei(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Cc.runKernel(io,a,i)}}),jf=Oc({lessEqual_:function(e,t){let n=Dc(e,"a","lessEqual"),r=Dc(t,"b","lessEqual");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(il,s)}}),Kf=Oc({round_:function(e){const t={x:Dc(e,"x","round")};return Cc.runKernel(Zl,t)}});function qf(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Cc.runKernel(Wl,{},s)}Oc({threshold_:function(e,t="binary",n=!1,r=.5){const s=Dc(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=ap(rf([r]),255);if(ei(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),ei(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),ei("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),ei("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Zp(s,[1,1,1],-1);const e=ap(i,.2989),t=ap(o,.587),n=ap(l,.114);u=td(td(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=rf([-1]),u=rf([0]),c=rf([0]);for(let h=0;h<e.size-1;h++){n=Hp(e,0,h+1),r=Hp(e,h+1),i=Pd(op(n),t),o=Pd(op(r),t);const d=op(ap(n,qf(0,n.size)));s=Pd(d,op(n));const p=Xd(r.shape,n.size),f=td(qf(0,r.size),p),m=ap(r,f);a=Pd(op(m),op(r));const g=ip(s,a),b=ip(s,a),y=ap(i,o);c=ap(ap(y,g),b);const x=Zd(c,u);u=lf(x,c,u),l=lf(x,rf([h]),l)}return l}(Hf(bh(Kf(u),"int32"),Bc([]),256),a));const h=n?jf(u,c):Zd(u,c);return bh(ap(h,255),"int32")}}),Oc({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Dc(e,"image","transform","float32"),o=Dc(t,"transforms","transform","float32");ei(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),ei(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),ei(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Cc.runKernel(Nu,l,u)}});const Xf=Oc({bandPart_:function(e,t,n){ei(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),ei(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Dc(e,"a","bandPart");ei(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=yd(qf(0,a,1,"int32"),[-1,1]),l=qf(0,i,1,"int32"),u=ip(o,l),c=up(jf(u,Zh(+t,"int32")),Qd(u,Zh(-n,"int32"))),h=mp([a,i],r.dtype);return yd(tf(af(yd(r,[-1,a,i])).map((e=>lf(c,e,h)))),s)}}),Yf=Oc({pow_:function(e,t){let n=Dc(e,"base","pow"),r=Dc(t,"exp","pow");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(zl,s)}});function Jf(e,t,n=null){if(0===e.rank)return ed(e);if(1!==e.rank&&null===n)return Jf(yd(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return op(ed(e),n);if(t===1/0)return sp(ed(e),n);if(t===-1/0)return bp(ed(e),n);if("euclidean"===t||2===t)return Qp(op(Yf(ed(e),Zh(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return sp(op(ed(e),n[0]),n[1]-1);if(t===1/0)return sp(op(ed(e),n[1]),n[0]);if(t===-1/0)return bp(op(ed(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Qp(op(Sp(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Zf=Oc({norm_:function(e,t="euclidean",n=null,r=!1){const s=Jf(e=Dc(e,"x","norm"),t,n);let a=s.shape;if(r){const t=hi(n,e.shape);a=kp(s.shape,t)}return yd(s,a)}}),Qf=Oc({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,ei(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)ei(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zp(e,e.shape[0],0).map((e=>ef(e,[0])));ei(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Cc.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ap(op(ap(n[r],e)),n[r]);e=ip(e,t)}return Pd(e,Zf(e,"euclidean"))})));return t?tf(n,0):n}});function em(e,t=!1){return Cc.tidy((()=>{ei(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=qd(n),a=yh(e);const i=Af([[1]],[1,1]);let o=yh(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Cc.tidy((()=>{const t=Hp(a,[e,e],[n-e,1]),l=Zf(t),u=Hp(a,[e,e],[1,1]),c=lf(Zd(u,0),Af([[-1]]),Af([[1]])),h=ip(u,ap(c,l)),d=Pd(t,h);o=1===d.shape[0]?yh(i):Cd([i,Hp(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Tp(Pd(fp(c,h),l)),f=Hp(a,[e,0],[n-e,r]),m=ap(p,o),g=cf(o);if(0===e)a=ip(f,fp(m,fp(g,f)));else{const t=ip(f,fp(m,fp(g,f)));a=Cd([Hp(a,[0,0],[e,r]),t],0)}const b=cf(m),y=Hp(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=ip(y,fp(fp(y,o),b));else{const t=ip(y,fp(fp(y,o),b));s=Cd([Hp(s,[0,0],[n,e]),t],1)}return[o,a,s]})),qh([t,l,u])}return!t&&n>r&&(s=Hp(s,[0,0],[n,r]),a=Hp(a,[0,0],[r,r])),[s,a]}))}const tm=Oc({qr_:function(e,t=!1){if(ei(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return em(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=af(yd(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=em(e,t);s.push(n),a.push(r)})),[yd(tf(s,0),e.shape),yd(tf(a,0),e.shape)]}}});var nm;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(nm||(nm={}));const rm=Oc({computeWeightedLoss_:function(e,t,n=nm.SUM_BY_NONZERO_WEIGHTS){const r=Dc(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Dc(t,"weights","computeWeightedLoss"));const a=null==s?r:ap(r,s);if(n===nm.NONE)return a;if(n===nm.SUM)return op(a);if(n===nm.MEAN){if(null==s)return pp(a);{const e=r.size/s.size,t=Pd(op(a),op(s));return e>1?Pd(t,Zh(e)):t}}if(n===nm.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Pd(op(a),Zh(r.size));{const e=ap(s,gp(r.shape)),t=bh(op(Rp(e,Zh(0))),"float32");return Pd(op(a),t)}}throw Error(`Unknown reduction: ${n}`)}});Oc({absoluteDifference_:function(e,t,n,r=nm.SUM_BY_NONZERO_WEIGHTS){const s=Dc(e,"labels","absoluteDifference"),a=Dc(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Dc(n,"weights","absoluteDifference")),ti(s.shape,a.shape,"Error in absoluteDifference: ");const o=ed(ip(s,a));return rm(o,i,r)}}),Oc({cosineDistance_:function(e,t,n,r,s=nm.SUM_BY_NONZERO_WEIGHTS){const a=Dc(e,"labels","cosineDistance"),i=Dc(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Dc(r,"weights","cosineDistance")),ti(a.shape,i.shape,"Error in cosineDistance: ");const l=Zh(1),u=ip(l,op(ap(a,i),n,!0));return rm(u,o,s)}}),Oc({hingeLoss_:function(e,t,n,r=nm.SUM_BY_NONZERO_WEIGHTS){let s=Dc(e,"labels","hingeLoss");const a=Dc(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Dc(n,"weights","hingeLoss")),ti(s.shape,a.shape,"Error in hingeLoss: ");const o=Zh(1);s=ip(ap(Zh(2),s),o);const l=Pp(ip(o,ap(s,a)));return rm(l,i,r)}}),Oc({huberLoss_:function(e,t,n,r=1,s=nm.SUM_BY_NONZERO_WEIGHTS){const a=Dc(e,"labels","huberLoss"),i=Dc(t,"predictions","huberLoss");let o=null;null!=n&&(o=Dc(n,"weights","huberLoss")),ti(a.shape,i.shape,"Error in huberLoss: ");const l=Zh(r),u=ed(ip(i,a)),c=yp(u,l),h=ip(u,c),d=td(ap(Zh(.5),Sp(c)),ap(l,h));return rm(d,o,s)}}),Oc({logLoss_:function(e,t,n,r=1e-7,s=nm.SUM_BY_NONZERO_WEIGHTS){const a=Dc(e,"labels","logLoss"),i=Dc(t,"predictions","logLoss");let o=null;null!=n&&(o=Dc(n,"weights","logLoss")),ti(a.shape,i.shape,"Error in logLoss: ");const l=Zh(1),u=Zh(r),c=Tp(ap(a,np(td(i,u)))),h=ap(ip(l,a),np(td(ip(l,i),u))),d=ip(c,h);return rm(d,o,s)}});const sm=Oc({squaredDifference_:function(e,t){let n=Dc(e,"a","squaredDifference"),r=Dc(t,"b","squaredDifference");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(bu,s,{})}});Oc({meanSquaredError_:function(e,t,n,r=nm.SUM_BY_NONZERO_WEIGHTS){const s=Dc(e,"labels","meanSquaredError"),a=Dc(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Dc(n,"weights","meanSquaredError")),ti(s.shape,a.shape,"Error in meanSquaredError: ");const o=sm(s,a);return rm(o,i,r)}});const am=Oc({log1p_:function(e){const t={x:Dc(e,"x","log1p")};return Cc.runKernel(ul,t)}});Oc({sigmoidCrossEntropy_:function(e,t,n,r=0,s=nm.SUM_BY_NONZERO_WEIGHTS){let a=Dc(e,"multiClassLabels","sigmoidCrossEntropy");const i=Dc(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Dc(n,"weights","sigmoidCrossEntropy")),ti(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Zh(r),t=Zh(1),n=Zh(.5);a=td(ap(a,ip(t,e)),ap(n,e))}const l=function(e,t){const n=Dc(e,"labels","sigmoidCrossEntropyWithLogits"),r=Dc(t,"logits","sigmoidCrossEntropyWithLogits");ti(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Pp(r),a=ap(r,n),i=am(rp(Tp(ed(r))));return td(ip(s,a),i)}(a,i);return rm(l,o,s)}});const im=Oc({logSumExp_:function(e,t=null,n=!1){const r=Dc(e,"x","logSumExp"),s=hi(t,r.shape),a=sp(r,s,!0),i=ip(r,a),o=rp(i),l=op(o,s),u=np(l),c=td(yd(a,u.shape),u);if(n){const e=kp(c.shape,s);return yd(c,e)}return c}});Oc({softmaxCrossEntropy_:function(e,t,n,r=0,s=nm.SUM_BY_NONZERO_WEIGHTS){let a=Dc(e,"onehotLabels","softmaxCrossEntropy");const i=Dc(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Dc(n,"weights","softmaxCrossEntropy")),ti(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Zh(r),t=Zh(1),n=Zh(a.shape[1]);a=td(ap(a,ip(t,e)),Pd(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Jh(((e,t,r)=>{const s=im(t,[n],!0),a=ip(bh(t,"float32"),s);r([e,a]);const i=Tp(ap(a,e));return{value:op(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=kp(e.shape,[n]);return[ap(yd(e,a),ip(bh(r,"float32"),rp(s))),ap(yd(e,a),ip(rp(s),bh(r,"float32")))]}}}))(e,t)}(a,i);return rm(l,o,s)}}),Oc({sparseFillEmptyRows_:function(e,t,n,r){const s=Dc(e,"indices","sparseFillEmptyRows"),a=Dc(t,"values","sparseFillEmptyRows"),i=Dc(n,"denseShape","sparseFillEmptyRows"),o=Dc(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Cc.runKernel(fu,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Oc({sparseReshape_:function(e,t,n){const r=Dc(e,"inputIndices","sparseReshape"),s=Dc(t,"inputShape","sparseReshape"),a=Dc(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Cc.runKernel(mu,i);return{outputIndices:o[0],outputShape:o[1]}}});const om={bandPart:Xf,gramSchmidt:Qf,qr:tm};class lm extends Qh{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Cc.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cc.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Kh((()=>uf(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Kh((()=>uf(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Kh((()=>{const e=td(ap(a,this.rho),ap(Sp(s),1-this.rho)),t=ap(Pd(Qp(td(i,this.epsilon)),Qp(td(a,this.epsilon))),s),n=td(ap(i,this.rho),ap(Sp(t),1-this.rho));a.assign(e),i.assign(n);const o=td(ap(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(qh(this.accumulatedGrads.map((e=>e.variable))),qh(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}lm.className="Adadelta",Gh(lm);class um extends Qh{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cc.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Kh((()=>Xd(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Kh((()=>{const e=td(a,Sp(s));a.assign(e);const t=td(ap(Pd(s,Qp(td(e,Cc.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&qh(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}um.className="Adagrad",Gh(um);class cm extends Qh{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Kh((()=>{this.accBeta1=Zh(t).variable(),this.accBeta2=Zh(n).variable()})),null==r&&(this.epsilon=Cc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Kh((()=>{const n=ip(1,this.accBeta1),r=ip(1,this.accBeta2);t.forEach(((t,s)=>{const a=Cc.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Kh((()=>uf(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Kh((()=>uf(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=td(ap(o,this.beta1),ap(i,1-this.beta1)),c=td(ap(l,this.beta2),ap(Sp(i),1-this.beta2)),h=Pd(u,n),d=Pd(c,r);o.assign(u),l.assign(c);const p=td(ap(Pd(h,td(Qp(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(ap(this.accBeta1,this.beta1)),this.accBeta2.assign(ap(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qh(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&qh(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Kh((()=>{this.accBeta1.assign(Yf(this.beta1,this.iterations_+1)),this.accBeta2.assign(Yf(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}cm.className="Adam",Gh(cm);class hm extends Qh{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Kh((()=>{this.iteration=Zh(0).variable(),this.accBeta1=Zh(t).variable()})),null==r&&(this.epsilon=Cc.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Kh((()=>{const n=ip(1,this.accBeta1),r=Pd(-this.learningRate,td(ap(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Cc.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:uf(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:uf(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=td(ap(o,this.beta1),ap(i,1-this.beta1)),c=ap(l,this.beta2),h=ed(i),d=dp(c,h);o.assign(u),l.assign(d);const p=td(ap(Pd(r,n),Pd(u,td(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(td(this.iteration,1)),this.accBeta1.assign(ap(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qh(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&qh(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}hm.className="Adamax",Gh(hm);class dm extends Qh{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Cc.registeredVariables[t];Kh((()=>{const e=td(ap(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Xh(Zh(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}dm.className="SGD",Gh(dm);class pm extends dm{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Zh(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cc.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Kh((()=>uf(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Kh((()=>{let e;const t=td(ap(this.m,s),a);e=this.useNesterov?td(ap(this.c,td(a,ap(t,this.m))),r):td(ap(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&qh(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}pm.className="Momentum",Gh(pm);class fm extends Qh{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Cc.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Cc.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Kh((()=>uf(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Kh((()=>uf(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Kh((()=>uf(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Kh((()=>{const e=td(ap(i,this.decay),ap(Sp(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=td(ap(t,this.decay),ap(a,1-this.decay)),l=Pd(ap(a,this.learningRate),Qp(ip(e,td(Sp(s),this.epsilon)))),u=td(ap(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=ip(r,u);r.assign(c)}else{const e=td(ap(i,this.decay),ap(Sp(a),1-this.decay)),t=td(ap(o,this.momentum),Pd(ap(a,this.learningRate),Qp(td(e,this.epsilon))));i.assign(e),o.assign(t);const n=ip(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&qh(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&qh(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&qh(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}fm.className="RMSProp",Gh(fm);class mm{static sgd(e){return new dm(e)}static momentum(e,t,n=!1){return new pm(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new fm(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new cm(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new lm(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new hm(e,t,n,r,s)}static adagrad(e,t=.1){return new um(e,t)}}const gm={sgd:mm.sgd,momentum:mm.momentum,adadelta:mm.adadelta,adagrad:mm.adagrad,rmsprop:mm.rmsprop,adamax:mm.adamax,adam:mm.adam},bm="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function ym(){return new Promise((e=>bm((()=>e()))))}function xm(e,t){const n=e[0].length;e.forEach(((e,t)=>{ei(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),ei(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)ei(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function vm(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const wm=30;function km(e){return e<=wm?e:ki(e,Math.floor(Math.sqrt(e)))}function Im(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function $m(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Nm(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Cm(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Sm(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Em(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Tm(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===si(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Ii(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Rm(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Am(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Rm(n,t,e)}function _m(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:si(t.shape)/o,sliceSize:i,strides:[...Ii(n.slice(0,s)),1],outputSize:si(n)}}const Fm=1.7580993408473768,Dm=1.0507009873554805,Mm=.3275911,Om=.254829592,Lm=-.284496736,zm=1.421413741,Bm=-1.453152027,Pm=1.061405429;function Wm(...e){Mi().getBool("IS_TEST")||console.warn(...e)}function Vm(...e){Mi().getBool("IS_TEST")||console.log(...e)}function Um(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Gm(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Hm(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function jm(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Km(e,t){return{real:e[2*t],imag:e[2*t+1]}}function qm(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Xm(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Ym(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Jm=/->/g;function Zm(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Jm,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");ei(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Qm(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function eg(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:ei(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function tg(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=rg(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function ng(e){return e.every(((e,t)=>e===t))}function rg(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function sg(e,t,n=0){let r=[];if("number"==typeof t)ei(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{ei(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}ei(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function ag(e,t){let n,r=!1;for(e<=wm?(n=e,r=!0):n=ki(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ki(e,n+1);return n}function ig(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function og(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function lg(e){try{return e.map((e=>qu(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ug(e){return e.map((e=>Ku(e)))}function cg(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=gh(e,"int32"),s=gh([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const hg={kernelName:Pi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,vf(bh(n,"float32"),-1))}}},dg={kernelName:Wi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Sp(bh(n,"float32")),r=Qp(ip(Zh(1),t));return Tp(Pd(e,r))}}}},pg={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qp(ip(Sp(bh(n,"float32")),1));return Pd(e,t)}}}},fg={kernelName:Ui,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{let t=e;const r=Ud(n.shape,s);return r.length>0&&(t=op(t,r)),yd(t,n.shape)},b:()=>{let t=e;const n=Ud(r.shape,s);return n.length>0&&(t=op(t,n)),yd(t,r.shape)}}}},mg={kernelName:Gi,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},gg={kernelName:Ki,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uf(n)}}},bg={kernelName:qi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>uf(n)}}},yg={kernelName:Xi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,Qp(ip(Zh(1),Sp(bh(n,"float32")))))}}},xg={kernelName:Yi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Qp(td(Zh(1),Sp(bh(n,"float32"))));return Pd(e,t)}}}},vg={kernelName:Qi,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{const t=td(Sp(n),Sp(r));let a=ap(e,Pd(r,t));const i=Ud(n.shape,s);return i.length>0&&(a=op(a,i)),yd(a,n.shape)},b:()=>{const t=td(Sp(n),Sp(r));let a=Tp(ap(e,Pd(n,t)));const i=Ud(r.shape,s);return i.length>0&&(a=op(a,i)),yd(a,r.shape)}}}},wg={kernelName:Ji,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,td(Sp(bh(n,"float32")),1))}}},kg={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,ip(Zh(1),Sp(bh(n,"float32"))))}}},Ig=Oc({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Dc(e,"dy","avgPool3dGrad"),o=Dc(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=yd(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=yd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ei(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),ei(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&ei(ii(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Cc.runKernel(ro,h,d);return c?yd(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),$g={kernelName:no,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Ig(e,r,s,a,i,o)}}},Ng=Oc({avgPoolGrad_:function(e,t,n,r,s){const a=Dc(e,"dy","avgPoolGrad"),i=Dc(t,"input","avgPoolGrad");ei(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=yd(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=yd(a,[1,a.shape[0],a.shape[1],a.shape[2]])),ei(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),ei(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Cc.runKernel(to,c,h);return u?yd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Cg={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Ng(e,r,s,a,i)}}},Sg={kernelName:so,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>fp(e,s,!1,!1),b:()=>fp(e,r,!0,!1)}:a&&!i?{a:()=>fp(s,e,!1,!0),b:()=>fp(r,e,!1,!1)}:{a:()=>fp(s,e,!0,!0),b:()=>fp(e,r,!0,!0)}:{a:()=>fp(e,s,!1,!0),b:()=>fp(r,e,!0,!1)}}},Eg=Oc({spaceToBatchND_:function(e,t,n){const r=Dc(e,"x","spaceToBatchND");ei(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ei(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ei(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Cc.runKernel(hu,s,a)}}),Tg={kernelName:ao,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Eg(e,r,s)}}},Rg={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>op(e,o,!0)}}},Ag={kernelName:oo,gradFunc:e=>({x:()=>e.clone()})},_g={kernelName:lo,gradFunc:e=>({x:()=>uf(e)})},Fg={kernelName:uo,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>lf(up(Qd(r,s),jf(r,a)),e,uf(e))}}},Dg={kernelName:ho,inputsToSave:["x"],gradFunc:hg.gradFunc},Mg={kernelName:po,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=hi(s,t[0].shape)[0],i=r.map((e=>e[a]));return Zp(e,i,a).map((e=>()=>e))}},Og={kernelName:fo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return ei(md(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Fd(r.shape,e,s,i,o,l),filter:()=>yf(r,e,s.shape,i,o,l)}}},Lg={kernelName:go,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Ad(e,s,a,i,o,1,l),filter:()=>yf(e,r,s.shape,a,i,o,l)}}},zg=Oc({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=yd(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=yd(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),ei(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),ei(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),ei(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),ei(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),ei(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Cc.runKernel(yo,o,l)}}),Bg={kernelName:bo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;ei(md(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Od(i.shape,e,o,s,a),filter:()=>zg(i,e,o.shape,s,a)}}},Pg=Oc({sin_:function(e){const t={x:Dc(e,"x","sin")};return Cc.runKernel(su,t)}}),Wg={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(Tp(Pg(bh(n,"float32"))),e)}}},Vg=Oc({sinh_:function(e){const t={x:Dc(e,"x","sinh")};return Cc.runKernel(au,t)}}),Ug={kernelName:wo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(Vg(bh(n,"float32")),e)}}},Gg=Oc({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Dc(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Cc.runKernel(ko,s,a)}}),Hg={kernelName:ko,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=$p([s],r.rank);let n=Gg(e,s,a,!i);return null!=t&&(n=cf(n,t)),n}}}},jg={kernelName:Co,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;ei(md(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return ei(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),ei(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),ei(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ei(gd(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&ei(ii(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Sf(l.shape,e,u,s,a,r,i),filter:()=>Cf(l,e,u.shape,s,a,r,i)}}},Kg={kernelName:Ro,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Cc.runKernel(Ao,a,n),filter:()=>Cc.runKernel(_o,i,n)}}},qg={kernelName:Mo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Cc.runKernel(Oo,r)}}},Xg={kernelName:Lo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ap(rp(Tp(Sp(n))),2/Math.sqrt(Math.PI));return{x:()=>ap(e,r)}}},Yg={kernelName:Bo,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,n)}}},Jg={kernelName:Po,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>yd(e,n.shape)}}},Zg={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,rp(n))}}},Qg={kernelName:Ho,gradFunc:e=>({x:()=>uf(e)})},eb={kernelName:jo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{const t=Pd(e,bh(r,"float32")),a=Ud(n.shape,s);return a.length>0?yd(op(t,a),n.shape):t},b:()=>{let t=ap(e,bh(n,"float32"));const a=Ud(r.shape,s);a.length>0&&(t=yd(op(t,a),r.shape));const i=Sp(r);return Tp(Pd(t,bh(i,"float32")))}}}},tb=Oc({rsqrt_:function(e){const t={x:Dc(e,"x","rsqrt")};return Cc.runKernel(Ql,t)}}),nb={kernelName:Ko,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Zh(1):o,u=Ud(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=ip(s,a),d=ap(e,l),p=tb(td(i,Zh(r))),f=ap(ap(ap(p,p),p),Zh(-.5));return{x:()=>1===a.rank?yd(ap(ap(e,Kd(yd(p,[1,1,1,a.shape[0]]),c)),l),s.shape):yd(ap(ap(e,p),l),s.shape),mean:()=>{let e=ap(ap(p,Zh(-1)),d);return 1===a.rank&&(e=op(e,u)),yd(e,a.shape)},variance:()=>{let e=ap(ap(f,h),d);return 1===a.rank&&(e=op(e,u)),yd(e,a.shape)},scale:()=>{const t=ap(h,p);let n=ap(e,t);return 1===a.rank&&(n=op(n,u)),yd(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=op(t,u)),yd(t,a.shape)}}}},rb=Oc({unsortedSegmentSum_:function(e,t,n){const r=Dc(e,"x","unsortedSegmentSum"),s=Dc(t,"segmentIds","unsortedSegmentSum","int32");ei(ii(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Cc.runKernel(Tu,a,i)}}),sb={kernelName:qo,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=hi(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=ab(0,l),d=ab(l+1,l+1+c),p=ib([o,[n],u]),f=yd(e,p),m=yd(s,[n]),g=ib([[l],h,d]),b=cf(f,g);let y=rb(b,m,r.shape[i]);const x=Np(g);return y=cf(y,x),y},indices:()=>s}}};function ab(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ib(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ob={kernelName:Jo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>uf(n),b:()=>uf(r)}}},lb={kernelName:Zo,gradFunc:e=>({x:()=>bh(e,"float32")})},ub={kernelName:tl,gradFunc:e=>({x:()=>uf(e)})},cb={kernelName:nl,gradFunc:e=>({x:()=>uf(e)})},hb={kernelName:rl,gradFunc:e=>({x:()=>uf(e)})},db={kernelName:sl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Zd(r,0);return{x:()=>lf(a,e,ap(e,s))}}},pb={kernelName:ul,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,td(n,1))}}},fb={kernelName:ll,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,bh(n,"float32"))}}},mb={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=rp(r);return ip(e,ap(op(e,s,!0),t))}}}},gb=Oc({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Cc.runKernel(fl,o,l)}}),bb={kernelName:pl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>gb(r,s,e,a,i,o,l)}}};function yb(e,t,n,r){return t.rank<n.rank&&(t=yd(t,kp(t.shape,r))),e.rank<n.rank&&(e=yd(e,kp(e.shape,r))),{x:()=>ap(e,bh(Hd(n,t),e.dtype))}}const xb={kernelName:ml,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=yb(e,t[1],a,hi(s,a.shape));return{x:()=>i.x()}}},vb=Oc({less_:function(e,t){let n=Dc(e,"a","less"),r=Dc(t,"b","less");[n,r]=yc(n,r),Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(al,s)}}),wb={kernelName:gl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ap(e,bh(Qd(n,r),"float32")),b:()=>ap(e,bh(vb(n,r),"float32"))}}},kb=Oc({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Dc(e,"dy","maxPool3dGrad"),l=Dc(t,"input","maxPool3dGrad"),u=Dc(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=yd(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=yd(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=yd(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),ei(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),ei(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),ei(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&ei(ii(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:d},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=Cc.runKernel(vl,f,m);return p?yd(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Ib={kernelName:xl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>kb(e,r,s,a,i,o,l)}}},$b=Oc({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Dc(e,"dy","maxPoolGrad"),l=Dc(t,"input","maxPoolGrad"),u=Dc(n,"output","maxPoolGrad");ei(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),ei(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),ei(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&ei(ii(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Cc.runKernel(yl,c,h)}}),Nb={kernelName:bl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>$b(e,r,s,a,i,o)}}},Cb={kernelName:kl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=hi(s,r.shape),i=si(wp(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=yd(e,t);return Pd(ap(n,gp(r.shape,"float32")),i)}}}},Sb={kernelName:Il,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=yb(e,i,a,hi(s,a.shape));return{x:()=>o.x()}}},Eb={kernelName:$l,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ap(e,bh(jf(n,r),"float32")),b:()=>ap(e,bh(Zd(n,r),"float32"))}}},Tb={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Hp(e,a,r.shape)}}},Rb={kernelName:Cl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{const t=Ud(n.shape,s);return t.length>0?yd(op(e,t),n.shape):e},b:()=>{const t=ap(e,Tp(Yd(Pd(n,r)))),a=Ud(r.shape,s);return a.length>0?yd(op(t,a),r.shape):t}}}},Ab={kernelName:El,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{const t=ap(e,bh(r,"float32")),a=Ud(n.shape,s);return a.length>0?yd(op(t,a),n.shape):t},b:()=>{const t=ap(e,bh(n,"float32")),a=Ud(r.shape,s);return a.length>0?yd(op(t,a),r.shape):t}}}},_b={kernelName:Tl,gradFunc:e=>({x:()=>Tp(e)})},Fb={kernelName:Ml,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>mp(n.shape,"float32")}}},Db={kernelName:Dl,gradFunc:e=>({x:()=>uf(e)})},Mb={kernelName:Ol,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return af(e,r).map((e=>()=>e))}},Ob={kernelName:Ll,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Hp(e,a,r.shape)}}},Lb={kernelName:zl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Gd(a.shape,i.shape);return{a:()=>{const t=bh(i,"float32");let n=ap(e,ap(t,Yf(a,ip(t,Zh(1)))));const r=Ud(a.shape,o);return r.length>0&&(n=op(n,r)),yd(n,a.shape)},b:()=>{const t=Zd(a,0),n=lf(t,np(a),uf(a));let r=ap(e,ap(s,n));const l=Ud(i.shape,o);return l.length>0&&(r=op(r,l)),yd(r,i.shape)}}}},zb={kernelName:Bl,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Zd(n,0);return{x:()=>lf(s,e,ap(e,r)),alpha:()=>{let t=lf(s,uf(e),ap(e,n));const a=Ud(r.shape,e.shape);return a.length>0&&(t=op(t,a)),yd(t,r.shape)}}}},Bb={kernelName:Fo,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{const t=Pd(e,bh(r,"float32")),a=Ud(n.shape,s);return a.length>0?yd(op(t,a),n.shape):t},b:()=>{let t=ap(e,bh(n,"float32"));const a=Ud(r.shape,s);a.length>0&&(t=yd(op(t,a),r.shape));const i=Sp(r);return Tp(Pd(t,bh(i,"float32")))}}}},Pb={kernelName:Ul,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,Tp(Sp(n)))}}},Wb={kernelName:Yl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ap(jf(n,6),vf(n));return{x:()=>ap(e,bh(r,"float32"))}}},Vb={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,bh(vf(n),"float32"))}}},Ub={kernelName:Hl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yd(e,n.shape)}}},Gb={kernelName:ql,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Cc.runKernel(Xl,s,n)}}},Hb={kernelName:jl,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Cc.runKernel(Kl,s,n)}}},jb={kernelName:Jl,gradFunc:(e,t,n)=>{const{dims:r}=n,s=hi(r,e.shape);return{x:()=>Wp(e,s)}}},Kb={kernelName:Zl,gradFunc:e=>({x:()=>uf(e)})},qb={kernelName:Ql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Tp(Pd(e,ap(Yf(n,1.5),2)))}}},Xb=Oc({logicalNot_:function(e){const t={x:Dc(e,"x","logicalNot","bool")};return Cc.runKernel(hl,t)}}),Yb={kernelName:tu,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>bh(uf(n),"float32"),t:()=>ap(e,bh(n,e.dtype)),e:()=>ap(e,bh(Xb(n),e.dtype))}}},Jb={kernelName:nu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Zd(n,Zh(0)),r=Zh(Fm),s=Zh(Dm),a=ap(e,s),i=ap(ap(e,r),rp(bh(n,"float32")));return lf(t,a,i)}}}},Zb={kernelName:ou,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,ap(n,ip(Zh(1),n)))}}},Qb={kernelName:iu,gradFunc:e=>({x:()=>uf(e)})},ey=Oc({cos_:function(e){const t={x:Dc(e,"x","cos")};return Cc.runKernel(vo,t)}}),ty={kernelName:su,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(ey(bh(n,"float32")),e)}}},ny=Oc({cosh_:function(e){const t={x:Dc(e,"x","cosh")};return Cc.runKernel(wo,t)}}),ry={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(ny(bh(n,"float32")),e)}}},sy={kernelName:ru,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Ph(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Fp(e,u)}}},ay={kernelName:pu,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=ap(e,r);return{logits:()=>ip(a,ap(op(a,[s],!0),r))}}},iy={kernelName:lu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,Gp(n))}}},oy=Oc({batchToSpaceND_:function(e,t,n){const r=Dc(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));ei(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ei(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ei(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Cc.runKernel(ao,a,i)}}),ly={kernelName:hu,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>oy(e,r,s)}}},uy={kernelName:du,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Cd(e,r)}}},cy=[hg,dg,pg,fg,mg,gg,bg,yg,xg,vg,wg,kg,$g,Cg,Sg,Tg,Rg,Ag,_g,Fg,Dg,Mg,Lg,Og,Bg,Wg,Ug,Hg,jg,Kg,Bb,qg,Xg,Yg,Jg,Zg,eb,Qg,nb,sb,ob,lb,ub,cb,hb,db,pb,fb,mb,bb,xb,xb,wb,Ib,Nb,Cb,Sb,Eb,Tb,Rb,Ab,_b,Fb,Db,Mb,Ob,Ob,Lb,zb,Pb,Wb,Vb,Ub,Gb,Hb,jb,Kb,qb,Yb,Jb,Zb,Qb,ty,ry,sy,ay,iy,ly,ly,uy,uy,{kernelName:uu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,ap(Qp(bh(n,"float32")),2))}}},{kernelName:bu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zh(2);return{a:()=>ap(e,ap(s,ip(n,r))),b:()=>ap(e,ap(s,ip(r,n)))}}},{kernelName:yu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(e,ap(bh(n,"float32"),2))}}},{kernelName:Au,gradFunc:e=>({x:()=>uf(e)})},{kernelName:vu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Gd(n.shape,r.shape);return{a:()=>{let t=e;const r=Ud(n.shape,s);return r.length>0&&(t=op(t,r)),yd(t,n.shape)},b:()=>{let t=e;const n=Ud(r.shape,s);return n.length>0&&(t=op(t,n)),yd(Tp(t),r.shape)}}}},{kernelName:cu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;hi(a,r.shape).forEach((e=>{s[e]=1}));const i=yd(e,s),o=ap(i,gp(r.shape,"float32"));return{x:()=>o}}},{kernelName:wu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pd(e,Sp(ey(n)))}}},{kernelName:ku,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ap(ip(Zh(1),Sp(n)),e)}}},{kernelName:Iu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=uf(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=td(t,Hp(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=td(t,Hp(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=td(t,Hp(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=td(t,Hp(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Cu,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Np(s);return{x:()=>cf(e,a)}}},{kernelName:Eu,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>tf(e,s)}}},{kernelName:Tu,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=dp(t,uf(t)),r=Jd(e,n);let s=Qd(t,Zh(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=jd(s,e+1);s=up(s,gp(r.shape,"bool"));const i=uf(r);return lf(s,r,i)}(e,n)}}},{kernelName:Ru,gradFunc:e=>({x:()=>uf(e)})}];for(const e of cy)Vu(e);lc().prototype.abs=function(){return this.throwIfDisposed(),ed(this)};const hy=Oc({acos_:function(e){const t={x:Dc(e,"x","acos")};return Cc.runKernel(Wi,t)}});lc().prototype.acos=function(){return this.throwIfDisposed(),hy(this)};const dy=Oc({acosh_:function(e){const t={x:Dc(e,"x","acosh")};return Cc.runKernel(Vi,t)}});lc().prototype.acosh=function(){return this.throwIfDisposed(),dy(this)},lc().prototype.add=function(e){return this.throwIfDisposed(),td(this,e)},lc().prototype.all=function(e,t){return this.throwIfDisposed(),nd(this,e,t)},lc().prototype.any=function(e,t){return this.throwIfDisposed(),rd(this,e,t)},lc().prototype.argMax=function(e){return this.throwIfDisposed(),sd(this,e)};const py=Oc({argMin_:function(e,t=0){const n={x:Dc(e,"x","argMin")},r={axis:t};return Cc.runKernel(qi,n,r)}});lc().prototype.argMin=function(e){return this.throwIfDisposed(),py(this,e)},lc().prototype.asScalar=function(){return this.throwIfDisposed(),ei(1===this.size,(()=>"The array must have only 1 element.")),yd(this,[])},lc().prototype.asType=function(e){return this.throwIfDisposed(),bh(this,e)},lc().prototype.as1D=function(){return this.throwIfDisposed(),yd(this,[this.size])},lc().prototype.as2D=function(e,t){return this.throwIfDisposed(),yd(this,[e,t])},lc().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),yd(this,[e,t,n])},lc().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),yd(this,[e,t,n,r])},lc().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),yd(this,[e,t,n,r,s])};const fy=Oc({asin_:function(e){const t={x:Dc(e,"x","asin")};return Cc.runKernel(Xi,t)}});lc().prototype.asin=function(){return this.throwIfDisposed(),fy(this)};const my=Oc({asinh_:function(e){const t={x:Dc(e,"x","asinh")};return Cc.runKernel(Yi,t)}});lc().prototype.asinh=function(){return this.throwIfDisposed(),my(this)};const gy=Oc({atan_:function(e){const t={x:Dc(e,"x","atan")};return Cc.runKernel(Ji,t)}});lc().prototype.atan=function(){return this.throwIfDisposed(),gy(this)};const by=Oc({atan2_:function(e,t){let n=Dc(e,"a","atan2"),r=Dc(t,"b","atan2");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(Qi,s)}});lc().prototype.atan2=function(e){return this.throwIfDisposed(),by(this,e)};const yy=Oc({atanh_:function(e){const t={x:Dc(e,"x","atanh")};return Cc.runKernel(Zi,t)}});lc().prototype.atanh=function(){return this.throwIfDisposed(),yy(this)},lc().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),xd(this,e,t,n,r)},lc().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),oy(this,e,t)},lc().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),wd(this,e,t,n,r,s)},lc().prototype.broadcastTo=function(e){return this.throwIfDisposed(),of(this,e)},lc().prototype.cast=function(e){return this.throwIfDisposed(),bh(this,e)};const xy=Oc({ceil_:function(e){const t={x:Dc(e,"x","ceil")};return Cc.runKernel(lo,t)}});lc().prototype.ceil=function(){return this.throwIfDisposed(),xy(this)},lc().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Nd(this,e,t)},lc().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof oc&&(e=[e]),Cd([this,...e],t)},lc().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),_d(this,e,t,n,r,s,a)},lc().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),Dd(this,e,t,n,r,s)},lc().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ad(this,e,t,n,r,s,a)},lc().prototype.cos=function(){return this.throwIfDisposed(),ey(this)},lc().prototype.cosh=function(){return this.throwIfDisposed(),ny(this)},lc().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Gg(this,e,t,n)};const vy=Oc({depthToSpace_:function(e,t,n="NHWC"){const r=Dc(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];ei(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ei(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ei(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Cc.runKernel(No,o,l)}});lc().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),vy(this,e,t)},lc().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),zd(this,e,t,n,r,s,a)};const wy=Oc({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Dc(e,"x","dilation2d"),o=Dc(t,"filter","dilation2d");ei(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),ei(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),ei("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=yd(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Cc.runKernel(Ro,c,h);return u?yd(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});lc().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),wy(this,e,t,n,r,s)};const ky=Oc({divNoNan_:function(e,t){let n=Dc(e,"a","div"),r=Dc(t,"b","div");[n,r]=yc(n,r);const s=Pd(n,r),a=uf(s),i=Hd(r,a);return lf(i,a,s)}});lc().prototype.divNoNan=function(e){return this.throwIfDisposed(),ky(this,e)},lc().prototype.div=function(e){return this.throwIfDisposed(),Pd(this,e)};const Iy=Oc({dot_:function(e,t){const n=Dc(e,"t1","dot"),r=Dc(t,"t2","dot");ei(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(ei(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=yd(n,[1,-1]),t=yd(r,[-1,1]),s=fp(e,t);return yd(s,[])}if(1===n.rank&&2===r.rank){const e=yd(n,[1,-1]),t=yd(r,[r.shape[0],r.shape[1]]),s=fp(e,t);return yd(s,[s.size])}if(2===n.rank&&1===r.rank){const e=yd(r,[-1,1]),t=fp(n,e);return yd(t,[t.size])}{const e=yd(r,[r.shape[0],r.shape[1]]);return fp(n,e)}}});lc().prototype.dot=function(e){return this.throwIfDisposed(),Iy(this,e)},lc().prototype.elu=function(){return this.throwIfDisposed(),Wd(this)},lc().prototype.equal=function(e){return this.throwIfDisposed(),Hd(this,e)};const $y=Oc({erf_:function(e){let t=Dc(e,"x","erf");ei("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=bh(t,"float32"));const n={x:t};return Cc.runKernel(Lo,n)}});lc().prototype.erf=function(){return this.throwIfDisposed(),$y(this)},lc().prototype.exp=function(){return this.throwIfDisposed(),rp(this)},lc().prototype.expandDims=function(e){return this.throwIfDisposed(),jd(this,e)};const Ny=Oc({expm1_:function(e){const t={x:Dc(e,"x","expm1")};return Cc.runKernel(Wo,t)}});lc().prototype.expm1=function(){return this.throwIfDisposed(),Ny(this)},lc().prototype.fft=function(){return this.throwIfDisposed(),ff(this)},lc().prototype.flatten=function(){return this.throwIfDisposed(),yd(this,[this.size])},lc().prototype.floor=function(){return this.throwIfDisposed(),Yd(this)},lc().prototype.floorDiv=function(e){return this.throwIfDisposed(),Bd(this,e)},lc().prototype.gather=function(e,t){return this.throwIfDisposed(),Jd(this,e,t)},lc().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Qd(this,e)},lc().prototype.greater=function(e){return this.throwIfDisposed(),Zd(this,e)},lc().prototype.ifft=function(){return this.throwIfDisposed(),gf(this)},lc().prototype.irfft=function(){return this.throwIfDisposed(),bf(this)};const Cy=Oc({isFinite_:function(e){const t={x:Dc(e,"x","isFinite")};return Cc.runKernel(tl,t)}});lc().prototype.isFinite=function(){return this.throwIfDisposed(),Cy(this)};const Sy=Oc({isInf_:function(e){const t={x:Dc(e,"x","isInf")};return Cc.runKernel(nl,t)}});lc().prototype.isInf=function(){return this.throwIfDisposed(),Sy(this)};const Ey=Oc({isNaN_:function(e){const t={x:Dc(e,"x","isNaN")};return Cc.runKernel(rl,t)}});lc().prototype.isNaN=function(){return this.throwIfDisposed(),Ey(this)},lc().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ep(this,e)},lc().prototype.lessEqual=function(e){return this.throwIfDisposed(),jf(this,e)},lc().prototype.less=function(e){return this.throwIfDisposed(),vb(this,e)};const Ty=Oc({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Dc(e,"x","localResponseNormalization");ei(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),ei(ii(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=yd(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Cc.runKernel(pl,l,u);return o?yd(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});lc().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ty(this,e,t,n,r)};const Ry=Oc({logSigmoid_:function(e){const t=Dc(e,"x","logSigmoid");return Jh((e=>({value:Tp(Jp(Tp(e))),gradFunc:t=>ap(t,Gp(Tp(e)))})))(t)}});lc().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ry(this)},lc().prototype.logSoftmax=function(e){return this.throwIfDisposed(),lp(this,e)},lc().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),im(this,e,t)},lc().prototype.log=function(){return this.throwIfDisposed(),np(this)},lc().prototype.log1p=function(){return this.throwIfDisposed(),am(this)},lc().prototype.logicalAnd=function(e){return this.throwIfDisposed(),up(this,e)},lc().prototype.logicalNot=function(){return this.throwIfDisposed(),Xb(this)};const Ay=Oc({logicalOr_:function(e,t){const n=Dc(e,"a","logicalOr","bool"),r=Dc(t,"b","logicalOr","bool");Gd(n.shape,r.shape);const s={a:n,b:r};return Cc.runKernel(dl,s)}});lc().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ay(this,e)};const _y=Oc({logicalXor_:function(e,t){const n=Dc(e,"a","logicalXor","bool"),r=Dc(t,"b","logicalXor","bool");return Gd(n.shape,r.shape),up(Ay(e,t),Xb(up(e,t)))}});lc().prototype.logicalXor=function(e){return this.throwIfDisposed(),_y(this,e)},lc().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),fp(this,e,t,n)},lc().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),cp(this,e,t,n,r)},lc().prototype.max=function(e,t){return this.throwIfDisposed(),sp(this,e,t)},lc().prototype.maximum=function(e){return this.throwIfDisposed(),dp(this,e)},lc().prototype.mean=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},lc().prototype.min=function(e,t){return this.throwIfDisposed(),bp(this,e,t)},lc().prototype.minimum=function(e){return this.throwIfDisposed(),yp(this,e)};const Fy=Oc({mirrorPad_:function(e,t,n){ei("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Dc(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ei(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ei(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ei(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Cc.runKernel(Nl,i,a)}});lc().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Fy(this,e,t)};const Dy=Oc({mod_:function(e,t){let n=Dc(e,"a","mod"),r=Dc(t,"b","mod");[n,r]=yc(n,r);const s={a:n,b:r};return Cc.runKernel(Cl,s)}});lc().prototype.mod=function(e){return this.throwIfDisposed(),Dy(this,e)},lc().prototype.mul=function(e){return this.throwIfDisposed(),ap(this,e)},lc().prototype.neg=function(){return this.throwIfDisposed(),Tp(this)},lc().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Zf(this,e,t,n)},lc().prototype.notEqual=function(e){return this.throwIfDisposed(),Rp(this,e)},lc().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ap(this,e,t,n)},lc().prototype.onesLike=function(){return this.throwIfDisposed(),_p(this)},lc().prototype.pad=function(e,t){return this.throwIfDisposed(),Fp(this,e,t)};const My=Oc({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=Dc(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=yd(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ei(gd(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=id(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),m=d?r:"valid",g=d?o:Eg(o,c,p),b=("avg"===n?()=>xd(g,t,a,m):()=>cp(g,t,a,m))(),y=d?b:oy(b,c,f);return l?yd(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});lc().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),My(this,e,t,n,r,s)},lc().prototype.pow=function(e){return this.throwIfDisposed(),Yf(this,e)},lc().prototype.prelu=function(e){return this.throwIfDisposed(),Dp(this,e)};const Oy=Oc({prod_:function(e,t=null,n=!1){let r=Dc(e,"x","prod");"bool"===r.dtype&&(r=bh(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Cc.runKernel(Pl,s,a)}});lc().prototype.prod=function(e,t){return this.throwIfDisposed(),Oy(this,e,t)};const Ly=Oc({reciprocal_:function(e){const t={x:Dc(e,"x","reciprocal")};return Cc.runKernel(Ul,t)}});lc().prototype.reciprocal=function(){return this.throwIfDisposed(),Ly(this)},lc().prototype.relu=function(){return this.throwIfDisposed(),Pp(this)},lc().prototype.relu6=function(){return this.throwIfDisposed(),xf(this)},lc().prototype.reshapeAs=function(e){return this.throwIfDisposed(),yd(this,e.shape)},lc().prototype.reshape=function(e){return this.throwIfDisposed(),yd(this,e)},lc().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Uf(this,e,t,n)},lc().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Gf(this,e,t,n)},lc().prototype.reverse=function(e){return this.throwIfDisposed(),Wp(this,e)},lc().prototype.rfft=function(){return this.throwIfDisposed(),mf(this)},lc().prototype.round=function(){return this.throwIfDisposed(),Kf(this)},lc().prototype.rsqrt=function(){return this.throwIfDisposed(),tb(this)},lc().prototype.selu=function(){return this.throwIfDisposed(),Vp(this)},lc().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Up(this,e,t,n,r,s,a)},lc().prototype.sigmoid=function(){return this.throwIfDisposed(),Gp(this)};const zy=Oc({sign_:function(e){const t={x:Dc(e,"x","sign")};return Cc.runKernel(iu,t)}});lc().prototype.sign=function(){return this.throwIfDisposed(),zy(this)},lc().prototype.sin=function(){return this.throwIfDisposed(),Pg(this)},lc().prototype.sinh=function(){return this.throwIfDisposed(),Vg(this)},lc().prototype.slice=function(e,t){return this.throwIfDisposed(),Hp(this,e,t)},lc().prototype.softmax=function(e){return this.throwIfDisposed(),Yp(this,e)},lc().prototype.softplus=function(){return this.throwIfDisposed(),Jp(this)},lc().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Eg(this,e,t)},lc().prototype.split=function(e,t){return this.throwIfDisposed(),Zp(this,e,t)},lc().prototype.sqrt=function(){return this.throwIfDisposed(),Qp(this)},lc().prototype.square=function(){return this.throwIfDisposed(),Sp(this)},lc().prototype.squaredDifference=function(e){return this.throwIfDisposed(),sm(this,e)},lc().prototype.squeeze=function(e){return this.throwIfDisposed(),ef(this,e)},lc().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof oc?[this,e]:[this,...e];return tf(n,t)},lc().prototype.step=function(e){return this.throwIfDisposed(),vf(this,e)};const By=Oc({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Dc(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Cc.runKernel(xu,u,c)}});lc().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),By(this,e,t,n,r,s,a,i,o)},lc().prototype.sub=function(e){return this.throwIfDisposed(),ip(this,e)},lc().prototype.sum=function(e,t){return this.throwIfDisposed(),op(this,e,t)};const Py=Oc({tan_:function(e){const t={x:Dc(e,"x","tan")};return Cc.runKernel(wu,t)}});lc().prototype.tan=function(){return this.throwIfDisposed(),Py(this)},lc().prototype.tanh=function(){return this.throwIfDisposed(),nf(this)},lc().prototype.tile=function(e){return this.throwIfDisposed(),Kd(this,e)},lc().prototype.toBool=function(){return this.throwIfDisposed(),bh(this,"bool")},lc().prototype.toFloat=function(){return this.throwIfDisposed(),bh(this,"float32")},lc().prototype.toInt=function(){return this.throwIfDisposed(),bh(this,"int32")};const Wy=Oc({topk_:function(e,t=1,n=!0){const r=Dc(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Cc.runKernel($u,a,i);return{values:o,indices:l}}});lc().prototype.topk=function(e,t){return this.throwIfDisposed(),Wy(this,e,t)},lc().prototype.transpose=function(e){return this.throwIfDisposed(),cf(this,e)};const Vy=Oc({unique_:function(e,t=0){const n=Dc(e,"x","unique","string_or_numeric");ei(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Cc.runKernel(Su,r,s);return{values:a,indices:i}}});let Uy;function Gy(){return null==Uy&&(Uy=Cc.backend.epsilon()),Uy}lc().prototype.unique=function(e){return this.throwIfDisposed(),Vy(this,e)},lc().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),rb(this,e,t)},lc().prototype.unstack=function(e){return this.throwIfDisposed(),af(this,e)},lc().prototype.where=function(e,t){return this.throwIfDisposed(),lf(e,this,t)},lc().prototype.zerosLike=function(){return this.throwIfDisposed(),uf(this)};class Hy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Hy.prototype)}}class jy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jy.prototype)}}class Ky extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ky.prototype)}}class qy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qy.prototype)}}class Xy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xy.prototype)}}function Yy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Jy(e,t){if(!e)throw new Xy(t)}function Zy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Qy(e){return 1===e.length?e[0]:e}function ex(e){return Array.isArray(e)?e:[e]}function tx(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function nx(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let rx={};function sx(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function ax(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>ax(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?ax(t):e[n]=t.value)}}}function ix(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in rx)a=rx[s];else if(a=t[s],null==a)throw new Ky(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Ky(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in rx?[o,l]=rx.className:i in t&&([o,l]=t[i]),null==o)throw new Ky(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(rx))e[t]=rx[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},rx);for(const e of Object.keys(n))rx[e]=n[e];ax(a.config);const r=l(o,a.config,n,s);return rx=Object.assign({},t),r}{const e=Object.assign({},rx);for(const e of Object.keys(n))rx[e]=n[e];const t=new o(a.config);return rx=Object.assign({},e),t}}}function ox(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function lx(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ux(e){if(null==e)throw new Ky(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function cx(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Ky(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function hx(e,t,n=0,r=1/0){return Jy(n>=0),Jy(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function dx(e,t){Array.isArray(e)?(ei(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>dx(e,`element ${n+1} of ${t}`)))):ei(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${px(e)}.`))}function px(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>px(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function fx(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function mx(e,t){return Kh((()=>Qp(op(ap(e,e),t,!0))))}class gx extends Vh{getConfig(){return{}}}class bx extends gx{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Kh((()=>{const t=mx(e,this.axis),n=Nd(t,0,this.maxValue);return ap(e,Pd(n,td(Gy(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}bx.className="MaxNorm",Gh(bx);class yx extends gx{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Kh((()=>Pd(e,td(Gy(),mx(e,this.axis)))))}getConfig(){return{axis:this.axis}}}yx.className="UnitNorm",Gh(yx);class xx extends gx{apply(e){return Pp(e)}}xx.className="NonNeg",Gh(xx);class vx extends gx{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Kh((()=>{const t=mx(e,this.axis),n=td(ap(this.rate,Nd(t,this.minValue,this.maxValue)),ap(1-this.rate,t));return ap(e,Pd(n,td(Gy(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}vx.className="MinMaxNorm",Gh(vx);const wx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function kx(e){return sx(e)}function Ix(e,t={}){return ix(e,Uh.getMap().classNameMap,t,"constraint")}function $x(e){return null==e?null:"string"==typeof e?Ix({className:e in wx?wx[e]:e,config:{}}):e instanceof gx?e:Ix(e)}const Nx=["channelsFirst","channelsLast"],Cx=["nearest","bilinear"],Sx=["valid","same","causal"],Ex=["max","avg"],Tx=["sum","mul","concat","ave"],Rx=new Map;function Ax(e){cx(Nx,"DataFormat",e)}function _x(e){cx(Sx,"PaddingMode",e)}function Fx(e){cx(Ex,"PoolMode",e)}const Dx=[];function Mx(e,t){Dx.push(e);try{const e=t();return Dx.pop(),e}catch(e){throw Dx.pop(),e}}function Ox(e){if(!Bx(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Dx.length?"":Dx.join("/")+"/")+e}function Lx(e){if(!Bx(e))throw new Error("Not a valid tensor name: '"+e+"'");Rx.has(e)||Rx.set(e,0);const t=Rx.get(e);if(Rx.set(e,Rx.get(e)+1),t>0){const n=`${e}_${t}`;return Rx.set(n,1),n}return e}const zx=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Bx(e){return!!e.match(zx)}function Px(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Wx(e){return rf(e=Array.isArray(e)?new Float32Array(e):e)}function Vx(e){return bp(Wx(e)).dataSync()[0]}function Ux(e){return sp(Wx(e)).dataSync()[0]}function Gx(e,t){if(t<e)throw new Ky(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Hx(e,t){return e.asType(t)}function jx(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Kx(e,t,n){return Kh((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return Kp(e,[t,0],[n,e.shape[1]]);case 3:return qp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Xp(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Hp(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Hp(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Ky(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function qx(e,t,n){return Kh((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:return Kp(e,[0,t],[e.shape[0],n]);case 3:return qp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Xp(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Xx(e,t,n,r){return Kh((()=>{switch(e.rank){case 1:return jp(e,t,n);case 2:switch(r){case 1:return Kx(e,t,n);case 2:return qx(e,t,n);default:throw new Ky(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Kx(e,t,n);case 2:return qp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qx(e,t,n);default:throw new Ky(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Kx(e,t,n);case 2:return Xp(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Xp(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qx(e,t,n);default:throw new Ky(`The axis is not within the rank of the tensor ${r}`)}default:throw new Ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Yx(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Cd(e,t)}function Jx(e,t){switch(e.rank){case 1:return Sd([e,t]);case 2:return Ed([e,t],0);case 3:return Td([e,t],0);case 4:return Rd([e,t],0);default:throw new Ky(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Zx(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Ky(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Kd(e,t)}function Qx(e,t=0,n=1,r,s){return zp(e,t,n,r,s)}function ev(e,t,n,r){if(e.rank<2||t.rank<2)throw new qy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new qy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Ef({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?rv(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return Ef({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?rv(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function tv(e,t,n){return Kh((()=>(t=Array.isArray(t)?rf(t,"int32"):t.toInt(),Jd(e,t,n))))}function nv(e){return ap(e,e)}function rv(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Ky(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Ky(`Unsupported input rank by biasAdd: ${t.rank}`)}function sv(e,t,n){return Kh((()=>(null==n&&(n="channelsLast"),Ax(n),e.add(rv(e.rank,t,n)))))}function av(e,t,n,r){return Kh((()=>hf(e,t,n,r)))}function iv(e,t,n=!1){return n?e():t()}const ov=["fanIn","fanOut","fanAvg"],lv=["normal","uniform","truncatedNormal"];class uv extends Vh{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class cv extends uv{apply(e,t){return mp(e,t)}}cv.className="Zeros",Gh(cv);class hv extends uv{apply(e,t){return gp(e,t)}}hv.className="Ones",Gh(hv);class dv extends uv{constructor(e){if(super(),"object"!=typeof e)throw new Ky(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Ky(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Kh((()=>ap(Zh(this.value),gp(e,t))))}getConfig(){return{value:this.value}}}dv.className="Constant",Gh(dv);class pv extends uv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Bp(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}pv.className="RandomUniform",Gh(pv);class fv extends uv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qy(`randomNormal does not support dType ${t}.`);return Qx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fv.className="RandomNormal",Gh(fv);class mv extends uv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qy(`truncatedNormal does not support dType ${t}.`);return sf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}mv.className="TruncatedNormal",Gh(mv);class gv extends uv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Kh((()=>{if(2!==e.length||e[0]!==e[1])throw new Ky("Identity matrix initializer can only be used for 2D square matrices.");return ap(this.gain,qd(e[0]))}))}getConfig(){return{gain:this.gain}}}gv.className="Identity",Gh(gv);class bv extends uv{constructor(e){if(super(),e.scale<0)throw new Ky(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){cx(ov,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){cx(lv,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Ax(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Px(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Px(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Px(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new qy(`${this.getClassName()} does not support dType ${t}.`);return sf(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Bp(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}bv.className="VarianceScaling",Gh(bv);class yv extends bv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return bv.className}}yv.className="GlorotUniform",Gh(yv);class xv extends bv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return bv.className}}xv.className="GlorotNormal",Gh(xv);class vv extends bv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return bv.className}}vv.className="HeNormal",Gh(vv);class wv extends bv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return bv.className}}wv.className="HeUniform",Gh(wv);class kv extends bv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return bv.className}}kv.className="LeCunNormal",Gh(kv);class Iv extends bv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return bv.className}}Iv.className="LeCunNormal",Gh(Iv);class $v extends uv{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new qy("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Kh((()=>{if(e.length<2)throw new qy("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Qx(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=om.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),ap(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}$v.className="Orthogonal",Gh($v);const Nv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Cv(e,t={}){return ix(e,Uh.getMap().classNameMap,t,"initializer")}function Sv(e){return sx(e)}function Ev(e){if("string"==typeof e){const t=e in Nv?Nv[e]:e;if("GlorotNormal"===t)return new xv;if("GlorotUniform"===t)return new yv;if("HeNormal"===t)return new vv;if("HeUniform"===t)return new wv;if("LeCunNormal"===t)return new kv;if("LeCunUniform"===t)return new Iv;{const e={};return e.className=t,e.config={},Cv(e)}}return e instanceof uv?e:Cv(e)}let Tv=0;function Rv(){return Tv++}const Av={};function _v(e=""){return e in Av||(Av[e]=0),Av[e]+=1,e+Av[e].toString()}function Fv(e){return Array.isArray(e)&&Array.isArray(e[0])}function Dv(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Mv(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Ky(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ov(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Ky(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Lv(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class zv{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Rv(),n=null==n?"Variable":n,this.originalName=Ox(n),this.name=Lx(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return Cc.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Bv(e){return e.map((e=>e.read()))}function Pv(e){e.forEach((e=>{e[0].write(e[1])}))}class Wv{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Vv{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Rv(),null!=a&&(this.originalName=Ox(a),this.name=Lx(this.originalName)),this.rank=t.length}}let Uv=0;class Gv{constructor(e,t){this.callArgs=t,this.id=Uv++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Hv=0;class jv extends Vh{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Hv++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=tx(e)+"_"+_v(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new jy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Ky(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Qy(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Qy(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Hy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Hy(`Layer ${this.name} is not connected, no input to return.`);return Qy(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Hy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Hy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Qy(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ex(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ex(this.inputSpec);if(e.length!==t.length)throw new Ky(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Ky(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Ky(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Ky(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Ky(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Ky(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Ky(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ex(e);let r=!0;for(const e of n)if(!(e instanceof Vv)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Vv){s=!1;break}if(r===s)throw new Ky("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mx(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ex(e))t.push(n.shape);this.build(Qy(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=ex(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Qy(a),null!=this.activityRegularizer)throw new qy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ex(e);const t=[];for(const n of e)t.push(n.shape);return Qy(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Vv(a,n,this,ex(e),t,this.name,r))):new Vv(a,r,this,ex(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new qy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Hy(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Hy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new jy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Lv(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Bv(e?this.trainableWeights:this.weights)}setWeights(e){Kh((()=>{const t=this.weights;if(t.length!==e.length)throw new Ky(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Bv(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!ai(a.shape,o.shape))throw new Ky(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Pv(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Ky(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Ev("zeros"));const o=r.apply(t,n),l=new zv(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ex(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=ex(e);t=ex(t),n=ex(n),r=ex(r),s=Dv(s),a=Dv(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Gv({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Kv(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Kv(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class qv extends jv{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:_v("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Ky("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Ky("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Ky("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Vv(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Gv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Ky(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Xv(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];qh(r)}}function Yv(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Jv;qv.className="InputLayer",Gh(qv),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Jv||(Jv={}));class Zv{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Qv{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class ew extends Zv{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Kh((()=>td(this.totals[e],ap(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Kh((()=>{const n=ap(Pd(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Xh(t[e])})))}}class tw extends Zv{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class nw extends Zv{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");xi(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=ju();return(...s)=>{const a=ju();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Xv(n),r.push(this.yield(e,t,n))),r.push(ym()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Xv(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Xv(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(ym()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Xv(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Xv(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(ym()):xi(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Xv(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Xv(e),await this.trainEnd(e))}}function rw(e,t){return null==e&&(e={}),e instanceof Zv?[e]:Array.isArray(e)&&e[0]instanceof Zv?e:ex(e).map((e=>new nw(e,t)))}class sw{constructor(){}static registerCallbackConstructor(e,t){ei(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),sw.checkForDuplicate(t),null==sw.constructors[e]&&(sw.constructors[e]=[]),sw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in sw.constructors)sw.constructors[+t].forEach((t=>{if(t===e)throw new Ky("Duplicate callback constructor.")}))}static clear(){sw.constructors={}}static createCallbacks(e){const t=[];for(const n in sw.constructors){const r=+n;e>=r&&t.push(...sw.constructors[r])}return t.map((e=>new e))}}function aw(e,t,n,r,s,a,i,o,l){const u=new tw,c=[new ew,...sw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Qv(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function iw(e,t={},n=!1){return ix(e,Uh.getMap().classNameMap,t,"layer",n)}function ow(e,t){return Kh((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=op(nv(e),t,!0),r=Xd(n.shape,Gy()),s=Qp(dp(n,r));return Pd(e,s)}))}function lw(e,t){return Kh((()=>pp(nv(ip(t,e)),-1)))}function uw(e,t){return Kh((()=>pp(ed(ip(t,e)),-1)))}function cw(e,t){return Kh((()=>{const n=ip(e,t),r=Nd(ed(e),Gy(),Number.MAX_VALUE),s=ed(Pd(n,r));return ap(100,pp(s,-1))}))}function hw(e,t,n=!1){return Kh((()=>{if(n)t=Yp(t);else{const e=op(t,t.shape.length-1,!0);t=Pd(t,e)}return t=Nd(t,Gy(),1-Gy()),Tp(op(ap(e.toFloat(),np(t)),t.shape.length-1))}))}function dw(e,t,n=!1){return Kh((()=>{const r=Yd(function(e){const t=[Px(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=Nd(t,Gy(),1-Gy())).shape;return hw(Ap(r,s[s.length-1]).reshape(s),t,n)}))}function pw(e,t){return Kh((()=>{let n;return n=Nd(t,Gy(),1-Gy()),n=np(Pd(n,ip(1,n))),pp(function(e,t){if(!ai(e.shape,t.shape))throw new Ky(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Kh((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function fw(e,t){return Kh((()=>{const n=ow(e,-1),r=ow(t,-1),s=ap(n,r);return Tp(op(s,-1))}))}sw.constructors={};const mw={meanSquaredError:lw,meanAbsoluteError:uw,meanAbsolutePercentageError:cw,meanSquaredLogarithmicError:function(e,t){return Kh((()=>{const n=Nd(t,Gy(),Number.MAX_VALUE),r=np(td(1,n)),s=Nd(e,Gy(),Number.MAX_VALUE),a=np(td(1,s));return pp(nv(ip(r,a)),-1)}))},squaredHinge:function(e,t){return Kh((()=>{const n=dp(0,ip(1,ap(e,t)));return pp(nv(n),-1)}))},hinge:function(e,t){return Kh((()=>{const n=dp(0,ip(1,ap(e,t)));return pp(n,-1)}))},categoricalHinge:function(e,t){return Kh((()=>{const n=op(ap(e,t),-1),r=sp(ap(ip(1,e),t),-1);return dp(0,td(1,ip(r,n)))}))},logcosh:function(e,t){return Kh((()=>{const n=Math.log(2),r=ip(t,e),s=ip(td(r,Jp(ap(-2,r))),n);return pp(s,-1)}))},categoricalCrossentropy:hw,sparseCategoricalCrossentropy:dw,binaryCrossentropy:pw,kullbackLeiblerDivergence:function(e,t){return Kh((()=>{const n=Nd(e,Gy(),1),r=Nd(t,Gy(),1);return op(ap(e,np(Pd(n,r))),-1)}))},poisson:function(e,t){return Kh((()=>{const n=np(td(Gy(),t));return pp(ip(t,ap(e,n)),-1)}))},cosineProximity:fw};function gw(e){if("string"==typeof e){if(e in mw)return mw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Ky(t)}return e}function bw(e,t){return Kh((()=>{const n=ap(.5,_p(t)),r=Hx(Zd(t,n),e.dtype);return pp(Hd(e,r),-1)}))}function yw(e,t){return Kh((()=>Hx(Hd(sd(e,-1),sd(t,-1)),"float32")))}function xw(e,t){return pw(e,t)}function vw(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Hd(e,t).asType("float32")}const ww=hw,kw=dw,Iw={binaryAccuracy:bw,categoricalAccuracy:yw,precision:function(e,t){return Kh((()=>{const n=function(e,t){return Kh((()=>up(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return Kh((()=>up(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return lf(Zd(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:ww,sparseCategoricalCrossentropy:kw,mse:lw,MSE:lw,mae:uw,MAE:uw,mape:cw,MAPE:cw,cosine:fw};function $w(e){if("string"==typeof e&&e in Iw)return Iw[e];if("string"!=typeof e&&null!=e)return e;throw new Ky(`Unknown metric ${e}`)}function Nw(e){if(Jy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(mw))if(mw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Iw))if(Iw[n]===e){t=n;break}return void 0!==t?t:e.name}}function Cw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Sw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Sw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Sw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Sw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Ew(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Tw(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Ew([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Rw(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];Ew([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)Ew(["","","",a[e]],t,r)}function Aw(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function _w(e,t){if(null===e)return null;if("string"==typeof e)return nx(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Aw(t,s,r)?n.push(r):n.push(_w(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=nx(n);t[e]=_w(r,e)}}return t}}function Fw(e,t){if(null==e)return null;if("string"==typeof e)return tx(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Aw(t,s,r)?n.push(r):n.push(Fw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[tx(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Fw(r,n):r}return t}}class Dw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Dw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Ky(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return bh(t,e.dtype)}catch(n){throw new Ky(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Vv){if(null==this.id2Value[e.id])throw new Ky(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Vv){if(null==this.id2Value[e.id])throw new Ky(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&qh(this.id2Mask)}}const Mw={},Ow={};function Lw(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Mw[c]){const e=function(e,t){ei(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Bw(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Bw(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:zw(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Mw[c]=h,Ow[c]=d}h=Mw[c],d={},s||Object.assign(d,Ow[c]);const p=new Dw(t);for(let e=0;e<h.length;++e){if(null!=r){const e=jh().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof qv)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ex(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Pw(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||qh(f)}return p.disposeMasks(),a?l:l[0]}function zw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Bw(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Pw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Ww extends jv{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=_v(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],lx(this.inputs).length!==this.inputs.length)throw new Ky(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);lx(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Jy(0===n,"input layer has >1 nodes"),Jy(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof qv))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new jy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Ww.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ox);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Ww&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ox);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new jy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new jy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Gv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ky("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Ky(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Ky(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Ky(`${e.length} of ${r} weights are not set: ${e}`)}Pv(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.6.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Fw(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Kh((()=>{e=ex(e);const n=new Dw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Lw(this.outputs,n,t)}))}computeMask(e,t){return Kh((()=>{let n;return e=ex(e),n=null==t?Yy(null,e.length):ex(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Dv(e);if(t.length!==this.inputLayers.length)throw new Ky(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ox);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=Dv(t.computeOutputShape(Qy(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Jy(t in n),s.push(n[t])}return Qy(s)}runInternalGraph(e,t){null==t&&(t=Yy(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ox);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=ex(t.call(e,u)),l=ex(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ex(t.call(r,u)),l=ex(t.computeMask(r,i));if(t.activityRegularizer)throw new qy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Jy(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Ww?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=Ww.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Ky(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Ky("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Ky(`No such layer: ${e}`)}calculateLosses(){return Kh((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Ww.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=Ww.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Ww.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=Ww.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=Ww.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Qy(n),r)}function l(e){const n=e.name,a=iw(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Ky(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!ux(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Jy(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Jy(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Ky("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Kh((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Vw(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Uw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Kh((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());qh(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),rf(s,"float32")}return null}function Gw(e,t){return ap(e,t)}function Hw(e,t){let n,r;const s=t;n=s.xs,r=s.ys,ei(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=jw("input",e.inputNames,n),i=jw("output",e.outputNames,r),o=a[0].shape[0];ei(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),ei(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)ei(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)ei(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function jw(e,t,n){if(n instanceof oc)return[n];if(Array.isArray(n))return ei(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Ky(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function Kw(e){return"function"==typeof e.iterator}function qw(e){ei(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Xw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Kx(e,t,n-t))):Kx(e,t,n-t)}function Yw(e,t){return Kh((()=>null==e?null:Array.isArray(e)?e.map((e=>Yw(e,t))):tv(e,"int32"===t.dtype?t:t.toInt())))}function Jw(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Zw(e){const t=[];e instanceof oc&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(jx(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Qw(e,t){if(null==e)return;const n=[];if(t instanceof oc)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof oc)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function ek(e){return Array.isArray(e)}function tk(e){return!function(e){return e instanceof oc}(e)&&!ek(e)}function nk(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(ek(e)&&e.length>0)t=!0;else if(tk(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Ky(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(tk(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Ky(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(ek(e)){if((e=e).length!==t.length)throw new Ky(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Ky(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Zw(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Ky(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Ky(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function rk(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Ky(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Ky(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Ky(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Ky(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class sk extends Ww{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Ky("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Ew(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Tw(o[e],n,r):Rw(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Lv(e.collectedTrainableWeights):Lv(e.trainableWeights),t}(e),u=Lv(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>gm.adagrad(.01),Adadelta:()=>gm.adadelta(1,.95,Gy()),Adam:()=>gm.adam(.001,.9,.999,Gy()),Adamax:()=>gm.adamax(.002,.9,.999,Gy(),0),RMSProp:()=>gm.rmsprop(.001,.9,0,Gy()),SGD:()=>gm.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Ky(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Qh))throw new Ky("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Ky(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>gw(e)))}else{const n=gw(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Ky(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(gw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mx("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Mx("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===pw?-1!==["accuracy","acc"].indexOf(i)?r=bw:-1!==["crossentropy","ce"].indexOf(i)&&(r=xw):this.lossFunctions[e]===dw?-1!==["accuracy","acc"].indexOf(i)?r=vw:-1!==["crossentropy","ce"].indexOf(i)&&(r=kw):-1!==["accuracy","acc"].indexOf(i)?r=yw:-1!==["crossentropy","ce"].indexOf(i)&&(r=ww),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=$w(i);a=e,n=""+Nw(i)}let t;Mx(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;qw(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Qy(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Qw(s[0],e),Qw(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new qy("Verbose mode is not implemented yet.");ei(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Kh((()=>{if(t.value){const{xs:n,ys:r}=Hw(e,t.value),i=n.concat(r),u=Kh((()=>s(i)));if(qh(i),0===l)for(let e=0;e<u.length;++e)a.push(Zh(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Kh((()=>td(a[e],ap(c,t)))),l>0&&qh(n)}qh(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Pd(a[e],o),qh(t)}return Qy(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Ky(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Ky(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Ky("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Dw;if(e instanceof oc&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Ky(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Ky(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Lw(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Yy(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Ky(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Kh((()=>{const r=this.checkNumSamples(e);if(n)throw new qy("Verbose predictLoop() is not implemented yet.");const s=Jw(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Kh((()=>{const n=s[t][0],r=s[t][1],a=Xw(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Dw(i);return Lw(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Qy(a.map((e=>Cd(e,0))))}))}predict(e,t={}){const n=Zw(e);rk(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return qw(r),this.predictLoop(n,r)}finally{Qw(n,e)}}predictOnBatch(e){rk(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new jy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===dw?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=lx(e.map((e=>e.shape[0])));r.sort();const s=lx(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Ky(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Ky(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!ai(r,s))throw new Ky(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=nk(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=nk(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[lw,pw,hw];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===hw&&1===a.shape[a.shape.length-1])throw new Ky(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Ky(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Ky(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Vw(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Uw(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Kh((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new qy("Verbose mode is not implemented yet.");if(null!=s)throw new qy("steps mode in testLoop() is not implemented yet");{const r=Jw(a,n),s=rf(Gx(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=Kx(s,a,o-a),u=Yw(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Zh(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=td(i[e],ap(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Pd(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Zy(e,r)>1&&(s+=`_${Zy(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Dw(e),o=Lw(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Gw(n,s[e]));const a=pp(n);t.push(a),l=0===e?n:td(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=pp(t(r[s],o[s]))}Xh(n),a.push(n)}return l=pp(l),this.calculateLosses().forEach((e=>{l=td(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Kh((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Dw(a),o=Lw(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=pp(r(s[e],o[e]));n=0===e?a:td(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=pp(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;qw(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);s=p[0],a=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new qy("validationData including sample weights is not supported yet."):new Ky(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=Xw(s,e,t),s=Xw(s,0,e),u=Xw(a,e,t),a=Xw(a,0,e),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let x,v;m?(e.makeTestFunction(),x=e.testFunction,v=y.slice().concat(y.map((e=>"val_"+e)))):(x=null,f=[],v=y.slice());const w=rw(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,i,o,l,u,c,h,d,p,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=g&&(b=Gx(0,g)),null==i&&(i=1);const{callbackList:y,history:x}=aw(o,i,a,d,g,p,s,m,h);y.setModel(e),e.history=x,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};{if("batch"===c)throw new qy("batch shuffling is not implemneted yet");c&&Ja(b);const i=rf(b),o=Jw(g,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Kh((()=>{const d=o[c][0],p=o[c][1],f=Kx(i,d,p-d);h.batch=c,h.size=p-d;const g=Yw(n,f),b=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,Xh(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Xh(s),a["val_"+n]=s}}})),await y.onBatchEnd(c,h),Yv(h),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,b,g,y,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null)}finally{e.isTraining=!1,Qw(s,t),Qw(a,n),Qw(l,i),Qw(u,o),null!=c&&qh(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(ei(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),ei(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),ei(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),ei(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),ei(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Kw(n.validationData))ei(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new qy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=rw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=aw(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Hw(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Vw(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Uw(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);qh(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,Xh(n)}await d.onBatchEnd(h,a),Yv(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Kw(n.validationData)?ex(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ex(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return qh(a),Qy(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=jh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-jh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=tx(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>tx(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=tx(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[tx(Nw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>tx(Nw(e))));{const e={};for(const t in this.metrics)e[t]=tx(Nw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=iw(_w(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=nx(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>nx(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=nx(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>nx(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=nx(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,jc.getSaveHandlers(n));if(0===t.length)throw new Ky(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Ky(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Ky("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Pc(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.6.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Pc(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Gc([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Cw(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Cw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}sk.className="Model",Gh(sk);class ak extends sk{}ak.className="Functional",Gh(ak);class ik extends sk{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:_v("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Ky(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ik||e instanceof sk;let n;if(t){if(n=e,1!==n.outputs.length)throw new Ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ky("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Ky("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Ky("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new qv({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Ky(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Kv(this.outputs[0])}this.inboundNodes=[],new Gv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Yy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ov(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new sk({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new jy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new jy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new jy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new jy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Ky("Legacy serialization format not supported yet.");s=t}else ei(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof ik))throw new qy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=iw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Ky("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Ky("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}ik.className="Sequential",Gh(ik);class ok extends Vh{getConfig(){return{}}}class lk extends ok{apply(e,t=1){return function(e,t=1){if(1!==t)throw new qy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Wd(e)}(e,t)}}lk.className="elu",Gh(lk);class uk extends ok{apply(e){return Vp(e)}}uk.className="selu",Gh(uk);class ck extends ok{apply(e){return Pp(e)}}ck.className="relu",Gh(ck);class hk extends ok{apply(e){return Kh((()=>yp(6,Pp(e))))}}hk.className="relu6",Gh(hk);class dk extends ok{apply(e){return e}}dk.className="linear",Gh(dk);class pk extends ok{apply(e){return Gp(e)}}pk.className="sigmoid",Gh(pk);class fk extends ok{apply(e){return function(e){return Kh((()=>{const t=td(.5,ap(.2,e));return Nd(t,0,1)}))}(e)}}fk.className="hardSigmoid",Gh(fk);class mk extends ok{apply(e){return Jp(e)}}mk.className="softplus",Gh(mk);class gk extends ok{apply(e){return function(e){return Kh((()=>Pd(e,ed(e).add(1))))}(e)}}gk.className="softsign",Gh(gk);class bk extends ok{apply(e){return nf(e)}}bk.className="tanh",Gh(bk);class yk extends ok{apply(e,t=-1){return Yp(e,t)}}yk.className="softmax",Gh(yk);class xk extends ok{apply(e,t=-1){return lp(e,t)}}xk.className="logSoftmax",Gh(xk);class vk extends ok{apply(e,t=1){return Kh((()=>Gp(e.mul(t)).mul(e)))}}vk.className="swish",Gh(vk);class wk extends ok{apply(e){return Kh((()=>ap(e,nf(Jp(e)))))}}function kk(e){return e.getClassName()}function Ik(e,t={}){return ix(e,Uh.getMap().classNameMap,t,"activation")}function $k(e){if(null==e){return Ik({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ik(t)}return e instanceof ok?e:Ik(e)}wk.className="mish",Gh(wk);class Nk extends Vh{}class Ck extends Nk{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Kh((()=>{let t=mp([1]);return this.hasL1&&(t=td(t,op(ap(this.l1,ed(e))))),this.hasL2&&(t=td(t,op(ap(this.l2,nv(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ck.className="L1L2",Gh(Ck);const Sk={l1l2:"L1L2"};function Ek(e){return sx(e)}function Tk(e,t={}){return ix(e,Uh.getMap().classNameMap,t,"regularizer")}function Rk(e){return null==e?null:"string"==typeof e?Tk({className:e in Sk?Sk[e]:e,config:{}}):e instanceof Nk?e:Tk(e)}class Ak extends jv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Mv(e);let n=Pp(e);return null!=this.maxValue&&(n=Nd(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ak.className="ReLU",Gh(Ak);class _k extends jv{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Mv(e);return ep(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}_k.className="LeakyReLU",Gh(_k);class Fk extends jv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ev(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Rk(e.alphaRegularizer),this.alphaConstraint=$x(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Ky(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ov(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Wv({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Mv(e),Dp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Sv(this.alphaInitializer),alphaRegularizer:Ek(this.alphaRegularizer),alphaConstraint:kx(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Fk.className="PReLU",Gh(Fk);class Dk extends jv{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new qy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Mv(e);return Wd(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Dk.className="ELU",Gh(Dk);class Mk extends jv{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Mv(e);return n.mul(Hx(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Mk.className="ThresholdedReLU",Gh(Mk);class Ok extends jv{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new yk).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Mv(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Lk(e,t,n){if("number"==typeof e)return Yy(e,t);if(e.length!==t)throw new Ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function zk(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Bk(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Ux([n-t,0]);else{if("same"!==r)throw new Ky(`Unsupport padding mode: ${r}.`);e*=t}return e}function Pk(e,t){return Kh((()=>(Ax(t),"channelsFirst"===t?cf(e,[0,2,3,1]):e)))}function Wk(e,t){return Kh((()=>(Ax(t),"channelsFirst"===t?cf(e,[0,2,3,4,1]):e)))}function Vk(e,t,n,r=[1,1],s="valid",a,i,o=null){return Kh((()=>{if(null==a&&(a="channelsLast"),Ax(a),3!==e.rank&&4!==e.rank)throw new Ky(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Ky(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Pk(e,a);if("causal"===s)throw new qy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Nf({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=cf(l,[0,3,1,2])),l}))}Ok.className="Softmax",Gh(Ok);class Uk extends jv{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Uk.verifyArgs(t),this.rank=e,dx(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new qy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lk(t.kernelSize,e,"kernelSize"),this.strides=Lk(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,_x(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ax(this.dataFormat),this.activation=$k(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ev(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$x(t.biasConstraint),this.biasRegularizer=Rk(t.biasRegularizer),this.activityRegularizer=Rk(t.activityRegularizer),this.dilationRate=Lk(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ky(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ky(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ky(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Jy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!hx(e.kernelSize,"number",1,3))throw new Ky(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:kk(this.activation),useBias:this.useBias,biasInitializer:Sv(this.biasInitializer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gk extends Uk{constructor(e,t){super(e,t),this.kernel=null,Gk.verifyArgs(t),this.filters=t.filters,dx(this.filters,"filters"),this.kernelInitializer=Ev(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$x(t.kernelConstraint),this.kernelRegularizer=Rk(t.kernelRegularizer)}build(e){e=Ov(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ky(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Kh((()=>{let t;e=Mv(e);const n=null==this.bias?null:this.bias.read(),r=fx(this.activation.getClassName());if(null!=r&&2===this.rank)t=Vk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Kh((()=>{if(null==a&&(a="channelsLast"),Ax(a),3!==e.shape.length)throw new Ky(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Ky(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Ky(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=cf(e,[0,2,1])),"causal"===s)throw new qy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=_d(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=sv(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Vk(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new qy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Kh((()=>{if(null==a&&(a="channelsLast"),Ax(a),4!==e.rank&&5!==e.rank)throw new Ky(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Ky(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Wk(e,a);if("causal"===s)throw new qy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Md(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=sv(o,n)),"channelsFirst"===a&&(o=cf(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ov(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=zk(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Sv(this.kernelInitializer),kernelRegularizer:Ek(this.kernelRegularizer),kernelConstraint:kx(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Ky(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Hk extends Gk{constructor(e){super(2,e),Hk.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!hx(e.kernelSize,"number",1,2))throw new Ky(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Hk.className="Conv2D",Gh(Hk);class jk extends Gk{constructor(e){super(3,e),jk.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Ky(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}jk.className="Conv3D",Gh(jk);class Kk extends Hk{constructor(e){if(super(e),this.inputSpec=[new Wv({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ky(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ov(e)).length)throw new Ky("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Wv({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Kh((()=>{let t=Mv(e);if(4!==t.shape.length)throw new Ky(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,Bk(i,c,l,this.padding),Bk(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=cf(t,[0,2,3,1]));let p=Dd(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=cf(p,[0,3,1,2])),null!=this.bias&&(p=sv(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Ov(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Bk(t[r],o,a,this.padding),t[s]=Bk(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kk.className="Conv2DTranspose",Gh(Kk);class qk extends jk{constructor(e){if(super(e),this.inputSpec=[new Wv({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ky(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ov(e)).length)throw new Ky("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Wv({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Kh((()=>{let t=Mv(e);if(5!==t.shape.length)throw new Ky(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Bk(o,p,c,this.padding),Bk(l,f,h,this.padding),Bk(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=cf(t,[0,2,3,4,1]));let b=Ld(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=cf(b,[0,4,1,2,3])),null!==this.bias&&(b=sv(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Ov(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Bk(t[r],u,i,this.padding),t[s]=Bk(t[s],c,o,this.padding),t[a]=Bk(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qk.className="Conv3DTranspose",Gh(qk);class Xk extends Gk{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Ky("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Ky("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Ky(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ev(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Rk(t.depthwiseRegularizer),this.depthwiseConstraint=$x(t.depthwiseConstraint),this.pointwiseInitializer=Ev(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Rk(t.pointwiseRegularizer),this.pointwiseConstraint=$x(t.pointwiseConstraint)}build(e){if((e=Ov(e)).length<this.rank+2)throw new Ky(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Ky(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Wv({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Kh((()=>{let t;if(e=Mv(e),1===this.rank)throw new qy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=cf(e,[0,2,3,1])),t=Up(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=sv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=cf(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Sv(this.depthwiseInitializer),e.pointwiseInitializer=Sv(this.pointwiseInitializer),e.depthwiseRegularizer=Ek(this.depthwiseRegularizer),e.pointwiseRegularizer=Ek(this.pointwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseConstraint),e.pointwiseConstraint=kx(this.pointwiseConstraint),e}}Xk.className="SeparableConv";class Yk extends Xk{constructor(e){super(2,e)}}Yk.className="SeparableConv2D",Gh(Yk);class Jk extends Gk{constructor(e){super(1,e),Jk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!hx(e.kernelSize,"number",1,1))throw new Ky(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Jk.className="Conv1D",Gh(Jk);class Zk extends jv{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Kh((()=>{if(e=Mv(e),"channelsLast"===this.dataFormat){const t=Xx(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xx(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Xx(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xx(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Zk.className="Cropping2D",Gh(Zk);class Qk extends jv{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ax(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){cx(Cx,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Kh((()=>{let t=Mv(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=cf(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return cf(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Qk.className="UpSampling2D",Gh(Qk);class eI extends Uk{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ev(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$x(e.depthwiseConstraint),this.depthwiseRegularizer=Rk(e.depthwiseRegularizer)}build(e){if((e=Ov(e)).length<4)throw new Ky(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Ky(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Kh((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Kh((()=>{null==s&&(s="channelsLast"),Ax(s);let i=Pk(e,s);if(4!==e.rank)throw new Ky(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Ky(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=zd(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=cf(i,[0,3,1,2])),i}))}(e=Mv(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=sv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ov(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=zk(t,this.kernelSize[0],this.padding,this.strides[0]),a=zk(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Sv(this.depthwiseInitializer),e.depthwiseRegularizer=Ek(this.depthwiseRegularizer),e.depthwiseConstraint=kx(this.depthwiseRegularizer),e}}function tI(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Ky("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function nI(e,t,n,r=!1,s,a,i=!1,o=!1){return Kh((()=>{const l=t.shape.length;if(l<3)throw new Ky(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Gx(2,l));if(t=cf(t,u),null!=a)throw new qy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=jd(s,-1)),s=cf(s,u)),r&&(t=Wp(t,0),null!=s&&(s=Wp(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=af(t);let m,g;null!=s&&(m=af(s));for(let t=0;t<p;++t){const n=f[t],r=Kh((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Kh((()=>{const e=m[t],n=_p(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(g=tf(c,1)),[h,g,d]}))}eI.className="DepthwiseConv2D",Gh(eI);class rI extends jv{constructor(e){let t;if(super(e),null==e.cell)throw new Ky("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hI({cells:e.cell}):e.cell,null==t.stateSize)throw new Ky("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Wv({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Gx(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Fv(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Kh((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new qy("Constants support is not implemented in RNN yet.");Fv(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Wv({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ai(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Ky(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Wv({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Kh((()=>{if(!this.stateful)throw new Hy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>mp([n,e]))):this.states_=[mp([n,this.cell.stateSize])];else if(null==e)qh(this.states_),null!=this.keptStates&&(qh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>mp([n,e]))):this.states_[0]=mp([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):qh(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!ai(r.shape,a))throw new Ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Xh(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tI(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Wv({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Vv){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Kh((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Mv(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Ky(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nI(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Kh((()=>{let t=mp(e.shape);return t=op(t,[1,2]),t=jx(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Zx(t,[1,e]):t)):this.cell.stateSize>1?[Zx(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rI.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=iw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rI.className="RNN",Gh(rI);class sI extends jv{}class aI extends sI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dx(this.units,"units"),this.activation=$k(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ev(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ev(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ev(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rk(e.kernelRegularizer),this.recurrentRegularizer=Rk(e.recurrentRegularizer),this.biasRegularizer=Rk(e.biasRegularizer),this.kernelConstraint=$x(e.kernelConstraint),this.recurrentConstraint=$x(e.recurrentConstraint),this.biasConstraint=$x(e.biasConstraint),this.dropout=Vx([1,Ux([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vx([1,Ux([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ov(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Kh((()=>{if(2!==(e=e).length)throw new Ky(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dI({ones:()=>_p(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dI({ones:()=>_p(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=ev(null!=a?ap(e,a):e,this.kernel.read()),null!=this.bias&&(s=sv(s,this.bias.read())),null!=i&&(n=ap(n,i));let o=td(s,ev(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kk(this.activation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}aI.className="SimpleRNNCell",Gh(aI);class iI extends rI{constructor(e){e.cell=new aI(e),super(e)}call(e,t){return Kh((()=>{null!=this.cell.dropoutMask&&(qh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}iI.className="SimpleRNN",Gh(iI);class oI extends sI{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Ky("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dx(this.units,"units"),this.activation=$k(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$k(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ev(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ev(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ev(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Rk(e.kernelRegularizer),this.recurrentRegularizer=Rk(e.recurrentRegularizer),this.biasRegularizer=Rk(e.biasRegularizer),this.kernelConstraint=$x(e.kernelConstraint),this.recurrentConstraint=$x(e.recurrentConstraint),this.biasConstraint=$x(e.biasConstraint),this.dropout=Vx([1,Ux([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vx([1,Ux([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ov(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Kh((()=>{if(2!==(e=e).length)throw new Ky(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dI({ones:()=>_p(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dI({ones:()=>_p(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=ap(e,s[0]));let u=ev(e,this.kernel.read());this.useBias&&(u=sv(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ap(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Zp(c,[2*this.units,this.units],c.rank-1),p=ev(r,h),[f,m,g]=Zp(u,3,u.rank-1),[b,y]=Zp(p,2,p.rank-1);i=this.recurrentActivation.apply(td(f,b)),o=this.recurrentActivation.apply(td(m,y));const x=ev(ap(o,r),d);l=this.activation.apply(td(g,x));const v=td(ap(i,r),ap(td(1,Tp(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kk(this.activation),recurrentActivation:kk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}oI.className="GRUCell",Gh(oI);class lI extends rI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new oI(e),super(e)}call(e,t){return Kh((()=>{null!=this.cell.dropoutMask&&(qh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lI.className="GRU",Gh(lI);class uI extends sI{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dx(this.units,"units"),this.activation=$k(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=$k(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ev(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ev(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ev(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Rk(e.kernelRegularizer),this.recurrentRegularizer=Rk(e.recurrentRegularizer),this.biasRegularizer=Rk(e.biasRegularizer),this.kernelConstraint=$x(e.kernelConstraint),this.recurrentConstraint=$x(e.recurrentConstraint),this.biasConstraint=$x(e.biasConstraint),this.dropout=Vx([1,Ux([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Vx([1,Ux([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ov(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends uv{apply(t,r){const s=e.apply([n]),a=(new hv).apply([n]),i=e.apply([2*n]);return Jx(Jx(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Kh((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Ky(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dI({ones:()=>_p(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dI({ones:()=>_p(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ap(e,a[0]));let h=ev(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ap(r,i[0])),h=td(h,ev(r,this.recurrentKernel.read())),this.useBias&&(h=sv(h,this.bias.read()));const[d,p,f,m]=Zp(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=td(ap(l,s),ap(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=ap(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kk(this.activation),recurrentActivation:kk(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),recurrentInitializer:Sv(this.recurrentInitializer),biasInitializer:Sv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ek(this.kernelRegularizer),recurrentRegularizer:Ek(this.recurrentRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),recurrentConstraint:kx(this.recurrentConstraint),biasConstraint:kx(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}uI.className="LSTMCell",Gh(uI);class cI extends rI{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new uI(e),super(e)}call(e,t){return Kh((()=>{null!=this.cell.dropoutMask&&(qh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cI.className="LSTM",Gh(cI);class hI extends sI{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Kh((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Fv(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Mx(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(iw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Bv(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Pv(t)}}function dI(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>av(t(),n),i=()=>iv(a,t,r);return!s||s<=1?Xh(i().clone()):Array(s).fill(void 0).map(i).map((e=>Xh(e.clone())))}hI.className="StackedRNNCells",Gh(hI);var pI,fI,mI,gI;class bI extends rI{constructor(e){if(e.unroll)throw new qy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new qy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Wv({ndim:5})]}call(e,t){return Kh((()=>{if(null!=this.cell.dropoutMask&&(qh(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(qh(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Ky("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Kh((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=mp([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Kh((()=>{if(!this.stateful)throw new Hy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>mp(s))):this.states_=[mp(s)];else if(null==e)qh(this.states_),null!=this.keptStates&&(qh(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>mp(s))):this.states_[0]=mp(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):qh(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!ai(n.shape,r))throw new Ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Xh(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=zk(l,r[0],s,a[0],i[0]),h=zk(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}bI.className="ConvRNN2D";class yI extends uI{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,dx(this.filters,"filters"),this.kernelSize=Lk(n,2,"kernelSize"),this.kernelSize.forEach((e=>dx(e,"kernelSize"))),this.strides=Lk(r||1,2,"strides"),this.strides.forEach((e=>dx(e,"strides"))),this.padding=s||"valid",_x(this.padding),this.dataFormat=a||"channelsLast",Ax(this.dataFormat),this.dilationRate=Lk(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>dx(e,"dilationRate")))}build(e){var t;e=Ov(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Ky(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends uv{apply(e,t){return Yx([n.apply([r]),gp([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Kh((()=>{if(3!==e.length)throw new Ky(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dI({ones:()=>_p(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ap(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dI({ones:()=>_p(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),m=o(s,d,2),g=o(s,d,3);const[b,y,x,v]=Zp(this.kernel.read(),4,3),[w,k,I,$]=this.useBias?Zp(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,$,this.padding);const[N,C,S,E]=Zp(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),m=this.recurrentConv(m,S),g=this.recurrentConv(g,E);const T=this.recurrentActivation.apply(td(l,p)),R=this.recurrentActivation.apply(td(u,f)),A=td(ap(R,a),ap(T,this.activation.apply(td(c,m)))),_=ap(this.recurrentActivation.apply(td(h,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Ad(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?sv(s,n,this.dataFormat):s}recurrentConv(e,t){return Ad(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}yI.className="ConvLSTM2DCell",Gh(yI);class xI extends bI{constructor(e){const t=new yI(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}xI.className="ConvLSTM2D",Gh(xI);class vI extends jv{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return iv((()=>av(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}vI.className="Dropout",Gh(vI);class wI extends vI{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}wI.className="SpatialDropout1D",Gh(wI);class kI extends jv{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dx(this.units,"units"),this.activation=$k(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ev(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ev(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$x(e.kernelConstraint),this.biasConstraint=$x(e.biasConstraint),this.kernelRegularizer=Rk(e.kernelRegularizer),this.biasRegularizer=Rk(e.biasRegularizer),this.activityRegularizer=Rk(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ov(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ov(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e),r=fx(this.activation.getClassName());let s;return null!=r?s=ev(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=ev(n,this.kernel.read()),null!=this.bias&&(s=sv(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:kk(this.activation),useBias:this.useBias,kernelInitializer:Sv(this.kernelInitializer),biasInitializer:Sv(this.biasInitializer),kernelRegularizer:Ek(this.kernelRegularizer),biasRegularizer:Ek(this.biasRegularizer),activityRegularizer:Ek(this.activityRegularizer),kernelConstraint:kx(this.kernelConstraint),biasConstraint:kx(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}kI.className="Dense",Gh(kI);class II extends jv{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ov(e);for(const t of e.slice(1))if(null==t)throw new Ky(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Px(e,1)]}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);let n=Mv(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Ky(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Px(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}II.className="Flatten",Gh(II);class $I extends jv{constructor(e){super(e),this.supportsMasking=!0,this.activation=$k(e.activation)}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e);return this.activation.apply(n)}))}getConfig(){const e={activation:kk(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}$I.className="Activation",Gh($I);class NI extends jv{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Kh((()=>{return e=Mv(e),t=e,n=this.n,Kh((()=>{if(2!==t.shape.length)throw new Ky(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Zx(jx(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}NI.className="RepeatVector",Gh(NI);class CI extends jv{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Ky("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Px(e);if(null!==a){if(0===s||i%s!=0)throw new Ky(n);r[a]=i/s}else if(i!==s)throw new Ky(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}CI.className="Reshape",Gh(CI);class SI extends jv{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Gx(1,e.dims.length+1);if(!ai(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Wv({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ov(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return cf(Mv(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}SI.className="Permute",Gh(SI);class EI extends jv{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Mv(e);return rd(Rp(n,this.maskValue),-1)}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e),r=rd(Rp(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}EI.className="Masking",Gh(EI);class TI extends jv{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ex(e.inputLength))}this.inputDim=e.inputDim,dx(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dx(this.outputDim,"outputDim"),this.embeddingsInitializer=Ev(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Rk(e.embeddingsRegularizer),this.activityRegularizer=Rk(e.activityRegularizer),this.embeddingsConstraint=$x(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Kh((()=>this.maskZero?(e=Mv(e),Rp(e,uf(e))):null))}computeOutputShape(e){if(e=Ov(e),null==this.inputLength)return[...e,this.outputDim];const t=ex(this.inputLength);if(t.length!==e.length-1)throw new Ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);let n=Mv(e);return"int32"!==n.dtype&&(n=Hx(n,"int32")),tv(this.embeddings.read(),n.as1D()).reshape(Ov(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Sv(this.embeddingsInitializer),embeddingsRegularizer:Ek(this.embeddingsRegularizer),activityRegularizer:Ek(this.activityRegularizer),embeddingsConstraint:kx(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}TI.className="Embedding",Gh(TI);class RI extends jv{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new qy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Ky("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ov(e)]),(e=e).length<2)throw new Ky(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=lx(t),t.length>1)throw new Ky(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===lx(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Kh((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Ux(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=jx(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(Px(e.slice(1))));i=cf(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=Gx(1,e).concat([0]);t.push(cf(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=cf(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Gx(0,s-1));r=cf(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=lx(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Kh((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Ky("`mask` should be an Array");if(!Array.isArray(e))throw new Ky("`inputs` should be an Array");if(t.length!==e.length)throw new Ky(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:jd(e,0))))[0];for(let e=1;e<t.length-1;++e)n=up(n,t[e]);return n}))}}class AI extends RI{constructor(e){super(e)}mergeFunction(e){return Kh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=td(t,e[n]);return t}))}}AI.className="Add",Gh(AI);class _I extends RI{constructor(e){super(e)}mergeFunction(e){return Kh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ap(t,e[n]);return t}))}}_I.className="Multiply",Gh(_I);class FI extends RI{constructor(e){super(e)}mergeFunction(e){return Kh((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=td(t,e[n]);return ap(1/e.length,t)}))}}FI.className="Average",Gh(FI);class DI extends RI{constructor(e){super(e)}mergeFunction(e){return Kh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=dp(t,e[n]);return t}))}}DI.className="Maximum",Gh(DI);class MI extends RI{constructor(e){super(e)}mergeFunction(e){return Kh((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=yp(t,e[n]);return t}))}}MI.className="Minimum",Gh(MI);class OI extends RI{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Ky("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(ai(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Ky("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Kh((()=>Yx(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Ky("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Ky("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Ky("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Ky(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Kh((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(_p(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(jd(t[n],-1)):r.push(t[n]);const s=Cd(r,this.axis);return nd(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function LI(e,t){for(;e<0;)e+=t;return e}OI.className="Concatenate",Gh(OI);class zI extends RI{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){ei(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new qy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Ky(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Ky(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>LI(t,e[n].shape.length))):[LI(this.axes,n.shape.length),LI(this.axes,r.shape.length)],this.normalize&&(n=ow(n,t[0]),r=ow(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new qy("batchDot is not implemented for tensors of 4D or higher rank yet");if(ei(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),ei(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new qy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Kh((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[LI(this.axes,e.length),LI(this.axes,t.length)],n}computeOutputShape(e){ei(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new qy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}zI.className="Dot",Gh(zI);class BI extends jv{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e);return iv((()=>Qx(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}BI.className="GaussianNoise",Gh(BI);class PI extends jv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Kh((()=>{this.invokeCallHook(e,t);const n=Mv(e);return this.rate>0&&this.rate<1?iv((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Qx(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}PI.className="GaussianDropout",Gh(PI);class WI extends jv{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Mv(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Kh((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return iv((()=>{const t=Mv(e),r=-1.7580993408473766;let s=Qd(Bp(n),this.rate);s=Hx(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>Mv(e)),t.training||!1)}return e}))}}function VI(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=kd(e,t,n,r,s,a);else if(3===e.rank)i=Id(e,t,n,r,s,a);else{if(4!==e.rank)throw new qy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=$d(e,t,n,r,s,a)}return i}WI.className="AlphaDropout",Gh(WI);class UI extends jv{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ev(e.betaInitializer||"zeros"),this.gammaInitializer=Ev(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ev(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ev(e.movingVarianceInitializer||"ones"),this.betaConstraint=$x(e.betaConstraint),this.gammaConstraint=$x(e.gammaConstraint),this.betaRegularizer=Rk(e.betaRegularizer),this.gammaRegularizer=Rk(e.gammaRegularizer)}build(e){e=Ov(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Ky(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Wv({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Kh((()=>{const n=null!=t.training&&t.training,r=Mv(e),s=r.shape,a=s.length,i=Gx(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Yy(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!ai(u,Gx(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return VI(r,e,t,n,s,this.epsilon)}return VI(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return ai(r.slice().sort(),Gx(0,e.rank-1))?function(e,t,n,r,s=.001){return Kh((()=>{const a=Ep(e,r),i=a.mean,o=a.variance;return[VI(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Kh((()=>{const a=Ep(e,r),i=a.mean,o=a.variance,l=[];for(const t of Gx(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[VI(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Kh((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sv(this.betaInitializer),gammaInitializer:Sv(this.gammaInitializer),movingMeanInitializer:Sv(this.movingMeanInitializer),movingVarianceInitializer:Sv(this.movingVarianceInitializer),betaRegularizer:Ek(this.betaRegularizer),gammaRegularizer:Ek(this.gammaRegularizer),betaConstraint:kx(this.betaConstraint),gammaConstraint:kx(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}UI.className="BatchNormalization",Gh(UI);class GI extends jv{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ev(e.betaInitializer||"zeros"),this.gammaInitializer=Ev(e.gammaInitializer||"ones"),this.betaRegularizer=Rk(e.betaRegularizer),this.gammaRegularizer=Rk(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ov(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==lx(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Mv(e),r=n.shape,s=r.length;return Kh((()=>{let{mean:e,variance:t}=Ep(n,this.axis,!0);const a=Yy(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),VI(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Sv(this.betaInitializer),gammaInitializer:Sv(this.gammaInitializer),betaRegularizer:Ek(this.betaRegularizer),gammaRegularizer:Ek(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}GI.className="LayerNormalization",Gh(GI);class HI extends jv{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Ky(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Ky(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Ky(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Wv({ndim:4})]}computeOutputShape(e){let t,n;return e=Ov(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Kh((()=>{return t=Mv(e),n=this.padding,r=this.dataFormat,Kh((()=>{if(4!==t.rank)throw new Ky(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ky("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Ky(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Fp(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function jI(e,t,n,r,s,a){return Kh((()=>{let i;Ax(s),Fx(a),_x(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Pk(e,s);const o="same"===r?"same":"valid";return i="max"===a?cp(e,t,n,o):xd(e,t,n,o),"channelsFirst"===s&&(i=cf(i,[0,3,1,2])),i}))}function KI(e,t,n,r,s,a){return Kh((()=>{let i;Ax(s),Fx(a),_x(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Wk(e,s);const o="same"===r?"same":"valid";return i="max"===a?hp(e,t,n,o):vd(e,t,n,o),"channelsFirst"===s&&(i=cf(i,[0,4,1,2,3])),i}))}HI.className="ZeroPadding2D",Gh(HI);class qI extends jv{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Ky(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(dx(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Ky(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}dx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,_x(this.padding),this.inputSpec=[new Wv({ndim:3})]}computeOutputShape(e){const t=zk((e=Ov(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Kh((()=>{this.invokeCallHook(e,t),e=jx(Mv(e),2);const n=this.poolingFunction(Mv(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ef(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class XI extends qI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),jI(e,t,n,r,s,"max")}}XI.className="MaxPooling1D",Gh(XI);class YI extends qI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),jI(e,t,n,r,s,"avg")}}YI.className="AveragePooling1D",Gh(YI);class JI extends jv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Ky(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dx(this.poolSize,"poolSize"),dx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ax(this.dataFormat),_x(this.padding),this.inputSpec=[new Wv({ndim:4})]}computeOutputShape(e){e=Ov(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=zk(t,this.poolSize[0],this.padding,this.strides[0]),n=zk(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Kh((()=>(this.invokeCallHook(e,t),this.poolingFunction(Mv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ZI extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),jI(e,t,n,r,s,"max")}}ZI.className="MaxPooling2D",Gh(ZI);class QI extends JI{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),jI(e,t,n,r,s,"avg")}}QI.className="AveragePooling2D",Gh(QI);class e$ extends jv{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Ky(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dx(this.poolSize,"poolSize"),dx(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ax(this.dataFormat),_x(this.padding),this.inputSpec=[new Wv({ndim:5})]}computeOutputShape(e){e=Ov(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=zk(t,this.poolSize[0],this.padding,this.strides[0]),n=zk(n,this.poolSize[1],this.padding,this.strides[1]),r=zk(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Kh((()=>(this.invokeCallHook(e,t),this.poolingFunction(Mv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class t$ extends e${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),KI(e,t,n,r,s,"max")}}t$.className="MaxPooling3D",Gh(t$);class n$ extends e${constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Ax(s),_x(r),KI(e,t,n,r,s,"avg")}}n$.className="AveragePooling3D",Gh(n$);class r$ extends jv{constructor(e){super(e),this.inputSpec=[new Wv({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new qy}}class s$ extends r${constructor(e){super(e||{})}call(e,t){return Kh((()=>{const t=Mv(e);return pp(t,1)}))}}s$.className="GlobalAveragePooling1D",Gh(s$);class a$ extends r${constructor(e){super(e||{})}call(e,t){return Kh((()=>{const t=Mv(e);return sp(t,1)}))}}a$.className="GlobalMaxPooling1D",Gh(a$);class i$ extends jv{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ax(this.dataFormat),this.inputSpec=[new Wv({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new qy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class o$ extends i${call(e,t){return Kh((()=>{const t=Mv(e);return"channelsLast"===this.dataFormat?pp(t,[1,2]):pp(t,[2,3])}))}}o$.className="GlobalAveragePooling2D",Gh(o$);class l$ extends i${call(e,t){return Kh((()=>{const t=Mv(e);return"channelsLast"===this.dataFormat?sp(t,[1,2]):sp(t,[2,3])}))}}l$.className="GlobalMaxPooling2D",Gh(l$);class u$ extends jv{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=iw(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class c$ extends u${constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ov(e)).length<3)throw new Ky(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ov(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Kh((()=>nI(((e,n)=>[Mv(this.layer.call(e,t)),[]]),e=Mv(e),[],!1,null,null,!1,!0)[1]))}}c$.className="TimeDistributed",Gh(c$);class h$ extends u${constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=iw(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=iw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){cx(Tx,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new qy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Qy(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tI(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Ky("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Wv({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new qy("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Vv;for(const e of a)if(e instanceof Vv!==o)throw new Ky("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Kh((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Wp(s,1)),"concat"===this.mergeMode?i=Yx([r,s]):"sum"===this.mergeMode?i=td(r,s):"ave"===this.mergeMode?i=ap(.5,td(r,s)):"mul"===this.mergeMode?i=ap(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mx(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Mx(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=iw(t.layer);if(delete t.layer,null!=t.numConstants)throw new qy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function d$(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(g$(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=d$(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function p$(e,t=m$){return f$(e,t)}function f$(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(g$(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=f$(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function m$(e){return null===e?null:g$(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function g$(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof oc))}function b$(e){return d$(e,y$)}function y$(e){return e instanceof oc?{value:e.clone(),recurse:!1}:g$(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}h$.className="Bidirectional",Gh(h$),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(pI||(pI={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(fI||(fI={}));class x${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class v$ extends x${constructor(){super(v$.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}v$.INITIAL_CAPACITY=32;class w${async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new R$(this,e)}filter(e){return new E$(this,e)}map(e){return new T$(this,e)}mapAsync(e){return new A$(this,e)}serialMapAsync(e){return new A$(this,e).serial()}flatmap(e){return new F$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new S$(this,e,t)}columnMajorBatch(e,t=!0,n=m$){return this.rowMajorBatch(e,t).map((e=>p$(e,n)))}concatenate(e,t){return new D$(new k$([this,e]),t)}take(e){return e<0||null==e?this:new C$(this,e)}skip(e){return e<0||null==e?this:new N$(this,e)}prefetch(e){return new M$(this,e)}shuffle(e,t){return new O$(this,e,t)}serial(){return new $$(this)}}class k$ extends w${constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:b$(e),done:!1}}}class I$ extends w${constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class $$ extends w${constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class N$ extends w${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;qh(e.value)}return this.upstream.next()}}class C$ extends w${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class S$ extends w${constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class E$ extends w${constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;qh(e.value)}}}class T$ extends w${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vc(e.value),n=this.transform(e.value),r=vc(n);for(const e of t)xc(e,r)||e.dispose();return{value:n,done:!1}}}class R$ extends w${constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class A$ extends w${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=vc(e.value),n=await this.transform(e.value),r=vc(n);for(const e of t)xc(e,r)||e.dispose();return{value:n,done:!1}}}class _$ extends w${constructor(){super(),this.outputQueue=new v$,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class F$ extends _${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=vc(e.value),n=this.transform(e.value),r=vc(n);this.outputQueue.pushAll(n);for(const e of t)xc(e,r)||e.dispose();return!0}}class D$ extends w${constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(gI=mI||(mI={}))[gI.FAIL=0]="FAIL",gI[gI.SHORTEST=1]="SHORTEST",gI[gI.LONGEST=2]="LONGEST";class M$ extends w${constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new x$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class O$ extends M${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Mp.alea(n||ju().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class L${constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return ei(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),z$((async()=>(await n.iterator()).columnMajorBatch(e,t,B$)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,z$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,z$((async()=>(await t.iterator()).filter((t=>Kh((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return z$((async()=>(await t.iterator()).map((t=>Kh((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return z$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return z$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,z$((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new I$(s)).take(e),new D$(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,z$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Mp.alea(t||ju().toString());return z$((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,z$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function z$(e,t=null){return new class extends L${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function B$(e){if(null===e)return null;return null==(t=e[0])||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(t)||Array.isArray(t)||"object"==typeof t&&t instanceof oc||gi(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof oc?tf(e):Bc(e)}(e),recurse:!1}:{value:null,recurse:!0};var t}function P$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ei("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}L$.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const W$=cg;class V$ extends Xa{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new qa(this,Hh())}nextDataId(){return V$.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Mi().get("IS_NODE")&&Wm("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&yi(n[0])){const s=n.map((e=>Ku(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Um(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>qu(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return gh(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Hh().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ju();return e(),{kernelMs:ju()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){P$([e],"where");const t=this.readSync(e.dataId);return W$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function U$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(P$(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=si(i.shape),c=n||i.dtype,h=fi(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,c,h)}}function G$(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(P$(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}V$.nextDataId=0,Yh("cpu",(()=>new V$),1);const H$=U$(Mo,(e=>e>=0?e:Math.exp(e)-1)),j$={kernelName:Mo,backendName:"cpu",kernelFunc:H$};function K$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const q$={kernelName:Zo,backendName:"cpu",kernelFunc:K$};function X$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;P$([s],"leakyRelu");const i=si(s.shape),o=n.data.get(s.dataId).values,l=pi("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const Y$={kernelName:sl,backendName:"cpu",kernelFunc:X$};function J$(e){return(t,n,r,s,a)=>{const i=Gd(t,n),o=i.length,l=Ii(i),u=pi(a,si(i)),c=t.length,h=n.length,d=Ii(t),p=Ii(n),f=Vd(t,i),m=Vd(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ai(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Ri(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=Ri(g,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const Z$=J$(((e,t)=>e<0?t*e:e));function Q$(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;P$([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=Z$(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const eN={kernelName:Bl,backendName:"cpu",kernelFunc:Q$},tN=U$(Gl,(e=>Math.max(0,e))),nN={kernelName:Gl,backendName:"cpu",kernelFunc:tN},rN=U$(Yl,(e=>Math.min(Math.max(0,e),6))),sN={kernelName:Yl,backendName:"cpu",kernelFunc:rN},aN=U$(ou,(e=>1/(1+Math.exp(-e)))),iN={kernelName:ou,backendName:"cpu",kernelFunc:aN};function oN(e,t,n,r,s){if("linear"===n)return K$({inputs:{x:t},backend:e});if("relu"===n)return tN({inputs:{x:t},backend:e});if("elu"===n)return H$({inputs:{x:t},backend:e});if("relu6"===n)return rN({inputs:{x:t},backend:e});if("prelu"===n)return Q$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return X$({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return aN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const uN={kernelName:co,backendName:"cpu",kernelFunc:lN};function cN(e,t,n="float32"){if("complex64"===n)return lN({inputs:{real:cN(e,t,"float32"),imag:cN(e,t,"float32")},backend:e});const r=Si(si(t),n);return e.makeTensorInfo(t,n,r)}function hN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const dN={kernelName:Vl,backendName:"cpu",kernelFunc:hN};function pN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return K$({inputs:{x:s},backend:n});const e=cN(n,s.shape,s.dtype),t=pN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=lN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=hN({inputs:{input:s},backend:n}),t=pN({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!mi(s.dtype,a)){const e=K$({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=Hu([0],s.dtype),[r,a]=J$(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const fN={kernelName:oo,backendName:"cpu",kernelFunc:pN};function mN(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;P$([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=pN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=pN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),v=o.makeTensorInfo(y,"float32",b),w=lN({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function gN(e){return(t,n,r,s,a,i)=>{const o=Gd(t,n),l=si(o),u=o.length,c=Ii(o),h=pi("float32",l),d=pi("float32",l),p=Vd(t,o),f=Vd(n,o),m=Um(r,s),g=Um(a,i),b=t.length,y=Ii(t),x=n.length,v=Ii(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ai(t,u,c),r=n.slice(-b);p.forEach((e=>r[e]=0));const s=Ri(r,b,y),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Ri(a,x,v),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const bN=J$(((e,t)=>e+t)),yN=gN(((e,t,n,r)=>({real:e+n,imag:t+r}))),xN=mN(Ui,bN,yN),vN={kernelName:Ui,backendName:"cpu",kernelFunc:xN};function wN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=si(s.shape),o=ci(a,i),l=si(o);ei(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const kN={kernelName:Hl,backendName:"cpu",kernelFunc:wN};function IN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;P$([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=si(f),b=si(m);ei(l>=2&&u>=2&&(g===b||1===g||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const y=(g>b?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,p]);ei(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],v=wN({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,d]:[g,d,c]}}),w=wN({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],$=o?w.shape[1]:w.shape[2],N=Math.max(g,b),C=n.data.get(v.dataId).values,S=n.data.get(w.dataId).values,E=Ii(v.shape),T=Ii(w.shape),[R,A,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,D,M]=o?[1,T[1],T[0]]:[T[1],1,T[0]],O=I*$,L=gh([N,I,$],v.dtype),z=L.values,B=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=B)for(let n=0;n<$;n+=B)for(let r=0;r<k;r+=B){const s=Math.min(t+B,I),a=Math.min(n+B,$),i=Math.min(r+B,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,g-1)*R,a=Math.min(e,b-1)*M;n+=C[r+o*A+s*_]*S[s*F+t*D+a]}z[e*O+(o*$+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const $N={kernelName:so,backendName:"cpu",kernelFunc:IN},NN={kernelName:Fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=IN({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=xN({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=oN(n,d,c,o,h),m.push(d),d=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return d}};function CN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const SN={kernelName:Pi,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;P$(t,"abs");let r=new Float32Array(si(t.shape));return r=CN(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},EN=U$(Wi,(e=>Math.acos(e))),TN={kernelName:Wi,backendName:"cpu",kernelFunc:EN},RN=U$(Vi,(e=>Math.acosh(e))),AN={kernelName:Vi,backendName:"cpu",kernelFunc:RN},_N={kernelName:Gi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;P$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=gh(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function FN(e,t,n,r,s){const a=t.length,i=si(t),o=Ii(t),l=Ii(s),u=pi(n,si(s));for(let t=0;t<i;++t){const n=Ai(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Ri(s,a,l)]=e[t]}return u}function DN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;P$(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=FN(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const MN={kernelName:Cu,backendName:"cpu",kernelFunc:DN},ON={kernelName:Hi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;P$(s,"all");const o=hi(a,s.shape);let l=o;const u=$p(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Cp(l.length,s.shape.length)),Ip("all",l,c.shape.length);const[h,d]=wp(c.shape,l),p=si(d),f=Si(si(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wN({inputs:{x:g},backend:n,attrs:{shape:kp(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},LN={kernelName:ji,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;P$(s,"any");const o=hi(a,s.shape);let l=o;const u=$p(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Cp(l.length,s.shape.length)),Ip("any",l,c.shape.length);const[h,d]=wp(c.shape,l),p=si(d),f=Si(si(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wN({inputs:{x:g},backend:n,attrs:{shape:kp(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},zN={kernelName:Ki,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;P$(s,"argMax");let i=hi(a,s.shape);const o=$p(i,s.shape.length);let l=s;const u=[];null!=o&&(l=DN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Cp(i.length,l.shape.length)),i=[i[0]],Ip("argMax",i,l.shape.length);const[c,h]=wp(l.shape,i),d=Si(si(c),"int32"),p=si(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},BN={kernelName:qi,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;P$(s,"argMin");let i=hi(a,s.shape);const o=$p(i,s.shape.length);let l=s;const u=[];null!=o&&(l=DN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Cp(i.length,l.shape.length)),i=[i[0]],Ip("argMin",i,l.shape.length);const[c,h]=wp(l.shape,i),d=Si(si(c),"int32"),p=si(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},PN=U$(Xi,(e=>Math.asin(e))),WN={kernelName:Xi,backendName:"cpu",kernelFunc:PN},VN=U$(Yi,(e=>Math.asinh(e))),UN={kernelName:Yi,backendName:"cpu",kernelFunc:VN},GN=U$(Ji,(e=>Math.atan(e))),HN={kernelName:Ji,backendName:"cpu",kernelFunc:GN},jN=J$(((e,t)=>Math.atan2(e,t))),KN=mN(Qi,jN),qN={kernelName:Qi,backendName:"cpu",kernelFunc:KN},XN=U$(Zi,(e=>Math.atanh(e))),YN={kernelName:Zi,backendName:"cpu",kernelFunc:XN};function JN(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=gh(s.outShape,n),g=m.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}g[I+n*x+t]="avg"===a?y/v:b}}}return m}function ZN(e,t,n,r,s=!1,a=!1){const i=gh(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=gh(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let b=g;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-g;for(let o=p;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function QN(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=gh(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-m;let C=N;for(;C<0;)C+=u;const S=Math.min(s.inDepth,d+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let d=i;for(;d<0;)d+=c;const m=Math.min(s.inHeight,p+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),g=w+n*$;let k=y,I=0,N=0;for(let n=C;n<S;n+=u){const s=x+n*r[1];for(let n=d;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===a?I/N:k}}}}return x}const eC={kernelName:eo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;P$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ei(gd(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=id(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ai(u.inShape,u.outShape))c=K$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ii(s.shape),r=JN(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},tC={kernelName:no,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;P$(s,"avgPool3d");const c=od(s.shape,a,i,1,o,l,u),h=QN(n.data.get(s.dataId).values,s.shape,s.dtype,Ii(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},nC={kernelName:ro,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;P$([s,a],"avgPool3DGrad");const c=od(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,$=k-1-c.padInfo.left,N=w-1-c.padInfo.top,C=gh(a.shape,"float32"),S=1/(f*m*g),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-$;let l=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}C.set(l*S,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},rC={kernelName:to,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;P$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=id(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=gh(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,$=gh(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=$.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},sC={kernelName:Ko,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;ei(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ei(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ei(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),P$([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=p.length,y=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=b&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function aC(e,t,n,r,s){const a=zh(r,t,n),i=si(n),o=Ii(r);if(a){const n=Bh(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=gh(r,s,"string"===s?lg(e):e),u=gh(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?ug(u.values):u.values}function iC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;P$(s,"slice");const[o,l]=Ph(s,a,i);Ch(s,o,l);const u=aC(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const oC={kernelName:ru,backendName:"cpu",kernelFunc:iC},lC={kernelName:ao,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;P$([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=$m(s.shape,a,o),u=Nm(l.length,a.length),c=Cm(s.shape,a,o),h=Sm(i,a.length),d=Em(c,i,a.length),p=wN({inputs:{x:s},backend:n,attrs:{shape:l}}),f=DN({inputs:{x:p},backend:n,attrs:{perm:u}}),m=wN({inputs:{x:f},backend:n,attrs:{shape:c}}),g=iC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function uC(e,t,n,r,s){const a=si(r),i=Si(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function cC(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=gh([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const hC={kernelName:io,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function dC(e){return(t,n,r)=>{const s=pi(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const pC=dC((e=>Math.ceil(e))),fC=G$(lo,pC),mC={kernelName:lo,backendName:"cpu",kernelFunc:fC},gC=U$(uo,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),bC={kernelName:uo,backendName:"cpu",kernelFunc:gC},yC={kernelName:ho,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(si(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function xC(e,t,n,r){const s=fi(n,si(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=si(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?lg(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function vC(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const wC={kernelName:el,backendName:"cpu",kernelFunc:vC};function kC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=hi(s,t[0].shape)[0];let i=vm(t.map((e=>e.shape)),a);if(0===si(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>si(e.shape)>0));if(1===o.length)return K$({inputs:{x:o[0]},backend:n});if(xm(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>hN({inputs:{input:e},backend:n}))),t=o.map((e=>vC({inputs:{input:e},backend:n}))),r=kC({inputs:e,backend:n,attrs:{axis:a}}),s=kC({inputs:t,backend:n,attrs:{axis:a}}),i=lN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=si(e.shape.slice(a));return wN({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=vm(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=xC(u,i,t[0].dtype,c),d=vm(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const IC={kernelName:po,backendName:"cpu",kernelFunc:kC};function $C(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;P$([s,a],"conv2d");const h=bd(l),d=ld(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new rc(d.outShape,s.dtype),w=Ii(s.shape),k=Ii(a.shape),I=w[0],$=x?w[1]:w[2],N=x?w[2]:1,C=x?1:w[1],S=v.strides[0],E=x?v.strides[1]:v.strides[2],T=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*$;for(let e=0;e<d.outWidth;++e){const t=r+e*T,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const NC={kernelName:fo,backendName:"cpu",kernelFunc:$C},CC={kernelName:mo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;P$([s,a],"conv2dBackpropFilter");const h=bd(l),d=ld(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b="channelsLast"===d.dataFormat,y=new rc(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new rc(s.shape,s.dtype,w),$=new rc(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=b?I.get(u,t,n,i)*$.get(u,c,e,o):I.get(u,i,t,n)*$.get(u,o,c,e)}}y.set(l,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},SC={kernelName:go,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;P$([s,a],"conv2dBackpropInput");const h=Ii(a.shape),d=Ii(s.shape);let p=bd(u);const f=ld(i,a.shape,o,1,l,c,!1,p),m=new rc(f.inShape,"float32"),g=m.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:N,inHeight:C,inWidth:S,outChannels:E,outHeight:T,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=$-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,B=M?1:m.strides[1],P=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/A)),a=Math.min(T,(I+r)/A);for(let i=0;i<S;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,($+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=l;r<u;++r){const a=P*e+W*n+V*r,i=x*(I-1-s)+v*($-1-(r*_-o))+w*t;for(let e=0;e<E;++e)c+=b[a+U*e]*y[i+e]}}g[O*e+L*n+z*i+B*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},EC={kernelName:bo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;P$([s,a],"conv3d");const u=ud(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,y=g.left,x=g.top,v=new rc(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,$=Ii(s.shape),N=Ii(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*$[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*$[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*$[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},TC={kernelName:yo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;P$([s,a],"conv3dBackpropFilterV2");const u=Ii(s.shape),c=Ii(a.shape),h=ud(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new rc(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,$=n.data.get(a.dataId).values,[N,C,S,E]=c,T=n.data.get(s.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,b=m*N;for(let m=t;m<n;++m){const t=(e+m*d-D)*A+h,n=m*C+b;for(let e=a;e<i;++e){const a=(s+e*p-O)*_+t,i=e*S+n;for(let e=l;e<u;++e){const t=e*E+i;g+=T[(r+e*f-M)*F+a+o]*$[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},RC={kernelName:xo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;P$([s],"conv3dBackpropInputV2");const u=Ii(s.shape),c=Ii(a.shape),h=ud(l,a.shape,o,1,i),d=new rc(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[$,N,C,S]=c,{batchSize:E,filterDepth:T,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=T-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,(T+r)/P);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(R+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(A+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=l;r<u;++r){const a=r*W-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+k*i,l=$*(T-1-s)+N*(R-1-a)+C*(A-1-(i*V-h))+S*t;for(let e=0;e<O;++e)_+=y[o+e]*I[l+e]}}}p[f*e+m*n+g*i+b*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},AC=U$(vo,(e=>Math.cos(e))),_C={kernelName:vo,backendName:"cpu",kernelFunc:AC},FC=U$(wo,(e=>Math.cosh(e))),DC={kernelName:wo,backendName:"cpu",kernelFunc:FC},MC={kernelName:Io,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[m,g]=o,b=gh([f,m,g,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=Ii(s.shape),k=Ii(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(d-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+m*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+m*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},OC={kernelName:ko,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;P$(s,"cumsum");const l=$p([a],s.shape.length);let u=s;null!=l&&(u=DN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Cp(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=gc(u.dtype,"int32"),d=Si(si(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const g=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=DN({inputs:{x:g},backend:n,attrs:{perm:Np(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},LC={kernelName:$o,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=uC(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=cC(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},zC={kernelName:No,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ei("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),ei(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*d*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,m)}};function BC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;P$([s,a],"depthwiseConv2DNative");const c=Ii(s.shape),h=Ii(a.shape);let d=l;null==d&&(d=[1,1]),ei(gd(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=ld(s.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=p,x=y.left,v=y.top,w=p.outChannels/p.inChannels,k=new rc(p.outShape,s.dtype),I=n.data.get(s.dataId).values,$=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*$[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const PC={kernelName:Co,backendName:"cpu",kernelFunc:BC},WC={kernelName:So,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;P$([s,a],"depthwiseConv2dNativeBackpropFilter");const h=ld(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new rc(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new rc(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new rc(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},VC={kernelName:Eo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;P$([s,a],"depthwiseConv2DNativeBackpropInput");const h=Ii(s.shape),d=Ii(a.shape),p=ld(c,a.shape,i,o,l,u,!0),f=new rc(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[$,N,C]=d,{batchSize:S,filterHeight:E,filterWidth:T,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=E-1-p.padInfo.top,B=T-1-p.padInfo.left,P=F/R;for(let e=0;e<S;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(D,(E+r)/O);for(let i=0;i<_;++i){const o=i-B,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(T+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=$*(E-1-s)+N*(T-1-(r*L-o))+C*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}m[g*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},UC={kernelName:To,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=si(r.shape),a=n.data.get(r.dataId).values,i=gh([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},GC={kernelName:Ro,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:N,outShape:C}=ad(r.shape,s.shape,a,i,"NHWC",o),S=si(C),E=C.length,T=fi(r.dtype,S);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let a=0;a<y;++a){const i=a*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*$;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=Ri([e,a,p,o],c,Ii(r.shape)),f=Ri([t,n,o],d,Ii(s.shape)),m=u[i]+h[f];m>l&&(l=m)}}}T[Ri([e,t,a,o],E,Ii(C))]=l}}}return{dataId:l.write(Hu(T,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},HC={kernelName:_o,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ni(r.shape,u.data.get(r.dataId).values),h=Ni(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=ad(r.shape,s.shape,i,o,"NHWC",l);ei(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Ni(N,u.data.get(a.dataId).values),S=Ei(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}S[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Hu(S,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},jC={kernelName:Ao,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Ni(r.shape,u.data.get(r.dataId).values),h=Ni(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=ad(r.shape,s.shape,i,o,"NHWC",l);ei(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Ni(N,u.data.get(a.dataId).values),S=Ei(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}S[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Hu(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},KC=J$(((e,t)=>e*t)),qC=gN(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),XC=mN(El,KC,qC),YC={kernelName:El,backendName:"cpu",kernelFunc:XC};function JC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;P$(s,"sum"),o="bool"===s.dtype?pN({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):K$({inputs:{x:s},backend:n});const l=o.shape.length,u=hi(a,o.shape),c=$p(u,l);let h=u,d=o;null!=c&&(d=DN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Cp(h.length,l)),Ip("sum",h,d.shape.length);const[p,f]=wp(d.shape,h);let m=cN(n,p,gc(d.dtype,"int32"));const g=si(f),b=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=y[t+e];b[e]=n}if(i){const e=m;m=wN({inputs:{x:m},backend:n,attrs:{shape:kp(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const ZC={kernelName:cu,backendName:"cpu",kernelFunc:JC},QC={kernelName:Do,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Zm(s,a.length);eg(i.length,l,a);const{path:u,steps:c}=tg(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qm(p,l[t]);let s;ng(e)?s=a[t]:(s=DN({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ai(s.shape,i)||(s=wN({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=XC({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=JC({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},eS={kernelName:Oo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;P$([r,s],"eluGrad");const a=new Float32Array(si(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},tS=J$(((e,t)=>e===t?1:0)),nS=mN(zo,tS,null,"bool"),rS={kernelName:zo,backendName:"cpu",kernelFunc:nS},sS=Mm,aS=Om,iS=Lm,oS=zm,lS=Bm,uS=Pm,cS=U$(Lo,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+sS*n);return t*(1-((((uS*r+lS)*r+oS)*r+iS)*r+aS)*r*Math.exp(-n*n))})),hS={kernelName:Lo,backendName:"cpu",kernelFunc:cS},dS=dC((e=>Math.exp(e))),pS=G$(Bo,dS),fS={kernelName:Bo,backendName:"cpu",kernelFunc:pS};function mS(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(ei(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),wN({inputs:{x:s},backend:n,attrs:{shape:o}})}const gS={kernelName:Po,backendName:"cpu",kernelFunc:mS},bS=dC((e=>Math.expm1(e))),yS=G$(Wo,bS),xS={kernelName:Wo,backendName:"cpu",kernelFunc:yS},vS=J$(((e,t)=>e/t)),wS=mN(Fo,vS),kS={kernelName:Fo,backendName:"cpu",kernelFunc:wS},IS=J$(((e,t)=>e-t)),$S=gN(((e,t,n,r)=>({real:e-n,imag:t-r}))),NS=mN(vu,IS,$S),CS={kernelName:vu,backendName:"cpu",kernelFunc:NS};function SS(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=si(u),h=pi("float32",c),d=pi("float32",c);for(let e=0;e<s;e++){const r=iC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=iC({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=lN({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=ES(i,t,n),p=Um(u,c);for(let t=0;t<a;t++){const n=Km(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=lN({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function ES(e,t,n){const r=si(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=TS(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Gu(r,"float32")),i=K$({inputs:{x:a},backend:n}),l=kS.kernelFunc({inputs:{a:e,b:a},backend:n}),u=kS.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o;return Gm(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Ym(s*r,t,n),l=Km(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),qm(r,a,i,s)}return r}(Um(a,i),r,t))}function TS(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Um(e,t),i=n/2,o=Hm(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=lN({inputs:{real:h,imag:d},backend:s}),f=jm(a),m=f.real,g=f.imag,b=[m.length],y=s.makeTensorInfo(b,"float32",m),x=s.makeTensorInfo(b,"float32",g),v=lN({inputs:{real:y,imag:x},backend:s}),w=TS(l,u,i,r,s),k=w.real,I=w.imag,$=[k.length],N=s.makeTensorInfo($,"float32",k),C=s.makeTensorInfo($,"float32",I),S=lN({inputs:{real:N,imag:C},backend:s}),E=TS(m,g,i,r,s),T=E.real,R=E.imag,A=[T.length],_=s.makeTensorInfo(A,"float32",T),F=s.makeTensorInfo(A,"float32",R),D=lN({inputs:{real:_,imag:F},backend:s}),M=Xm(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),B=lN({inputs:{real:L,imag:z},backend:s}),P=XC({inputs:{a:B,b:D},backend:s}),W=xN({inputs:{a:S,b:P},backend:s}),V=NS({inputs:{a:S,b:P},backend:s}),U=hN({inputs:{input:W},backend:s}),G=hN({inputs:{input:V},backend:s}),H=vC({inputs:{input:W},backend:s}),j=vC({inputs:{input:V},backend:s}),K=kC({inputs:[U,G],backend:s,attrs:{axis:0}}),q=kC({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,Y=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:Y}}const RS={kernelName:Vo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=si(r.shape),a=r.shape[r.shape.length-1],i=wN({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=SS(i,!1,n),l=wN({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function AS(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||vi(s),o=fi(i,si(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const _S={kernelName:Uo,backendName:"cpu",kernelFunc:AS},FS={kernelName:Go,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=pi(r.dtype,si(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[i,e,r,o][2],d=Math.round(l-h),p=t+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),a[p]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},DS=dC((e=>Math.floor(e))),MS=G$(Ho,DS),OS={kernelName:Ho,backendName:"cpu",kernelFunc:MS},LS=J$(((e,t)=>Math.floor(e/t))),zS=mN(jo,LS,null,"int32"),BS={kernelName:jo,backendName:"cpu",kernelFunc:zS},PS={kernelName:Du,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=$C({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=xN({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=oN(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},WS={kernelName:Mu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=BC({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=m;m=xN({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=oN(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},VS={kernelName:Xo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=si(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Tm(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=gh([u,c],r.dtype),p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=[];let n=0;for(let r=0;r<o;r++){const s=p[e*o+r];n+=s*h[r],t.push(s)}if(n<0||n>=a/c)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<c;t++)d.values[e*c+t]=f[n*c+t]}return n.makeTensorInfo(l,d.dtype,d.values)}};function US(e,t,n){const r=gh(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}const GS={kernelName:qo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;P$([s,a],"gatherV2");let l=o;null==o&&(l=0);const u=si(a.shape),c=og(s,a,hi(i,s.shape)[0],l),h=wN({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=wN({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),m=US(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},HS=J$(((e,t)=>e>t?1:0)),jS=mN(Yo,HS,null,"bool"),KS={kernelName:Yo,backendName:"cpu",kernelFunc:jS},qS=J$(((e,t)=>e>=t?1:0)),XS=mN(Jo,qS,null,"bool"),YS={kernelName:Jo,backendName:"cpu",kernelFunc:XS},JS={kernelName:Qo,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=si(r.shape),a=r.shape[r.shape.length-1],i=wN({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=SS(i,!0,n),l=wN({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},ZS=U$(tl,(e=>Number.isFinite(e)?1:0),"bool"),QS={kernelName:tl,backendName:"cpu",kernelFunc:ZS},eE=U$(nl,(e=>Math.abs(e)===1/0?1:0),"bool"),tE={kernelName:nl,backendName:"cpu",kernelFunc:eE},nE=U$(rl,(e=>Number.isNaN(e)?1:0),"bool"),rE={kernelName:rl,backendName:"cpu",kernelFunc:nE},sE=J$(((e,t)=>e<t?1:0)),aE=mN(al,sE,null,"bool"),iE={kernelName:al,backendName:"cpu",kernelFunc:aE},oE=J$(((e,t)=>e<=t?1:0)),lE=mN(il,oE,null,"bool"),uE={kernelName:il,backendName:"cpu",kernelFunc:lE};function cE(e,t,n){const r=(t-e)/(n-1),s=Si(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const hE={kernelName:ol,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=cE(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},dE=dC((e=>Math.log(e))),pE=G$(ll,dE),fE={kernelName:ll,backendName:"cpu",kernelFunc:pE},mE=U$(ul,(e=>Math.log1p(e))),gE={kernelName:ul,backendName:"cpu",kernelFunc:mE},bE=J$(((e,t)=>e&&t)),yE=mN(cl,bE,null,"bool"),xE={kernelName:cl,backendName:"cpu",kernelFunc:yE},vE=U$(hl,(e=>e?0:1),"bool"),wE={kernelName:hl,backendName:"cpu",kernelFunc:vE},kE=J$(((e,t)=>e||t)),IE=mN(dl,kE,null,"bool"),$E={kernelName:dl,backendName:"cpu",kernelFunc:IE},NE={kernelName:pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;P$(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=si(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},CE={kernelName:fl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;P$(i,"LRNGrad");const h=si(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function SE(e,t,n,r){const s=pi(r,si(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}function EE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=hi(a,l);let h=c;const d=$p(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=FN(p,l,s.dtype,d,e),h=Cp(h.length,u),l=e}P$(s,"max"),Ip("max",h,u);const[f,m]=wp(l,h),g=SE(p,si(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return i&&(y=kp(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const TE={kernelName:ml,backendName:"cpu",kernelFunc:EE},RE=J$(((e,t)=>Math.max(e,t))),AE=mN(gl,RE),_E={kernelName:gl,backendName:"cpu",kernelFunc:AE},FE={kernelName:bl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;P$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ei(gd(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=id(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ai(u.inShape,u.outShape))c=K$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Ii(s.shape),r=JN(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},DE={kernelName:xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;P$(s,"maxPool3d");const c=od(s.shape,a,i,1,o,l,u),h=QN(n.data.get(s.dataId).values,s.shape,s.dtype,Ii(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},ME={kernelName:vl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;P$([s,a],"maxPool3DGrad");const c=od(a.shape,i,o,1,l,u),h=function(e,t){const n=gh(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(m,t,r,a,g);o>=$&&($=o,N=n*c*h+s*c+i)}}}n.set(N,m,b,r,s,g)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,$=gh(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let l=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*v-1-h.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;0!==d&&(l+=N.get(e,r,a,u,t)*d)}}}$.set(l,e,n,r,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},OE={kernelName:yl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;P$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=id(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=gh(d.outShape,o.dtype,ZN(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=gh(o.shape,"float32"),$=n.data.get(s.dataId).values,N=gh(s.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/m;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},LE={kernelName:wl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;P$(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=id(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=JN(e,0,n,Ii(t),s,"max"),i=ZN(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},zE={kernelName:kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=hi(a,s.shape),l=si(wp(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=pN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=wS({inputs:{a:h,b:c},backend:n});u.push(d);const p=JC({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},BE={kernelName:Il,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;P$(s,"min");const o=hi(a,s.shape);let l=o;const u=$p(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Cp(l.length,s.shape.length)),Ip("min",l,c.shape.length);const[h,d]=wp(c.shape,l),p=si(d),f=Si(si(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=wN({inputs:{x:g},backend:n,attrs:{shape:kp(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},PE=J$(((e,t)=>Math.min(e,t))),WE=mN($l,PE),VE={kernelName:$l,backendName:"cpu",kernelFunc:WE},UE={kernelName:Nl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;P$(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Ii(s.shape),f=si(o),m=o.length,g=Ii(o),b=pi(s.dtype,f);for(let e=0;e<f;e++){let t=Ai(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ri(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},GE=J$(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),HE=mN(Cl,GE),jE={kernelName:Cl,backendName:"cpu",kernelFunc:HE};function KE(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=hi([o],s.shape),u=EE({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=kp(u.shape,l),h=wN({inputs:{x:u},backend:n,attrs:{shape:c}}),d=NS({inputs:{a:s,b:h},backend:n}),p=pS({inputs:{x:d},backend:n}),f=JC({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),m=wN({inputs:{x:f},backend:n,attrs:{shape:c}}),g=wS({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const qE={kernelName:pu,backendName:"cpu",kernelFunc:KE},XE={kernelName:Sl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;P$(s,"multinomial");const l=o?s:KE({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=Si(si(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Mp.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function YE(e,t,n){const r=Gu(-1,n);return KC([],t,r,e,n)}const JE={kernelName:Tl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;P$(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=YE(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},ZE=Of,QE={kernelName:Al,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;P$(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=ZE(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},eT=Lf,tT={kernelName:_l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;P$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=eT(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nT=zf,rT={kernelName:Fl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;P$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=nT(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},sT=J$(((e,t)=>e!==t?1:0)),aT=mN(Rl,sT,null,"bool"),iT={kernelName:Rl,backendName:"cpu",kernelFunc:aT},oT={kernelName:Ml,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;P$(s,"oneHot");const l=si(s.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function lT(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=hN({inputs:{input:r},backend:n}),t=lT({inputs:{x:e},backend:n}),s=vC({inputs:{input:r},backend:n}),a=lT({inputs:{x:s},backend:n}),i=lN({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return AS({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const uT={kernelName:Ru,backendName:"cpu",kernelFunc:lT},cT={kernelName:Dl,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=hN({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=vC({inputs:{input:s},backend:r}),i=lT({inputs:{x:a},backend:r}),o=lN({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return AS({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function hT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return mS({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{ti(a,e.shape,"All tensors passed to stack must have matching shapes"),ei(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=kC({inputs:t.map((e=>{const t=mS({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const dT={kernelName:Ol,backendName:"cpu",kernelFunc:hT},pT={kernelName:Ll,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;P$(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=si(s.shape),h=s.shape.length,d=Ii(s.shape),p=si(o),f=o.length,m=Ii(o),g=pi(s.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Ri(Ai(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},fT=J$(((e,t)=>Math.pow(e,t))),mT=mN(zl,fT),gT={kernelName:zl,backendName:"cpu",kernelFunc:mT};function bT(e,t,n,r){const[s,a]=wp(e,r),i=gc(t,"int32"),o=Si(si(s),i),l=si(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const yT={kernelName:Pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;P$(s,"prod");const o=s.shape.length,l=hi(a,s.shape),u=$p(l,o);let c=l,h=s;const d=[];null!=u&&(h=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Cp(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=bT(h.shape,h.dtype,p,c);let b=m;return i&&(b=kp(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}};function xT(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Si(0,r);const s=Si(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const vT={kernelName:Wl,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=xT(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},wT=U$(Ul,(e=>1/e)),kT={kernelName:Ul,backendName:"cpu",kernelFunc:wT},IT={kernelName:ql,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;P$(s,"resizeBilinear");const l=Ii(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(si([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=b[0]/y[0],w=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*r,i=a+(n+(m[b+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},$T={kernelName:Xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;P$([a,s],"resizeBilinearGrad");const o=Ii(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&d>1?u-1:u,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],m=a+r*o[2],g=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,$=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[b+e]+=t*$}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},NT={kernelName:jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;P$(s,"resizeNearestNeighbor");const l=Ii(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},CT={kernelName:Kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;P$([a,s],"resizeNearestNeighborGrad");const o=Ii(s.shape),l=Ii(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,m=new Float32Array(u*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,$=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-$/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<$;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},ST={kernelName:Jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;P$(s,"reverse");const i=s.shape.length,o=hi(a,s.shape);if(0===i)return K$({inputs:{x:s},backend:n});const l=new rc(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},ET={kernelName:_u,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=pi(r.dtype,si(r.shape)),[u,c,h,d]=r.shape,[p,f]=Im(i,c,h),m=Math.sin(s),g=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],y=o[2],x=o[1];let v=(y-p)*g-(x-f)*m,w=(y-p)*m+(x-f)*g;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=b[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},TT=U$(Zl,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),RT={kernelName:Zl,backendName:"cpu",kernelFunc:TT},AT=dC((e=>1/Math.sqrt(e))),_T=G$(Ql,AT),FT={kernelName:Ql,backendName:"cpu",kernelFunc:_T};function DT(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return gh(n,t.dtype);const p=gh(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const MT={kernelName:eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=_m(0,s,i),d=DT(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},OT={kernelName:tu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;P$([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=gc(s.dtype,a.dtype),h=Si(si(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:si(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},LT=Fm,zT=Dm,BT=U$(nu,(e=>e>=0?zT*e:LT*(Math.exp(e)-1))),PT={kernelName:nu,backendName:"cpu",kernelFunc:BT},WT=U$(iu,(e=>e<0?-1:e>0?1:0)),VT={kernelName:iu,backendName:"cpu",kernelFunc:WT},UT=U$(su,(e=>Math.sin(e))),GT={kernelName:su,backendName:"cpu",kernelFunc:UT},HT=U$(au,(e=>Math.sinh(e))),jT={kernelName:au,backendName:"cpu",kernelFunc:HT},KT=Math.log(1.1920928955078125e-7)+2,qT=U$(lu,(e=>{const t=e>-KT,n=e<KT,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),XT={kernelName:lu,backendName:"cpu",kernelFunc:qT},YT={kernelName:hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;P$([s],"spaceToBatchND");const o=si(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=pT.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=$m(u.shape,a,o,!1),h=Nm(c.length,a.length,!1),d=Cm(u.shape,a,o,!1),p=wN({inputs:{x:u},backend:n,attrs:{shape:c}}),f=DN({inputs:{x:p},backend:n,attrs:{perm:h}}),m=wN({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function JT(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[fi(n,0),[0,h],fi(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++f[n],d=d&&n>=p,p=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=fi(n,t*h),d=fi(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[o,h],d,u,c]}}const ZT={kernelName:fu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=JT(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function QT(e,t,n,r,s){const a=si(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}\n          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${l}`);l[c]=e}const h=si(l);if(h!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${l}`);const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=fi(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],l]}const eR={kernelName:mu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=QT(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},tR={kernelName:gu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=_m(0,s,o),p=DT(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},nR={kernelName:du,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=hi(i,s.shape)[0],l=sg(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=iC({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},rR=U$(uu,(e=>Math.sqrt(e))),sR={kernelName:uu,backendName:"cpu",kernelFunc:rR},aR={kernelName:yu,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;P$(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},iR=J$(((e,t)=>{const n=e-t;return n*n})),oR=mN(bu,iR),lR={kernelName:bu,backendName:"cpu",kernelFunc:oR},uR=U$(Au,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),cR={kernelName:Au,backendName:"cpu",kernelFunc:uR};function hR(e,t,n,r){const s=gh(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const dR={kernelName:xu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;P$(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=Wh(s.shape,a,i,o,l,u,c,h,d),x=wN({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=iC({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=wN({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else{const e=hR(y,n.bufferSync(x),m,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=wN({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},pR=U$(wu,(e=>Math.tan(e))),fR={kernelName:wu,backendName:"cpu",kernelFunc:pR},mR=U$(ku,(e=>Math.tanh(e)));function gR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=gh(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function bR(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=pi(n,i*r),u=pi("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=l.subarray(i,i+r),h=u.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[gh(c,n,l),gh(c,"int32",u)]}function yR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Za(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Za(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Za(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function xR(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function vR(e,t,n,r,s,a,i,o,l,u,c){return xR(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function wR(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*xR(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*xR(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*xR(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*xR(e,t,n,r,s,a,i,p,f,u,c))}function kR(e,t,n,r){const s=hi(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new rc(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new rc(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const IR=[NN,SN,TN,AN,vN,_N,ON,LN,zN,BN,WN,UN,HN,qN,YN,eC,tC,nC,rC,$N,sC,lC,hC,fN,mC,bC,uN,yC,IC,CC,SC,NC,TC,RC,EC,_C,DC,MC,OC,LC,zC,PC,WC,VC,UC,GC,jC,HC,kS,QC,j$,eS,rS,hS,fS,gS,xS,RS,_S,FS,OS,BS,PS,WS,VS,GS,KS,YS,q$,JS,wC,QS,tE,rE,Y$,iE,uE,hE,fE,gE,xE,wE,$E,NE,CE,_E,FE,DE,ME,OE,LE,TE,zE,BE,VE,UE,jE,XE,YC,JE,QE,tT,rT,iT,oT,cT,dT,pT,gT,eN,yT,vT,dN,kT,nN,sN,kN,IT,$T,NT,CT,ST,ET,RT,FT,MT,OT,PT,iN,VT,GT,jT,oC,qE,XT,YT,ZT,eR,tR,nR,sR,aR,lR,cR,dR,CS,ZC,fR,{kernelName:ku,backendName:"cpu",kernelFunc:mR},{kernelName:Iu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;P$(s,"tile");const i=gR(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:$u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;P$(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=bR(o,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},MN,{kernelName:Nu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=[c,f,m,p],b=Ii(s.shape),y=b[0],x=b[1],v=b[2],w=pi(s.dtype,si(g));w.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=yR(c,d,o),m=yR(p,h,o);switch(i){case"nearest":a=vR(k,h,d,y,x,v,e,m,f,s,l);break;case"bilinear":a=wR(k,h,d,y,x,v,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*y+n*x+r*v+s]=a}return r.makeTensorInfo(g,s.dtype,w)}return{dataId:r.write(w,g,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:Su,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;P$(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=kR(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=iC({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=wN({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Tu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;P$(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=mS({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Gu(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=nS({inputs:{a:r,b:c},backend:n}),i=pN({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=XC({inputs:{a:i,b:s},backend:n}),h=JC({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=hT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},uT];for(const e of IR)Wu(e);const $R={},NR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function CR(e){if(!(e in $R)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete $R[e]}),!1),1===e?t.getContext("webgl",NR)||t.getContext("experimental-webgl",NR):t.getContext("webgl2",NR)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;$R[e]=t}const t=$R[e];return t.isContextLost()?(delete $R[e],CR(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),$R[e])}var SR,ER,TR;function RR(e,t){return[t,e]}function AR(e){const t=si(e);return oi(Math.ceil(t/4))}function _R(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function FR(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===Mi().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function DR(e,t){const n=t();return Mi().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function MR(e){return!!(Mi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function OR(e,t){return GR(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(SR||(SR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(ER||(ER={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(TR||(TR={}));const LR=/ERROR: [0-9]+:([0-9]+):/g;function zR(e,t){if(DR(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function BR(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(DR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),DR(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),DR(e,(()=>e.enableVertexAttribArray(o))),!0)}function PR(e,t,n,r){DR(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),DR(e,(()=>e.activeTexture(e.TEXTURE0+n))),DR(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),DR(e,(()=>e.uniform1i(n,r)))}function WR(e,t,n){DR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),DR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function VR(e,t){DR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),DR(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function UR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function GR(e,t,n){const r=DR(e,(()=>t()));if(null==r)throw new Error(n);return r}function HR(e,t=2){return si(e.slice(0,e.length-t))}function jR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function KR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[HR(e),...jR(e)]),t}function qR(e){return e%2==0}function XR(e,t){if(ai(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(qR(n)&&qR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&qR(e[0])&&qR(t[0])}let YR,JR;function ZR(e,t){return null!=e.getExtension(t)}function QR(e){try{if(null!=CR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function eA(e){const t=FR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function tA(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&ei("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const nA=Mi();function rA(){let e,t,n,r,s,a,i,o,l,u;return 2===Mi().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function sA(e,t,n="index"){const r=Ii(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function aA(e){const t=Ii(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}nA.registerFlag("HAS_WEBGL",(()=>nA.getNumber("WEBGL_VERSION")>0)),nA.registerFlag("WEBGL_VERSION",(()=>QR(2)?2:QR(1)?1:0)),nA.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),nA.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===nA.get("WEBGL_VERSION"))),nA.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),nA.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),nA.registerFlag("WEBGL_PACK",(()=>nA.getBool("HAS_WEBGL"))),nA.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_CLIP",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_PACK_REDUCE",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_LAZILY_UNPACK",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_CONV_IM2COL",(()=>nA.getBool("WEBGL_PACK"))),nA.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==YR){const t=CR(e);YR=t.getParameter(t.MAX_TEXTURE_SIZE)}return YR}(nA.getNumber("WEBGL_VERSION")))),nA.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==JR){const t=CR(e);JR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,JR)}(nA.getNumber("WEBGL_VERSION")))),nA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=nA.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=CR(e);return t=ZR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ZR(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),nA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>nA.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ec())),nA.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=CR(e);if(1===e){if(!ZR(t,"OES_texture_float"))return!1}else if(!ZR(t,"EXT_color_buffer_float"))return!1;return eA(t)}(nA.getNumber("WEBGL_VERSION")))),nA.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!nA.getBool("WEBGL_FORCE_F16_TEXTURES")&&nA.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),nA.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=CR(e);if(1!==e){if(ZR(t,"EXT_color_buffer_float"))return eA(t);const e="EXT_color_buffer_half_float";if(ZR(t,e)){const n=t.getExtension(e);return function(e,t){const n=FR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!ZR(t,"OES_texture_float")&&!!ZR(t,"WEBGL_color_buffer_float")&&eA(t)}(nA.getNumber("WEBGL_VERSION")))),nA.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=nA.getNumber("WEBGL_VERSION"))&&null!=CR(e).fenceSync;var e})),nA.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>nA.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),nA.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),nA.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ec()&&nA.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const iA="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class oA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=SR.DENSE;const t=AR(e),n=rA();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${sA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class lA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=SR.DENSE;const t=AR(e),n=rA();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${sA(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class uA{constructor(e){this.variableNames=["A"],this.outTexUsage=ER.DOWNLOAD;const t=rA();this.outputShape=e,this.userCode=`\n      ${iA}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class cA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ER.DOWNLOAD;const t=rA();this.outputShape=e,this.userCode=`\n      ${iA}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class hA{constructor(e,t,n=!1){this.variableNames=["A"];const r=rA(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${aA(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class dA{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=rA(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${aA(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function pA(e,t,n,r,s,a){!function(e,t){const n=Mi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return GR(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return DR(e,(()=>e.bindTexture(o,i))),DR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),DR(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),DR(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),DR(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),DR(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),DR(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function fA(e){return e.internalFormatFloat}function mA(e){return e.internalFormatHalfFloat}function gA(e){return e.downloadTextureFormat}function bA(e){return e.internalFormatPackedFloat}function yA(e){return e.internalFormatPackedHalfFloat}class xA{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Mi().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){$R[e]=t}(t,e)):this.gl=CR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Mi().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=OR(this.gl,e),ZR(this.gl,t))this.textureHalfFloatExtension=OR(this.gl,t);else if(Mi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ZR(this.gl,r))this.colorBufferHalfFloatExtension=OR(this.gl,r);else if(Mi().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ZR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ZR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=GR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return DR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),DR(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=GR(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return DR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),DR(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return GR(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=FR(this.gl,this.textureHalfFloatExtension)}get debug(){return Mi().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;DR(e,(()=>e.finish())),DR(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),DR(e,(()=>e.deleteFramebuffer(this.framebuffer))),DR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),DR(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),DR(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=RR(t,n);return pA(e,s,a,fA(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=RR(t,n);return pA(e,s,a,mA(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=RR(t,n);return pA(e,s,a,gA(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){DR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?DR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):DR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),DR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;DR(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),DR(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),DR(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=_R(t,n);return pA(e,s,a,yA(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=_R(t,n);return pA(e,s,a,bA(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(VR(this.gl,this.framebuffer),this.outputTexture=null),DR(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=RR(t,n),i=new Uint8Array(t*n*4);return DR(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=_R(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();DR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return DR(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),DR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),DR(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Mi().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return DR(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=GR(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(DR(e,(()=>e.shaderSource(n,t))),DR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=LR.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>li((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${li(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=rA();return function(e,t){const n=GR(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(DR(e,(()=>e.shaderSource(n,t))),DR(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return GR(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return DR(t,(()=>t.attachShader(r,this.vertexShader))),DR(t,(()=>t.attachShader(r,n))),function(e,t){if(DR(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&zR(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return DR(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),BR(e,t,"clipSpacePos",n,3,20,0)&&BR(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&DR(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&zR(this.gl,this.program),DR(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return GR(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),DR(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),PR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=_R(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&zR(this.gl,this.program),UR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),DR(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),DR(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=OR(this.gl,2===Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ui((()=>this.disposed||this.isQueryAvailable(e,Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ui((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),WR(this.gl,e,this.framebuffer),this.debug&&UR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(WR(this.gl,this.outputTexture,this.framebuffer),this.debug&&UR(this.gl)):VR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;WR(r,e,this.framebuffer),this.debug&&UR(r),this.outputTexture=e,DR(r,(()=>r.viewport(0,0,t,n))),DR(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),DR(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:vA}=r;function wA(e,t,n,r){const s=[];e.forEach((e=>{const t=si(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?IA(e):kA(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=vA(e.shapeInfo.logicalShape,t.logicalShape),l=RA(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===si(e.shapeInfo.logicalShape),m=1===si(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ai(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=RA(l),c=vA(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=rA(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${$A}\n    ${NA}\n    ${CA}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ai(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return ai(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=sA(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=sA(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=sA(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=sA(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=SA),[d,u,h,a,c,i,n].join("\n")}function kA(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${EA(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${TA(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=EA(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&ai(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=di(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${kA(AA(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${_A(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${TA(e)}\n      }\n    `;const l=s[0],u=s[1],c=EA(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=di(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${kA(AA(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${_A(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${TA(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${EA(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:l}=di(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${kA(AA(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${_A(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${TA(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${EA(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=di(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${kA(AA(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${_A(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${TA(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${EA(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=di(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${kA(AA(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${_A(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${TA(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${EA(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function IA(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${rA().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=rA();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=rA();if(null!=s&&ai(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${IA(AA(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${_A(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${rA().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${rA().texture2D}(${r}, uv);\n    }\n  `}(e)}}const $A="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NA="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",CA="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",SA="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function EA(e){return`offset${e}`}function TA(e){const t=e.name,n=si(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function RA(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function AA(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function _A(e,t){return t.map((t=>e[t])).join(", ")}function FA(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!ai(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!ai(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:DA,bincountImpl:MA,bincountReduceImpl:OA,ceilImpl:LA,concatImpl:zA,expImpl:BA,expm1Impl:PA,floorImpl:WA,gatherV2Impl:VA,greaterImpl:UA,lessImpl:GA,linSpaceImpl:HA,logImpl:jA,maxImpl:KA,maximumImpl:qA,minimumImpl:XA,multiplyImpl:YA,negImpl:JA,prodImpl:ZA,rangeImpl:QA,rsqrtImpl:e_,simpleAbsImpl:t_,sliceImpl:n_,sparseFillEmptyRowsImpl:r_,sparseReshapeImpl:s_,stridedSliceImpl:a_,subImpl:i_,tileImpl:o_,topKImpl:l_,transposeImpl:u_,uniqueImpl:c_}=s;function h_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function d_(e,t){return 1===t?[e]:h_(e,t)}class p_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=d_("rc",t),r=RA(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class f_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${sA(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${aA(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class m_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=b_(t,n),s=y_(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=g_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===TR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===TR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===TR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===TR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===TR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=b_(n,r),a=y_(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=g_(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Mi().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function g_(e,t,n,r,s){const a=function(e,t){switch(e){case TR.PACKED_2X2_FLOAT32:return bA(t);case TR.PACKED_2X2_FLOAT16:return yA(t);case TR.UNPACKED_FLOAT32:return fA(t);case TR.UNPACKED_FLOAT16:return mA(t);case TR.PACKED_4X1_UNSIGNED_BYTE:return gA(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=_R(e[0],e[1]);i=t*n}else{const[t,n]=RR(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function b_(e,t){if(e===ER.UPLOAD)return TR.PACKED_2X2_FLOAT32;if(e===ER.RENDER||null==e)return function(e){return Mi().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TR.PACKED_2X2_FLOAT32:TR.UNPACKED_FLOAT32:e?TR.PACKED_2X2_FLOAT16:TR.UNPACKED_FLOAT16}(t);if(e===ER.DOWNLOAD||e===ER.PIXELS)return TR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function y_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class x_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const v_="return abs(x);",w_="return x;";class k_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class I_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=d_("rc",t),r=RA(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const $_=cg,N_={};class C_ extends Xa{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Mi().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=CR(Mi().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Mi().getNumber("WEBGL_VERSION"))in N_||(N_[t]={}),N_[t]),this.gpgpu=new xA(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new m_(this.gpgpu),this.numMBBeforeWarning=null==Mi().global.screen?1024:Mi().global.screen.height*Mi().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new qa(this,Hh())}nextDataId(){return C_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Mi().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Mi().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:ER.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(Mi().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:ER.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new k_(i,w_):new x_(i,w_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=ju()),c="complex64"===r?Um(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=ju()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new k_(r,w_):new x_(r,w_);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Mi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Mi().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&Mi().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...AR(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Um(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=si(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Hh().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>qu(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return gh(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!MR(n)){if(Mi().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=si(t);if(Mi().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...AR(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=Mi().getBool("WEBGL_PACK")&&!0===r,i=a?KR(t):t,o=a?new cA(i):new uA(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ri(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ri(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ju(),endMs:null}}endTimer(e){return Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ju(),e)}async getQueryTime(e){if(Mi().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return Mi().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&si(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Wm("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return $_(e.shape,t)}packedUnaryOp(e,t,n){const r=new k_(e.shape,t),s=this.compileAndRun(r,[e],n);return Hh().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=t_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Mi().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,v_,e.dtype);const t=new x_(e.shape,v_),n=this.compileAndRun(t,[e]);return Hh().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&yi(n[0])){const s=n.map((e=>Ku(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Hh().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new I_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new p_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[HR(e.shape),...jR(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[HR(t),...jR(t)],a=new f_(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=KR(r);let i;return i=n?new lA(a):new oA(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===SR.DENSE){const t=AR(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===si(a.shape))return i.values=pi(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&si(t.shape)<=Mi().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!XR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=wA(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===Mi().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(u,r,s),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,s)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,r,s){FA(t.inShapeInfos,n),FA([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===Mi().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(si(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=Mi().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=ju();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Mi().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Mi().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Kh((()=>{if(!Mi().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Mi().getBool("DEBUG");Mi().set("DEBUG",!1);const t=this.abs(Zh(1e-8)).dataSync()[0];if(Mi().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=ju());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Mi().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Qa(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=di(e);e=t.newShape}let r=si(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=HR(e);let n=2,s=2;return e.length&&([n,s]=jR(e)),r=t*(n/2)*(s/2),oi(r).map((e=>2*e))}return oi(r)}(n,o),t.texShape=c),null!=s){const e=KR(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=_R(c[0],c[1]),a=new dA(e,[h,i],d)):a=new hA(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?ER.PIXELS:ER.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,m=this.runWebGLProgram(a,[p],r,null,f),g=this.texData.get(m.dataId);t.texture=g.texture,t.texShape=g.texShape,t.isPacked=g.isPacked,t.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,l&&(this.uploadWaitMs+=ju()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*bi(t)}}C_.nextDataId=0,Tc()&&Yh("webgl",(()=>new C_),2);class S_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Gd(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class E_{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Gd(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===si(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${RA(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=d_("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function T_(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const R_={kernelName:Zo,backendName:"webgl",kernelFunc:T_};function A_(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=T_({inputs:{x:r},backend:n}),l=T_({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const __={kernelName:co,backendName:"webgl",kernelFunc:A_},F_="return (a < 0.) ? b * a : a;",D_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",M_={kernelName:sl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Gu(a,"float32")),o=Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(D_,s.shape,i.shape):new S_(F_,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),l}},O_="return (a < 0.) ? b * a : a;",L_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",z_={kernelName:Bl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(L_,r.shape,s.shape):new S_(O_,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function B_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Mi().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new k_(i.shape,t):new x_(i.shape,e),o.runWebGLProgram(u,[i],l)}}function P_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new S_(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],gc(n.dtype,r.dtype))})),a=A_({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||gc(l.dtype,u.dtype);if(c.shouldExecuteOnCPU([l,u])&&null!=s){const e=c.texData.get(l.dataId),t=c.texData.get(u.dataId),[n,r]=s(l.shape,u.shape,e.values,t.values,h),a=c.makeTensorInfo(r,h);return c.texData.get(a.dataId).values=n,a}let d;return d=Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new E_(t,l.shape,u.shape,n):new S_(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function W_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?L_:O_;if("leakyrelu"===e)return t?D_:F_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class V_{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class U_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Gd(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const G_="return a * b;";function H_(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=gc(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new U_("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new U_("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=A_({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=YA(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_(G_,r.shape,s.shape):new S_(G_,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const j_={kernelName:El,backendName:"webgl",kernelFunc:H_};function K_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=si(s.shape),l=ci(a,o),u=si(l);ei(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||XR(s.shape,l)||null!==c.texture&&XR(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[HR(e.shape),...jR(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[HR(t),...jR(t)],i=new f_(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,i)}const q_={kernelName:Hl,backendName:"webgl",kernelFunc:K_};class X_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${ii(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Y_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function J_(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=km(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new X_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new X_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Y_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class Z_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=RA(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Q_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=RA(this.rank),s=h_("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function eF(e,t,n){const r=Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Q_(e.shape,t):new Z_(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function tF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=hi(s,e.shape);let o=i;const l=$p(o,a),u=null!=l;let c=e;u&&(c=eF(e,l,r),o=Cp(o.length,a)),Ip("sum",o,a);const[h,d]=wp(c.shape,o);let p=h;n&&(p=kp(h,i));const f=si(d),m=K_({inputs:{x:c},attrs:{shape:[si(e.shape)/f,f]},backend:r}),g=J_(m,bc(e.dtype),"sum",r),b=K_({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const nF={kernelName:cu,backendName:"webgl",kernelFunc:tF};function rF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=u_(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=eF(s,a,i);return u}const sF={kernelName:Cu,backendName:"webgl",kernelFunc:rF};function aF({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=si(m),y=si(g);ei(u>=2&&c>=2&&(b===y||1===b||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(b>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);ei(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[b,h,p]:[b,p,h],w=r?[y,f,d]:[y,d,f],k=K_({inputs:{x:e},backend:s,attrs:{shape:v}}),I=K_({inputs:{x:t},backend:s,attrs:{shape:w}}),$=[k,I],N=Math.max(b,y),C=n?k.shape[1]:k.shape[2],S=null!=a,E=null!=i,T="leakyrelu"===l,R=null!=l?W_(l,!0):null;let A;if((1===p||1===f)&&C>1e3&&!1===(S||E||T||null!=R)){let e=k,t=I;n&&(e=rF({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=rF({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===f;let i=e;1!==f&&(i=K_({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),$.push(i));const o=1===f?2:1;let l=t;a&&(l=K_({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),$.push(l));const u=H_({inputs:{a:i,b:l},backend:s});A=tF({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=gc(e.dtype,t.dtype),u=new V_(v,w,[N,p,f],n,r,S,R,E,T),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),T){const e=s.makeTensorInfo([],"float32",Gu(o,"float32"));c.push(e),$.push(e)}A=s.runWebGLProgram(u,c,l)}const _=K_({inputs:{x:A},backend:s,attrs:{shape:x}});$.push(A);for(const e of $)s.disposeIntermediateTensorInfo(e);return _}const iF={kernelName:Fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return aF({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},oF="return abs(x);",lF={kernelName:Pi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=t_(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=Mi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new k_(r.shape,oF):new x_(r.shape,oF),n.runWebGLProgram(s,[r],r.dtype)}},uF=B_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),cF={kernelName:Wi,backendName:"webgl",kernelFunc:uF},hF=B_({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),dF={kernelName:Vi,backendName:"webgl",kernelFunc:hF},pF="return a + b;",fF=P_({opSnippet:pF,packedOpSnippet:pF,supportsComplex:!0,cpuKernelImpl:DA}),mF={kernelName:Ui,backendName:"webgl",kernelFunc:fF};class gF{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class bF{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const yF={kernelName:Gi,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return T_({inputs:{x:s[0]},backend:r});if(s.length>Mi().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>gc(e,t))),i=s.map((e=>e.shape)),o=Mi().getBool("WEBGL_PACK")?new bF(s[0].shape,i):new gF(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},xF={kernelName:Hi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=hi(a,s.shape);let u=l;const c=$p(u,o);let h=s;null!=c&&(h=rF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Cp(u.length,o)),Ip("all",u,o);const[d,p]=wp(h.shape,u),f=K_({inputs:{x:h},backend:n,attrs:{shape:[-1,si(p)]}}),m=J_(f,f.dtype,"all",n);let g;return g=K_(i?{inputs:{x:m},backend:n,attrs:{shape:kp(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},vF={kernelName:ji,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=hi(a,s.shape);let u=l;const c=$p(u,o);let h=s;null!=c&&(h=rF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Cp(u.length,o)),Ip("any",u,o);const[d,p]=wp(h.shape,u),f=K_({inputs:{x:h},backend:n,attrs:{shape:[-1,si(p)]}}),m=J_(f,f.dtype,"any",n);let g;return g=K_(i?{inputs:{x:m},backend:n,attrs:{shape:kp(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class wF{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class kF{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,ei(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=RA(o),u=d_("coords",o);let c,h;if(1===a){h=o+1;const e=RA(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=d_("sourceLocR",h-1).concat("inIdx.r"),g=d_("sourceLocG",h-1).concat("inIdx.g"),b=d_("sourceLocB",h-1).concat("inIdx.b"),y=d_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function IF(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=km(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new wF(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=IF(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function $F(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=km(s[s.length-1]),i=new kF(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=$F(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function NF(e,t,n,r){const s=[n];if(Ip("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Mi().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=wp(t.shape,s),o=si(i),l=K_({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=IF(e,l,r);n.push(u);const c=K_({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return $F(e,t,r)}const CF={kernelName:Ki,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=hi(a,s.shape);const o=$p(i,s.shape.length);let l=s;const u=[];null!=o&&(l=rF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Cp(i.length,l.shape.length)),Ip("argMax",[i[0]],l.shape.length);const c=NF(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},SF={kernelName:qi,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=hi(a,s.shape);const o=$p(i,s.shape.length);let l=s;const u=[];null!=o&&(l=rF({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Cp(i.length,l.shape.length)),Ip("argMin",[i[0]],l.shape.length);const c=NF(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},EF=B_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),TF={kernelName:Xi,backendName:"webgl",kernelFunc:EF},RF=B_({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),AF={kernelName:Yi,backendName:"webgl",kernelFunc:RF},_F=B_({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),FF={kernelName:Ji,backendName:"webgl",kernelFunc:_F},DF=P_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),MF={kernelName:Qi,backendName:"webgl",kernelFunc:DF},OF=B_({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),LF={kernelName:Zi,backendName:"webgl",kernelFunc:OF};class zF{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class BF{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const PF={kernelName:eo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;tA(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ei(gd(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=id(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ai(u.inShape,u.outShape))return T_({inputs:{x:s},backend:n});const c=new zF(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},WF={kernelName:no,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=od(s.shape,a,i,[1,1,1],o,l,u),h=new BF(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class VF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GF={kernelName:ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=od(i.shape,o,l,[1,1,1],u,c),d=new UF(h);return n.runWebGLProgram(d,[s],i.dtype)}},HF={kernelName:to,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;tA([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=id(i.shape,o,l,1,u),h=new VF(c);return n.runWebGLProgram(h,[s],i.dtype)}},jF={kernelName:so,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return aF({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class KF{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Gd(e,t),Gd(e,n);let i="0.0";null!=r&&(Gd(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Gd(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class qF{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Gd(e,t),Gd(e,n);let i="vec4(0.0)";null!=r&&(Gd(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Gd(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const XF={kernelName:Ko,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;ei(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ei(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ei(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=Mi().getBool("WEBGL_PACK_NORMALIZATION")?new qF(r.shape,s.shape,a.shape,c,h,l):new KF(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class YF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=RA(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return JF.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${JF[t]} = start[${t}] + coords.${JF[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const JF=["x","y","z","w","u","v"];class ZF{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=RA(this.rank),n=d_("coords",this.rank),r=d_("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function QF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Ph(s,a,i);if(Ch(s,o,l),0===si(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=n_(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=zh(s.shape,o,l);if(u||!c){const e=Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZF(l):new YF(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Bh(t,Ii(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const eD={kernelName:ru,backendName:"webgl",kernelFunc:QF},tD={kernelName:ao,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;ei(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=$m(s.shape,a,o),u=Nm(l.length,a.length),c=Cm(s.shape,a,o),h=Sm(i,a.length),d=Em(c,i,a.length),p=[],f=K_({inputs:{x:s},backend:n,attrs:{shape:l}}),m=rF({inputs:{x:f},backend:n,attrs:{perm:u}}),g=K_({inputs:{x:m},backend:n,attrs:{shape:c}}),b=QF({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},nD={kernelName:io,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=MA(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},rD=P_({opSnippet:"return float(a != b);",dtype:"bool"}),sD={kernelName:Rl,backendName:"webgl",kernelFunc:rD};function aD(e){const{inputs:t,backend:n}=e,{input:r}=t;return T_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const iD={kernelName:Vl,backendName:"webgl",kernelFunc:aD},oD={kernelName:oo,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return T_({inputs:{x:a},backend:r});const t=mp(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=A_({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=aD({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!mi(a.dtype,i)){const e=T_({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new x_(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",pi("bool",1)),t=rD({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},lD="return ceil(x);",uD=B_({opSnippet:lD,packedOpSnippet:lD,cpuKernelImpl:LA}),cD={kernelName:lo,backendName:"webgl",kernelFunc:uD};class hD{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class dD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const pD={kernelName:uo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=Mi().getBool("WEBGL_PACK_CLIP")?new dD(s.shape):new hD(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class fD{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function mD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const gD={kernelName:ho,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new fD(r.shape),i=[mD(r,s.complexTensorInfos.real),mD(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class bD{constructor(e){this.outputShape=[],this.outputShape=vm(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class yD{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=vm(e,t);const n=this.outputShape,r=n.length,s=RA(r),a=d_("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${xD(i,l,t)}),\n            vec2(${xD(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${xD(i,l,p)}),\n          vec2(${xD(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function xD(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function vD(e){const{inputs:t,backend:n}=e,{input:r}=t;return T_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const wD={kernelName:el,backendName:"webgl",kernelFunc:vD};function kD(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>aD({inputs:{input:e},backend:n}))),s=e.map((e=>vD({inputs:{input:e},backend:n}))),a=kD(r,t,n),i=kD(s,t,n),o=A_({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=si(e.shape.slice(t));return K_({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=vm(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=zA(a,i,r,o),u=vm(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Mi().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=kD(e.slice(0,r),t,n),a=kD(e.slice(r),t,n),i=kD([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new yD(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:i}=function(e,t,n){const r=vm(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>K_({inputs:{x:e},attrs:{shape:[-1,si(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new bD(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=K_({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function ID(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=hi(s,t[0].shape)[0],i=vm(t.map((e=>e.shape)),a);if(0===si(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>si(e.shape)>0));return 1===o.length?T_({inputs:{x:o[0]},backend:n}):(xm(o.map((e=>e.shape)),a),kD(o,a,n))}const $D={kernelName:po,backendName:"webgl",kernelFunc:ID};class ND{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class CD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SD{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,m=rA(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function ED({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],g=(1===h||1===d)&&c>1e3,b=l[2]%2!=0&&!!u.isPacked;if(!g&&Mi().getBool("WEBGL_LAZILY_UNPACK")&&Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,ei(XR(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const g=K_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(g);const b=aF({a:h,b:g,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(b.dataId);ei(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,f=T_({inputs:{x:b},backend:r}),f.shape=n.outShape,m.push(b)}else{const u=K_({inputs:{x:e},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=K_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=aF({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=K_({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function TD({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,g=d*h,b=[m,g],y=[],x=K_({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=K_({inputs:{x:t},backend:r,attrs:{shape:[1,m,si(t.shape)/m]}});y.push(x),y.push(v);const w=new SD(b,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=K_({inputs:{x:k},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(k),y.push(I);const $=null!=s,N=null!=a,C="leakyrelu"===o,S=o?W_(o,!0):null,E=new V_(I.shape,v.shape,[1,g,n.outChannels],!0,!1,$,S,N,C),T=[I,v];if(s&&T.push(s),N&&T.push(a),C){const e=r.makeTensorInfo([],"float32",Gu(i,"float32"));T.push(e),y.push(e)}const R=r.runWebGLProgram(E,T,"float32"),A=K_({inputs:{x:R},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});y.push(R);for(const e of y)r.disposeIntermediateTensorInfo(e);return A}const RD={kernelName:fo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=bd(l),d=ld(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(Mi().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=TD({x:s,filter:a,convInfo:d,backend:n});else{const e=new ND(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=ED({x:s,filter:a,convInfo:d,backend:n});const f=K_({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class AD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _D{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MD={kernelName:mo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=bd(l),d=ld(s.shape,c,i,1,o,u,!1,h),p=new AD(d);return n.runWebGLProgram(p,[s,a],"float32")}},OD={kernelName:go,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=bd(u),d=ld(i,a.shape,o,1,l,c,!1,h),p=new _D(d);return n.runWebGLProgram(p,[s,a],"float32")}},LD={kernelName:bo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=ud(s.shape,a.shape,i,l,o),c=new CD(u);return n.runWebGLProgram(c,[s,a],"float32")}},zD={kernelName:yo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=ud(s.shape,l,i,1,o),c=new FD(u);return n.runWebGLProgram(c,[s,a],"float32")}},BD={kernelName:xo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=ud(l,a.shape,o,1,i),c=new DD(u);return n.runWebGLProgram(c,[s,a],"float32")}},PD=B_({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),WD={kernelName:vo,backendName:"webgl",kernelFunc:PD},VD=B_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),UD={kernelName:wo,backendName:"webgl",kernelFunc:VD};class GD{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const HD={kernelName:Io,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new GD(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class jD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${KD(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${RA(r)} coords = getOutputCoords();\n        int end = ${qD(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${qD(r,"coords")} = idx;\n          val += getX(${KD(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function KD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function qD(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const XD={kernelName:ko,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=$p([a],l);let c=s;null!=u&&(c=rF({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=Cp(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=T_({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new jD(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new jD(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=rF({inputs:{x:p},backend:n,attrs:{perm:Np(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},YD={kernelName:$o,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=MA(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=OA(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class JD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const ZD={kernelName:No,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;ei(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l="NHWC"===i?s.shape[1]:s.shape[2],u="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=l*a,d=u*a,p=c/(a*a),f=new JD("NHWC"===i?[o,h,d,p]:[o,p,h,d],a,i);return n.runWebGLProgram(f,[s],s.dtype)}};class QD{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",b="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class eM{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<m;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<m;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<(g+1)/2;t++){const n=2*t,r=n*p;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<m&&(u%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,b+=1===p&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<m)){const e=u%2==0?Qa(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<m&&(u%2==1?(b+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<m&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<m&&(b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<m&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<m&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const tM={kernelName:Co,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),ei(gd(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=ld(s.shape,a.shape,i,c,o,u,!0);let d;return d=Mi().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new eM(h):new QD(h),n.runWebGLProgram(d,[s,a],"float32")}};class nM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const sM={kernelName:So,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ld(s.shape,c,i,o,l,u,!0),d=new nM(h);return n.runWebGLProgram(d,[s,a],"float32")}},aM={kernelName:Eo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ld(c,a.shape,i,o,l,u,!0),d=new rM(h);return n.runWebGLProgram(d,[s,a],"float32")}};class iM{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const oM={kernelName:To,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=si(r.shape),i=K_({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new iM(a),l=n.runWebGLProgram(o,[i],i.dtype),u=K_({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class lM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const uM={kernelName:Ro,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=ad(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new lM(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=K_({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},cM={kernelName:Do,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Zm(s,a.length);eg(i.length,l,a);const{path:u,steps:c}=tg(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Qm(p,l[t]);let s;ng(e)?s=a[t]:(s=rF({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ai(s.shape,i)||(s=K_({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=H_({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=tF({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},hM=B_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),dM={kernelName:Mo,backendName:"webgl",kernelFunc:hM},pM={kernelName:Oo,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=Mi().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new E_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new S_("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},fM=P_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),mM={kernelName:zo,backendName:"webgl",kernelFunc:fM},gM=B_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Mm};\n  float a1 = ${Om};\n  float a2 = ${Lm};\n  float a3 = ${zm};\n  float a4 = ${Bm};\n  float a5 = ${Pm};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),bM={kernelName:Lo,backendName:"webgl",kernelFunc:gM},yM="return exp(x);",xM=B_({opSnippet:yM,packedOpSnippet:yM,cpuKernelImpl:BA}),vM={kernelName:Bo,backendName:"webgl",kernelFunc:xM};function wM(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(ei(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),K_({inputs:{x:a},backend:r,attrs:{shape:o}})}const kM={kernelName:Po,backendName:"webgl",kernelFunc:wM},IM="return exp(x) - 1.0;",$M=B_({opSnippet:IM,packedOpSnippet:IM,cpuKernelImpl:PA}),NM={kernelName:Wo,backendName:"webgl",kernelFunc:$M};class CM{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function SM(e,t,n){const r=n.texData.get(e.dataId),s=si(e.shape),a=e.shape[e.shape.length-1],i=K_({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new CM("real",o,t),u=new CM("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=A_({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=K_({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const EM={kernelName:Vo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return SM(r,!1,n)}};class TM{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function RM(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||vi(s),"string"===a){const e=fi(a,si(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new TM(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const AM={kernelName:Uo,backendName:"webgl",kernelFunc:RM};class _M{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const FM={kernelName:Go,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new _M(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},DM="return floor(x);",MM=B_({opSnippet:DM,packedOpSnippet:DM,cpuKernelImpl:WA}),OM={kernelName:Ho,backendName:"webgl",kernelFunc:MM},LM=P_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),zM={kernelName:jo,backendName:"webgl",kernelFunc:LM};class BM{constructor(e){this.variableNames=["A"];const t=rA(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class PM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=rA(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const WM={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(o||i)&&(null==VM&&(VM=document.createElement("canvas").getContext("2d")),VM.canvas.width=l,VM.canvas.height=u,VM.drawImage(s,0,0,l,u),s=VM.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=ER.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=Mi().getBool("WEBGL_PACK")?new PM(h):new BM(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let VM;const UM={kernelName:Du,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=bd(c),g=ld(s.shape,a.shape,l,h,u,d,!1,m);let b;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Mi().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=TD({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,l=p?W_(p,!1):null,u=new ND(g,e,l,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Gu(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=ED({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=K_({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},GM={kernelName:Mu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),ei(gd(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=ld(s.shape,a.shape,l,m,u,h,!0),b=Mi().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?W_(d,b):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Gu(p,"float32"));x.push(e),f.push(e)}let I;I=b?new eM(g,v,y,w,k):new QD(g,v,y,w,k);const $=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class HM{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=RA(t.length),s=RA(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const jM={kernelName:Xo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],[o,l,u,c]=Tm(r,s),h=K_({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=K_({inputs:{x:r},backend:n,attrs:{shape:[si(r.shape)/u,u]}}),p=new HM(i,c,[l,u]),f=n.runWebGLProgram(p,[d,h],d.dtype),m=K_({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};class KM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=RA(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const qM={kernelName:qo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=og(s,a,hi(i,s.shape)[0],o),u=si(a.shape),c=[],h=K_({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=K_({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=VA(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new KM(h.shape,p),m=n.runWebGLProgram(f,[h,d],h.dtype);c.push(m);const g=K_({inputs:{x:m},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},XM=P_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:UA,dtype:"bool"}),YM={kernelName:Yo,backendName:"webgl",kernelFunc:XM},JM=P_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),ZM={kernelName:Jo,backendName:"webgl",kernelFunc:JM},QM={kernelName:Qo,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return SM(r,!0,n)}},eO=B_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),tO={kernelName:tl,backendName:"webgl",kernelFunc:eO},nO=B_({opSnippet:"return float(isinf(x));",dtype:"bool"}),rO={kernelName:nl,backendName:"webgl",kernelFunc:nO},sO=B_({opSnippet:"return float(isnan(x));",dtype:"bool"}),aO={kernelName:rl,backendName:"webgl",kernelFunc:sO},iO=P_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:GA,dtype:"bool"}),oO={kernelName:al,backendName:"webgl",kernelFunc:iO},lO=P_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),uO={kernelName:il,backendName:"webgl",kernelFunc:lO},cO={kernelName:ol,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=HA(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},hO=B_({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jA}),dO={kernelName:ll,backendName:"webgl",kernelFunc:hO},pO=B_({opSnippet:"return log(1.0 + x);"}),fO={kernelName:ul,backendName:"webgl",kernelFunc:pO},mO=P_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),gO={kernelName:cl,backendName:"webgl",kernelFunc:mO},bO=B_({opSnippet:"return float(!(x >= 1.0));"}),yO={kernelName:hl,backendName:"webgl",kernelFunc:bO},xO=P_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),vO={kernelName:dl,backendName:"webgl",kernelFunc:xO};class wO{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class kO{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const IO={kernelName:pl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=Mi().getBool("WEBGL_PACK_NORMALIZATION")?new kO(s.shape,a,i,o,l):new wO(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class $O{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const NO={kernelName:fl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new $O(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function CO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=hi(a,s.shape);let u=l;const c=$p(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=u_(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=eF(s,c,n);u=Cp(u.length,o)}Ip("max",u,o);const[f,m]=wp(p.shape,u);let g,b=f;if(i&&(b=kp(f,l)),d){const e=n.texData.get(p.dataId).values,t=KA(e,si(m),b,s.dtype);g=n.makeTensorInfo(b,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=si(t),a=K_({inputs:{x:e},attrs:{shape:[si(e.shape)/s,s]},backend:r}),i=J_(a,e.dtype,"max",r),o=K_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,b,n);return h&&n.disposeIntermediateTensorInfo(p),g}const SO={kernelName:ml,backendName:"webgl",kernelFunc:CO},EO=P_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qA}),TO={kernelName:gl,backendName:"webgl",kernelFunc:EO},RO={kernelName:bl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;tA(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;ei(gd(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=id(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ai(u.inShape,u.outShape))return T_({inputs:{x:s},backend:n});const c=new zF(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},AO={kernelName:xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=od(s.shape,a,i,[1,1,1],o,u,l),h=new BF(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class _O{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FO{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DO={kernelName:vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=od(i.shape,o,l,[1,1,1],u,c),d=new BF(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new FO(h),m=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},MO={kernelName:yl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;tA([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=id(o.shape,l,u,1,c,h),p=new zF(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new _O(d),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},OO={kernelName:wl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;ei(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];ei(gd(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=id(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new zF(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new zF(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},LO={kernelName:kl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=hi(a,r.shape);let u=l;const c=$p(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=u_(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=eF(r,c,i);p.push(f),u=Cp(u.length,o)}Ip("sum",u,o);const[m,g]=wp(f.shape,u);let b=m;s&&(b=kp(m,l));const y=function(e,t,n,r){const s=si(t),a=K_({inputs:{x:e},attrs:{shape:[si(e.shape)/s,s]},backend:r}),i=J_(a,"float32","mean",r),o=K_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},zO={kernelName:Il,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=hi(a,s.shape);let u=l;const c=$p(u,o);let h=s;null!=c&&(h=rF({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Cp(u.length,s.shape.length)),Ip("min",u,o);const[d,p]=wp(h.shape,u),f=K_({inputs:{x:h},backend:n,attrs:{shape:[-1,si(p)]}}),m=J_(f,f.dtype,"min",n);let g;return g=K_(i?{inputs:{x:m},backend:n,attrs:{shape:kp(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},BO=P_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:XA}),PO={kernelName:$l,backendName:"webgl",kernelFunc:BO};class WO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=RA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class VO{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=RA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=d_("rc",r),l=d_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const UO={kernelName:Nl,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VO(r.shape,s,a):new WO(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},GO=P_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),HO={kernelName:Cl,backendName:"webgl",kernelFunc:GO};class jO{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const KO=P_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),qO={kernelName:Fo,backendName:"webgl",kernelFunc:KO},XO="return a - b;",YO=P_({opSnippet:XO,packedOpSnippet:XO,supportsComplex:!0,cpuKernelImpl:i_}),JO={kernelName:vu,backendName:"webgl",kernelFunc:YO};function ZO(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=hi([a],s.shape),o=CO({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=kp(o.shape,i),u=K_({inputs:{x:o},backend:n,attrs:{shape:l}}),c=YO({inputs:{a:s,b:u},backend:n}),h=xM({inputs:{x:c},backend:n}),d=tF({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=K_({inputs:{x:d},backend:n,attrs:{shape:l}}),f=KO({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const QO={kernelName:pu,backendName:"webgl",kernelFunc:ZO},eL={kernelName:Sl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:ZO({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new jO(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},tL="return -x;",nL={kernelName:Tl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=JA(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=Mi().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new k_(r.shape,tL):new x_(r.shape,tL),n.runWebGLProgram(s,[r],r.dtype)}},rL=Of,sL={kernelName:Al,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=rL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},aL=Lf,iL={kernelName:_l,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=aL(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},oL=zf,lL={kernelName:Fl,backendName:"webgl",kernelFunc:function(e){Wm("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,m=u,{selectedIndices:g,selectedScores:b}=oL(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class uL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const cL={kernelName:Ml,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,l=si(s.shape),u=new uL(l,a,i,o),c=K_({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=K_({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function hL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=aD({inputs:{input:r},backend:n}),t=hL({inputs:{x:e},backend:n}),s=vD({inputs:{input:r},backend:n}),a=hL({inputs:{x:s},backend:n}),i=A_({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return RM({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const dL={kernelName:Ru,backendName:"webgl",kernelFunc:hL},pL={kernelName:Dl,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=aD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=vD({inputs:{input:s},backend:r}),i=hL({inputs:{x:a},backend:r}),o=A_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return RM({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},fL={kernelName:Ol,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return wM({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{ti(a,e.shape,"All tensors passed to stack must have matching shapes"),ei(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=ID({inputs:t.map((e=>{const t=wM({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class mL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=RA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class gL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=RA(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=d_("rc",r),l=d_("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const bL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gL(s.shape,a,i):new mL(s.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[s],s.dtype,l)},yL={kernelName:Ll,backendName:"webgl",kernelFunc:bL},xL=P_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),vL={kernelName:zl,backendName:"webgl",kernelFunc:xL},wL={kernelName:Pl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=hi(a,s.shape);let c=u;const h=$p(c,o);let d,p=s;if(null!=h&&(p=rF({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Cp(c.length,o),l.push(p)),Ip("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=ZA(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=wp(p.shape,c),r=si(t),a=K_({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=J_(a,bc(s.dtype),"prod",n);d=K_({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=kp(d.shape,u);d=K_({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},kL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=QA(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},IL={kernelName:Wl,backendName:"webgl",kernelFunc:kL},$L=B_({opSnippet:"return 1.0 / x;"}),NL={kernelName:Ul,backendName:"webgl",kernelFunc:$L},CL=B_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),SL={kernelName:Gl,backendName:"webgl",kernelFunc:CL},EL=B_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),TL={kernelName:Yl,backendName:"webgl",kernelFunc:EL};class RL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class AL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const _L={kernelName:ql,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Mi().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new AL(s.shape,l,u,a,i):new RL(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class FL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const DL={kernelName:Xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new FL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class ML{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class OL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const LL={kernelName:jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=Mi().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OL(s.shape,l,u,a,i):new ML(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class zL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BL={kernelName:Kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new zL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class PL{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=RA(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class WL{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=d_("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=RA(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const VL={kernelName:Jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=hi(a,s.shape);if(0===i)return T_({inputs:{x:s},backend:n});const l=Mi().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WL(s.shape,o):new PL(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class UL{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(s,a)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(a,"params")),s.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const GL={kernelName:_u,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new UL(r.shape,a),[u,c]=Im(i,r.shape[1],r.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(s),Math.cos(s));return o.runWebGLProgram(l,[r],r.dtype,h)}},HL=B_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),jL={kernelName:Zl,backendName:"webgl",kernelFunc:HL},KL=B_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:e_}),qL={kernelName:Ql,backendName:"webgl",kernelFunc:KL};class XL{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=RA(s.length),l=RA(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const YL={kernelName:eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=_m(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=K_({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=K_({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new XL(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=K_({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class JL{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=RA(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const ZL={kernelName:tu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new JL(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],gc(s.dtype,a.dtype))}},QL=B_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Fm};\n  float scale = ${Dm};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),ez={kernelName:nu,backendName:"webgl",kernelFunc:QL},tz=B_({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),nz={kernelName:ou,backendName:"webgl",kernelFunc:tz},rz=B_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),sz={kernelName:iu,backendName:"webgl",kernelFunc:rz},az=B_({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),iz={kernelName:su,backendName:"webgl",kernelFunc:az},oz=B_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),lz={kernelName:au,backendName:"webgl",kernelFunc:oz},uz=B_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),cz={kernelName:lu,backendName:"webgl",kernelFunc:uz},hz={kernelName:hu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;ei(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=bL({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=$m(c.shape,a,o,!1),d=Nm(h.length,a.length,!1),p=Cm(c.shape,a,o,!1),f=K_({inputs:{x:c},backend:n,attrs:{shape:h}}),m=rF({inputs:{x:f},backend:n,attrs:{perm:d}}),g=K_({inputs:{x:m},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},dz={kernelName:fu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=r_(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},pz={kernelName:mu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=s_(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},fz={kernelName:gu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=_m(0,s,o),d=new XL(u,l,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=K_({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},mz={kernelName:du,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=hi(i,s.shape)[0],l=sg(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=QF({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},gz=B_({opSnippet:"return sqrt(x);"}),bz={kernelName:uu,backendName:"webgl",kernelFunc:gz},yz={kernelName:yu,backendName:"webgl",kernelFunc:B_({opSnippet:"return x * x;"})},xz="return (a - b) * (a - b);",vz=P_({opSnippet:xz,packedOpSnippet:xz}),wz={kernelName:bu,backendName:"webgl",kernelFunc:vz},kz={kernelName:Au,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new x_(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Iz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=RA(n.length),a=RA(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const $z={kernelName:xu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:m,size:g,newShape:b,outShape:y}=Wh(s.shape,a,i,o,l,u,c,h,d),x=K_({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=QF({inputs:{x},backend:n,attrs:{begin:f,size:g}});v=K_({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=gh(x.shape,x.dtype,e),r=a_(y,t,m,f);v=n.makeTensorInfo(y,x.dtype,r.values)}else{const e=new Iz(f,m,y);v=n.runWebGLProgram(e,[x],x.dtype)}const w=K_({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},Nz=B_({opSnippet:"return tan(x);"}),Cz={kernelName:wu,backendName:"webgl",kernelFunc:Nz},Sz=B_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Ez={kernelName:ku,backendName:"webgl",kernelFunc:Sz};class Tz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=RA(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Rz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>qu(e))):e,r=gh(s.shape,s.dtype,t),i=o_(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Tz(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const Az={kernelName:Iu,backendName:"webgl",kernelFunc:Rz},_z={kernelName:$u,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=l_(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class Fz{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Dz={kernelName:Nu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],g=new Fz(h,d,i,o,l,[c,f,m,p]);return n.runWebGLProgram(g,[s,a],"float32")}},Mz={kernelName:Su,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;tA(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=c_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},Oz={kernelName:Eu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=QF({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=K_({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Lz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const zz=[IO,NO,iF,lF,cF,dF,mF,yF,xF,vF,CF,SF,TF,AF,MF,FF,LF,WF,PF,GF,HF,jF,XF,tD,nD,oD,cD,pD,gD,__,$D,MD,OD,RD,zD,BD,LD,WD,UD,HD,XD,YD,ZD,sM,aM,tM,oM,uM,cM,dM,pM,mM,bM,vM,kM,NM,EM,AM,FM,OM,zM,WM,UM,GM,jM,qM,YM,ZM,R_,QM,wD,tO,rO,aO,M_,oO,uO,cO,fO,dO,gO,yO,vO,SO,AO,RO,DO,MO,OO,TO,LO,zO,PO,UO,HO,eL,j_,nL,sL,iL,lL,sD,cL,pL,fL,yL,vL,z_,wL,IL,iD,qO,NL,TL,SL,q_,_L,DL,LL,BL,VL,GL,jL,qL,YL,ZL,ez,nz,sz,iz,lz,eD,QO,cz,hz,dz,pz,fz,mz,bz,yz,wz,kz,$z,JO,nF,Cz,Ez,Az,_z,Dz,sF,Mz,Oz,{kernelName:Tu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=$p([u],o);let h=s;null!=c&&(h=rF({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Cp(1,o)[0]);const d=ig(h.shape,u,i),p=si([h.shape[u]]),f=K_({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=bc(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=ag(o,a),c=new Lz({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=kL({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=Rz({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),g(h,t,p,s,a)},b=K_({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=Np(c);y=rF({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},dL];for(const e of zz)Wu(e);const Bz={factor:Bc([-1,-1.5,2,-1.5]),center:Bc([[.5,.7],[.4,.2],[.6,.2],[.9,.3]])},Pz=e=>((e,t,n)=>Kh((()=>{var r=((e,t,n)=>Kh((()=>{var r=e.shape.slice(0,-1),s=t.shape.slice(0,-1);return r.forEach((()=>{t=t.expandDims(0)})),s.forEach((()=>{e=e.expandDims(-2)})),console.log(e.shape),console.log(t.shape),console.log(e.shape),Gp(op(e.sub(t).square(),-1).mul(-10)).mul(n)})))(e,t,n);return op(r,-1)})))(e,Bz.center,Bz.factor),Wz=e=>Kh((()=>{var[t,n]=e.split(2,-1);return t=t.mul(12).sub(6),n=n.mul(12).sub(6),t.square().add(n).sub(11).square().add(t.add(n.square()).sub(7).square())})),Vz=e=>Kh((()=>{var[t,n]=e.split(2,-1),t=t.mul(3.5).sub(1.5),n=n.mul(3.5).sub(.5);return Zh(1).sub(t).square().add(n.sub(t.square()).square().mul(100))})),Uz=e=>Kh((()=>{var[t,n]=e.split(2,-1),t=t.mul(9).sub(4.5),n=n.mul(9).sub(4.5),r=t.mul(n),s=Zh(1.5).sub(t).add(r).square();return r=r.mul(n),s.add(Zh(2.25).sub(t).add(r).square()).add(Zh(2.625).sub(t).add(r).mul(n).square())}));function Gz(e){let t,n,r,s,i,o,l,u,c,h,b;return{c(){t=f("div"),t.innerHTML='<div class="col" id="plot-1"></div> \n      <div class="col" id="plot-2"></div> \n      <div class="col" id="plot-3"></div> \n      <div class="col" id="plot-4"></div>',n=m(),r=f("div"),r.textContent="\\( \\theta \\)",s=m(),i=f("div"),i.textContent="\\( \\phi_1 \\)",o=m(),l=f("div"),l.textContent="\\( \\phi_2 \\)",u=m(),c=f("div"),c.textContent="\\( \\phi_3 \\)",h=m(),b=f("div"),b.textContent="\\( \\phi_3 \\)",g(t,"class","container svelte-1772tyd"),g(r,"id","vector-theta"),g(i,"id","vector-phi1"),g(l,"id","vector-phi2"),g(c,"id","vector-phi3"),g(b,"id","vector-phi4")},m(e,a){d(e,t,a),d(e,n,a),d(e,r,a),d(e,s,a),d(e,i,a),d(e,o,a),d(e,l,a),d(e,u,a),d(e,c,a),d(e,h,a),d(e,b,a)},p:a,i:a,o:a,d(e){e&&p(t),e&&p(n),e&&p(r),e&&p(s),e&&p(i),e&&p(o),e&&p(l),e&&p(u),e&&p(c),e&&p(h),e&&p(b)}}}function Hz(e){const t=[200,200],n={left:30,right:10,top:10,bottom:20};class r{constructor(e,r=t,s=n){var[a,i]=r,o=a-s.left-s.right,l=i-s.top-s.bottom;this.id=e,this.svg=Nr(e).append("svg").attr("preserveAspectRatio","xMinYMin meet").attr("viewBox",`0 0 ${a} ${i}`),this.chart=this.svg.append("g").attr("transform",`translate(${s.left}, ${s.top})`),this.margin=s,this.xscale=Ua().domain([0,1]).range([0,o]),this.yscale=Ua().domain([0,1]).range([l,0]),this.svg_size=r,this.size=[o,l]}add_axis(){this.chart.append("g").attr("opacity",.5).attr("fill","black").attr("transform",`translate(0, ${this.size[1]})`).call(U(3,void 0).scale(this.xscale)).call((e=>e.select(".domain").remove())),this.chart.append("g").attr("opacity",.5).call(U(4,void 0).scale(this.yscale)).call((e=>e.select(".domain").remove()))}add_contour(e,t=!1){var n=e(tf(function(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Dc(e,"x","meshgrid",e instanceof oc?e.dtype:"float32");if(void 0===t)return[r];let s=Dc(t,"y","meshgrid",t instanceof oc?t.dtype:"float32");const a=si(r.shape),i=si(s.shape);return"xy"===n?(r=yd(r,[1,-1]),s=yd(s,[-1,1]),[fp(gp([i,1],r.dtype),r),fp(s,gp([1,a],s.dtype))]):(r=yd(r,[-1,1]),s=yd(s,[1,-1]),[fp(r,gp([1,i],r.dtype)),fp(gp([a,1],s.dtype),s)])}(tp(...this.xscale.domain(),256),tp(...this.yscale.domain(),256)),-1));t&&(n=np(n)),n=Array.from(n.bufferSync().values);var r=ja,s=Ua().domain(D(n)).range([0,1]),a=function(){var e=1,t=1,n=hr,r=o;function s(e){var t=n(e);if(Array.isArray(t))t=t.slice().sort(yr);else{var r=D(e),s=r[0],i=r[1];t=gr(s,i,t),t=function(e,t,n){e=+e,t=+t,n=(s=arguments.length)<2?(t=e,e=0,1):s<3?1:+n;for(var r=-1,s=0|Math.max(0,Math.ceil((t-e)/n)),a=new Array(s);++r<s;)a[r]=e+r*n;return a}(Math.floor(s/t)*t,Math.floor(i/t)*t,t)}return t.map((function(t){return a(e,t)}))}function a(n,s){var a=[],o=[];return function(n,r,s){var a,o,l,u,c,h,d=new Array,p=new Array;for(a=o=-1,u=n[0]>=r,$r[u<<1].forEach(f);++a<e-1;)l=u,u=n[a+1]>=r,$r[l|u<<1].forEach(f);for($r[u<<0].forEach(f);++o<t-1;){for(a=-1,u=n[o*e+e]>=r,c=n[o*e]>=r,$r[u<<1|c<<2].forEach(f);++a<e-1;)l=u,u=n[o*e+e+a+1]>=r,h=c,c=n[o*e+a+1]>=r,$r[l|u<<1|c<<2|h<<3].forEach(f);$r[u|c<<3].forEach(f)}for(a=-1,c=n[o*e]>=r,$r[c<<2].forEach(f);++a<e-1;)h=c,c=n[o*e+a+1]>=r,$r[c<<2|h<<3].forEach(f);function f(e){var t,n,r=[e[0][0]+a,e[0][1]+o],l=[e[1][0]+a,e[1][1]+o],u=i(r),c=i(l);(t=p[u])?(n=d[c])?(delete p[t.end],delete d[n.start],t===n?(t.ring.push(l),s(t.ring)):d[t.start]=p[n.end]={start:t.start,end:n.end,ring:t.ring.concat(n.ring)}):(delete p[t.end],t.ring.push(l),p[t.end=c]=t):(t=d[c])?(n=p[u])?(delete d[t.start],delete p[n.end],t===n?(t.ring.push(l),s(t.ring)):d[n.start]=p[t.end]={start:n.start,end:t.end,ring:n.ring.concat(t.ring)}):(delete d[t.start],t.ring.unshift(r),d[t.start=u]=t):d[u]=p[c]={start:u,end:c,ring:[r,l]}}$r[c<<3].forEach(f)}(n,s,(function(e){r(e,n,s),function(e){for(var t=0,n=e.length,r=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)r+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return r}(e)>0?a.push([e]):o.push(e)})),o.forEach((function(e){for(var t,n=0,r=a.length;n<r;++n)if(-1!==vr((t=a[n])[0],e))return void t.push(e)})),{type:"MultiPolygon",value:s,coordinates:a}}function i(t){return 2*t[0]+t[1]*(e+1)*4}function o(n,r,s){n.forEach((function(n){var a,i=n[0],o=n[1],l=0|i,u=0|o,c=r[u*e+l];i>0&&i<e&&l===i&&(a=r[u*e+l-1],n[0]=i+(s-a)/(c-a)-.5),o>0&&o<t&&u===o&&(a=r[(u-1)*e+l],n[1]=o+(s-a)/(c-a)-.5)}))}return s.contour=a,s.size=function(n){if(!arguments.length)return[e,t];var r=Math.floor(n[0]),a=Math.floor(n[1]);if(!(r>=0&&a>=0))throw new Error("invalid size");return e=r,t=a,s},s.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?xr(br.call(e)):xr(e),s):n},s.smooth=function(e){return arguments.length?(r=e?o:Ir,s):r===o},s}().size([256,256]).thresholds(20)(n),[i,o]=this.size;this.chart.append("g").attr("fill","none").attr("stroke","#fff").attr("stroke-opacity",.3).selectAll("path").data(a).enter().append("path").attr("fill",(e=>r(s(e.value)))).attr("stroke","#white").attr("transform",`translate(0,${o}), scale(${i/256}, ${-o/256})`).attr("d",function(e,t){var n,r,s=4.5;function a(e){return e&&("function"==typeof s&&r.pointRadius(+s.apply(this,arguments)),Wr(e,n(r))),r.result()}return a.area=function(e){return Wr(e,n(cs)),cs.result()},a.measure=function(e){return Wr(e,n(Ys)),Ys.result()},a.bounds=function(e){return Wr(e,n(ms)),ms.result()},a.centroid=function(e){return Wr(e,n(Bs)),Bs.result()},a.projection=function(t){return arguments.length?(n=null==t?(e=null,Mr):(e=t).stream,a):e},a.context=function(e){return arguments.length?(r=null==e?(t=null,new Js):new Ps(t=e),"function"!=typeof s&&r.pointRadius(s),a):t},a.pointRadius=function(e){return arguments.length?(s="function"==typeof e?e:(r.pointRadius(+e),+e),a):s},a.projection(e).context(t)}(oa()))}add_theta(e){var t=this.xscale,n=this.yscale,r=this.chart,s=[.1,.9],a=.1,i=this.chart.append("line").style("stroke","white").style("stroke-width",1).style("opacity",a).attr("x1",t(0)).attr("y1",n(s[1])).attr("x2",t(1)).attr("y2",n(s[1])),o=this.chart.append("line").style("stroke","white").style("stroke-width",1).style("opacity",a).attr("x1",t(s[0])).attr("y1",n(0)).attr("x2",t(s[0])).attr("y2",n(1)),l=this.chart.selectAll("dot").data([s]).enter().append("circle").attr("cx",(e=>this.xscale(e[0]))).attr("cy",(e=>this.yscale(e[1]))).attr("stroke-width",.5).attr("stroke","black").attr("fill","white").attr("r",2).on("mouseover",(function(e){l.transition().duration(100).attr("r",4),i.transition().duration(100).style("opacity",.7),o.transition().duration(100).style("opacity",.7)})).on("mouseout",(function(e){l.transition().duration(100).attr("r",2),i.transition().duration(100).style("opacity",a),o.transition().duration(100).style("opacity",a)}));e.on(`theta_changed.${this.id}`,((e,r)=>{l.attr("cx",t(e)).attr("cy",n(r)),i.attr("y1",n(r)).attr("y2",n(r)),o.attr("x1",t(e)).attr("x2",t(e))})),l.call(function(){var e,t,n,r,s=Ar,a=_r,i=Fr,o=Dr,l={},u=ct("start","drag","end"),c=0,h=0;function d(e){e.on("mousedown.drag",p).filter(o).on("touchstart.drag",g).on("touchmove.drag",b).on("touchend.drag touchcancel.drag",y).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(i,o){if(!r&&s.call(this,i,o)){var l=x(this,a.call(this,i,o),i,o,"mouse");l&&(Nr(i.view).on("mousemove.drag",f,!0).on("mouseup.drag",m,!0),function(e){var t=e.document.documentElement,n=Nr(e).on("dragstart.drag",Er,!0);"onselectstart"in t?n.on("selectstart.drag",Er,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")}(i.view),Sr(i),n=!1,e=i.clientX,t=i.clientY,l("start",i))}}function f(r){if(Er(r),!n){var s=r.clientX-e,a=r.clientY-t;n=s*s+a*a>h}l.mouse("drag",r)}function m(e){Nr(e.view).on("mousemove.drag mouseup.drag",null),function(e,t){var n=e.document.documentElement,r=Nr(e).on("dragstart.drag",null);t&&(r.on("click.drag",Er,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}(e.view,n),Er(e),l.mouse("end",e)}function g(e,t){if(s.call(this,e,t)){var n,r,i=e.changedTouches,o=a.call(this,e,t),l=i.length;for(n=0;n<l;++n)(r=x(this,o,e,t,i[n].identifier,i[n]))&&(Sr(e),r("start",e,i[n]))}}function b(e){var t,n,r=e.changedTouches,s=r.length;for(t=0;t<s;++t)(n=l[r[t].identifier])&&(Er(e),n("drag",e,r[t]))}function y(e){var t,n,s=e.changedTouches,a=s.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),t=0;t<a;++t)(n=l[s[t].identifier])&&(Sr(e),n("end",e,s[t]))}function x(e,t,n,r,s,a){var o,h,p,f=u.copy(),m=Cr(a||n,t);if(null!=(p=i.call(e,new Rr("beforestart",{sourceEvent:n,target:d,identifier:s,active:c,x:m[0],y:m[1],dx:0,dy:0,dispatch:f}),r)))return o=p.x-m[0]||0,h=p.y-m[1]||0,function n(a,i,u){var g,b=m;switch(a){case"start":l[s]=n,g=c++;break;case"end":delete l[s],--c;case"drag":m=Cr(u||i,t),g=c}f.call(a,e,new Rr(a,{sourceEvent:i,subject:p,target:d,identifier:s,active:g,x:m[0]+o,y:m[1]+h,dx:m[0]-b[0],dy:m[1]-b[1],dispatch:f}),r)}}return d.filter=function(e){return arguments.length?(s="function"==typeof e?e:Tr(!!e),d):s},d.container=function(e){return arguments.length?(a="function"==typeof e?e:Tr(e),d):a},d.subject=function(e){return arguments.length?(i="function"==typeof e?e:Tr(e),d):i},d.touchable=function(e){return arguments.length?(o="function"==typeof e?e:Tr(!!e),d):o},d.on=function(){var e=u.on.apply(u,arguments);return e===u?d:e},d.clickDistance=function(e){return arguments.length?(h=(e=+e)*e,d):Math.sqrt(h)},d}().on("drag",(function(s){var[a,i]=Cr(s,r.node());console.log(s),console.log(a,i),a=t.invert(a),i=n.invert(i),a=Math.max(Math.min(1,a),0),i=Math.max(Math.min(1,i),0),e.call("theta_changed",this,a,i),console.log(a,i)})))}}return function(){if(!b)throw new Error("Function called outside component initialization");return b}().$$.on_mount.push((()=>{var e=ct("theta_changed"),t=new r("#plot-1");t.add_contour(Pz),t.add_axis(),t.add_theta(e);var n=new r("#plot-2");n.add_contour(Wz,!0),n.add_axis(),n.add_theta(e);var s=new r("#plot-3");s.add_contour(Vz,!0),s.add_axis(),s.add_theta(e);var a=new r("#plot-4");a.add_contour(Uz,!0),a.add_axis(),a.add_theta(e)})),[]}console.log(document.querySelector("#looking_for_theta")),new class extends class{$destroy(){_(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!h(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}{constructor(e){super(),F(this,e,Hz,Gz,c,{})}}({target:document.querySelector("#looking_for_theta")})})()})();