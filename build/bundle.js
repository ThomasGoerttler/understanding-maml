/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={2705:(e,t,n)=>{var r=n(5639).Symbol;e.exports=r},4636:(e,t,n)=>{var r=n(2545),s=n(5694),a=n(1469),i=n(4144),o=n(5776),l=n(6719),u=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=a(e),c=!n&&s(e),h=!n&&!c&&i(e),d=!n&&!c&&!h&&l(e),p=n||c||h||d,f=p?r(e.length,String):[],g=f.length;for(var m in e)!t&&!u.call(e,m)||p&&("length"==m||h&&("offset"==m||"parent"==m)||d&&("buffer"==m||"byteLength"==m||"byteOffset"==m)||o(m,g))||f.push(m);return f}},9932:e=>{e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,s=Array(r);++n<r;)s[n]=t(e[n],n,e);return s}},4311:(e,t,n)=>{var r=n(9877);e.exports=function(e){var t=e.length;return t?e[r(0,t-1)]:void 0}},151:(e,t,n)=>{var r=n(278),s=n(3480);e.exports=function(e){return s(r(e))}},8983:(e,t,n)=>{var r=n(371)("length");e.exports=r},4286:e=>{e.exports=function(e){return e.split("")}},4239:(e,t,n)=>{var r=n(2705),s=n(9607),a=n(2333),i=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?s(e):a(e)}},9454:(e,t,n)=>{var r=n(4239),s=n(7005);e.exports=function(e){return s(e)&&"[object Arguments]"==r(e)}},8749:(e,t,n)=>{var r=n(4239),s=n(1780),a=n(7005),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,e.exports=function(e){return a(e)&&s(e.length)&&!!i[r(e)]}},280:(e,t,n)=>{var r=n(5726),s=n(6916),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return s(e);var t=[];for(var n in Object(e))a.call(e,n)&&"constructor"!=n&&t.push(n);return t}},371:e=>{e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},9877:e=>{var t=Math.floor,n=Math.random;e.exports=function(e,r){return e+t(n()*(r-e+1))}},98:e=>{var t=Math.ceil,n=Math.max;e.exports=function(e,r,s,a){for(var i=-1,o=n(t((r-e)/(s||1)),0),l=Array(o);o--;)l[a?o:++i]=e,e+=s;return l}},8190:e=>{var t=Math.floor;e.exports=function(e,n){var r="";if(!e||n<1||n>9007199254740991)return r;do{n%2&&(r+=e),(n=t(n/2))&&(e+=e)}while(n);return r}},4992:(e,t,n)=>{var r=n(4311),s=n(2628);e.exports=function(e){return r(s(e))}},5127:(e,t,n)=>{var r=n(3480),s=n(2628);e.exports=function(e){return r(s(e))}},4259:e=>{e.exports=function(e,t,n){var r=-1,s=e.length;t<0&&(t=-t>s?0:s+t),(n=n>s?s:n)<0&&(n+=s),s=t>n?0:n-t>>>0,t>>>=0;for(var a=Array(s);++r<s;)a[r]=e[r+t];return a}},2545:e=>{e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},531:(e,t,n)=>{var r=n(2705),s=n(9932),a=n(1469),i=n(3448),o=r?r.prototype:void 0,l=o?o.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(a(t))return s(t,e)+"";if(i(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},7561:(e,t,n)=>{var r=n(7990),s=/^\s+/;e.exports=function(e){return e?e.slice(0,r(e)+1).replace(s,""):e}},7518:e=>{e.exports=function(e){return function(t){return e(t)}}},7415:(e,t,n)=>{var r=n(9932);e.exports=function(e,t){return r(t,(function(t){return e[t]}))}},180:(e,t,n)=>{var r=n(4259);e.exports=function(e,t,n){var s=e.length;return n=void 0===n?s:n,!t&&n>=s?e:r(e,t,n)}},278:e=>{e.exports=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}},8302:(e,t,n)=>{var r=n(8190),s=n(531),a=n(180),i=n(2689),o=n(8016),l=n(3140),u=Math.ceil;e.exports=function(e,t){var n=(t=void 0===t?" ":s(t)).length;if(n<2)return n?r(t,e):t;var c=r(t,u(e/o(t)));return i(t)?a(l(c),0,e).join(""):c.slice(0,e)}},7445:(e,t,n)=>{var r=n(98),s=n(6612),a=n(8601);e.exports=function(e){return function(t,n,i){return i&&"number"!=typeof i&&s(t,n,i)&&(n=i=void 0),t=a(t),void 0===n?(n=t,t=0):n=a(n),i=void 0===i?t<n?1:-1:a(i),r(t,n,i,e)}}},1957:(e,t,n)=>{var r="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g;e.exports=r},9607:(e,t,n)=>{var r=n(2705),s=Object.prototype,a=s.hasOwnProperty,i=s.toString,o=r?r.toStringTag:void 0;e.exports=function(e){var t=a.call(e,o),n=e[o];try{e[o]=void 0;var r=!0}catch(e){}var s=i.call(e);return r&&(t?e[o]=n:delete e[o]),s}},2689:e=>{var t=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");e.exports=function(e){return t.test(e)}},5776:e=>{var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var r=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&t.test(e))&&e>-1&&e%1==0&&e<n}},6612:(e,t,n)=>{var r=n(7813),s=n(8612),a=n(5776),i=n(3218);e.exports=function(e,t,n){if(!i(n))return!1;var o=typeof t;return!!("number"==o?s(n)&&a(t,n.length):"string"==o&&t in n)&&r(n[t],e)}},5726:e=>{var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},6916:(e,t,n)=>{var r=n(5569)(Object.keys,Object);e.exports=r},1167:(e,t,n)=>{e=n.nmd(e);var r=n(1957),s=t&&!t.nodeType&&t,a=s&&e&&!e.nodeType&&e,i=a&&a.exports===s&&r.process,o=function(){try{return a&&a.require&&a.require("util").types||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=o},2333:e=>{var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},5569:e=>{e.exports=function(e,t){return function(n){return e(t(n))}}},5639:(e,t,n)=>{var r=n(1957),s="object"==typeof self&&self&&self.Object===Object&&self,a=r||s||Function("return this")();e.exports=a},3480:(e,t,n)=>{var r=n(9877);e.exports=function(e,t){var n=-1,s=e.length,a=s-1;for(t=void 0===t?s:t;++n<t;){var i=r(n,a),o=e[i];e[i]=e[n],e[n]=o}return e.length=t,e}},8016:(e,t,n)=>{var r=n(8983),s=n(2689),a=n(1903);e.exports=function(e){return s(e)?a(e):r(e)}},3140:(e,t,n)=>{var r=n(4286),s=n(2689),a=n(676);e.exports=function(e){return s(e)?a(e):r(e)}},7990:e=>{var t=/\s/;e.exports=function(e){for(var n=e.length;n--&&t.test(e.charAt(n)););return n}},1903:e=>{var t="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",n="\\ud83c[\\udffb-\\udfff]",r="[^\\ud800-\\udfff]",s="(?:\\ud83c[\\udde6-\\uddff]){2}",a="[\\ud800-\\udbff][\\udc00-\\udfff]",i="(?:"+t+"|"+n+")?",o="[\\ufe0e\\ufe0f]?",l=o+i+"(?:\\u200d(?:"+[r,s,a].join("|")+")"+o+i+")*",u="(?:"+[r+t+"?",t,s,a,"[\\ud800-\\udfff]"].join("|")+")",c=RegExp(n+"(?="+n+")|"+u+l,"g");e.exports=function(e){for(var t=c.lastIndex=0;c.test(e);)++t;return t}},676:e=>{var t="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",n="\\ud83c[\\udffb-\\udfff]",r="[^\\ud800-\\udfff]",s="(?:\\ud83c[\\udde6-\\uddff]){2}",a="[\\ud800-\\udbff][\\udc00-\\udfff]",i="(?:"+t+"|"+n+")?",o="[\\ufe0e\\ufe0f]?",l=o+i+"(?:\\u200d(?:"+[r,s,a].join("|")+")"+o+i+")*",u="(?:"+[r+t+"?",t,s,a,"[\\ud800-\\udfff]"].join("|")+")",c=RegExp(n+"(?="+n+")|"+u+l,"g");e.exports=function(e){return e.match(c)||[]}},3279:(e,t,n)=>{var r=n(3218),s=n(7771),a=n(4841),i=Math.max,o=Math.min;e.exports=function(e,t,n){var l,u,c,h,d,p,f=0,g=!1,m=!1,b=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(t){var n=l,r=u;return l=u=void 0,f=t,h=e.apply(r,n)}function x(e){return f=e,d=setTimeout(w,t),g?y(e):h}function v(e){var n=e-p;return void 0===p||n>=t||n<0||m&&e-f>=c}function w(){var e=s();if(v(e))return k(e);d=setTimeout(w,function(e){var n=t-(e-p);return m?o(n,c-(e-f)):n}(e))}function k(e){return d=void 0,b&&l?y(e):(l=u=void 0,h)}function I(){var e=s(),n=v(e);if(l=arguments,u=this,p=e,n){if(void 0===d)return x(p);if(m)return clearTimeout(d),d=setTimeout(w,t),y(p)}return void 0===d&&(d=setTimeout(w,t)),h}return t=a(t)||0,r(n)&&(g=!!n.leading,c=(m="maxWait"in n)?i(a(n.maxWait)||0,t):c,b="trailing"in n?!!n.trailing:b),I.cancel=function(){void 0!==d&&clearTimeout(d),f=0,l=p=u=d=void 0},I.flush=function(){return void 0===d?h:k(s())},I}},7813:e=>{e.exports=function(e,t){return e===t||e!=e&&t!=t}},5694:(e,t,n)=>{var r=n(9454),s=n(7005),a=Object.prototype,i=a.hasOwnProperty,o=a.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return s(e)&&i.call(e,"callee")&&!o.call(e,"callee")};e.exports=l},1469:e=>{var t=Array.isArray;e.exports=t},8612:(e,t,n)=>{var r=n(3560),s=n(1780);e.exports=function(e){return null!=e&&s(e.length)&&!r(e)}},4144:(e,t,n)=>{e=n.nmd(e);var r=n(5639),s=n(5062),a=t&&!t.nodeType&&t,i=a&&e&&!e.nodeType&&e,o=i&&i.exports===a?r.Buffer:void 0,l=(o?o.isBuffer:void 0)||s;e.exports=l},3560:(e,t,n)=>{var r=n(4239),s=n(3218);e.exports=function(e){if(!s(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},1780:e=>{e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},3218:e=>{e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},7005:e=>{e.exports=function(e){return null!=e&&"object"==typeof e}},3448:(e,t,n)=>{var r=n(4239),s=n(7005);e.exports=function(e){return"symbol"==typeof e||s(e)&&"[object Symbol]"==r(e)}},6719:(e,t,n)=>{var r=n(8749),s=n(7518),a=n(1167),i=a&&a.isTypedArray,o=i?s(i):r;e.exports=o},3674:(e,t,n)=>{var r=n(4636),s=n(280),a=n(8612);e.exports=function(e){return a(e)?r(e):s(e)}},7771:(e,t,n)=>{var r=n(5639);e.exports=function(){return r.Date.now()}},2475:(e,t,n)=>{var r=n(8302),s=n(8016),a=n(554),i=n(9833);e.exports=function(e,t,n){e=i(e);var o=(t=a(t))?s(e):0;return t&&o<t?r(t-o,n)+e:e}},6026:(e,t,n)=>{var r=n(7445)();e.exports=r},5534:(e,t,n)=>{var r=n(4311),s=n(4992),a=n(1469);e.exports=function(e){return(a(e)?r:s)(e)}},9983:(e,t,n)=>{var r=n(151),s=n(5127),a=n(1469);e.exports=function(e){return(a(e)?r:s)(e)}},5062:e=>{e.exports=function(){return!1}},3493:(e,t,n)=>{var r=n(3279),s=n(3218);e.exports=function(e,t,n){var a=!0,i=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return s(n)&&(a="leading"in n?!!n.leading:a,i="trailing"in n?!!n.trailing:i),r(e,t,{leading:a,maxWait:t,trailing:i})}},8601:(e,t,n)=>{var r=n(4841);e.exports=function(e){return e?Infinity===(e=r(e))||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}},554:(e,t,n)=>{var r=n(8601);e.exports=function(e){var t=r(e),n=t%1;return t==t?n?t-n:t:0}},4841:(e,t,n)=>{var r=n(7561),s=n(3218),a=n(3448),i=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,l=/^0o[0-7]+$/i,u=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(a(e))return NaN;if(s(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=s(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=r(e);var n=o.test(e);return n||l.test(e)?u(e.slice(2),n?2:8):i.test(e)?NaN:+e}},9833:(e,t,n)=>{var r=n(531);e.exports=function(e){return null==e?"":r(e)}},2628:(e,t,n)=>{var r=n(7415),s=n(3674);e.exports=function(e){return null==e?[]:r(e,s(e))}},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=m,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=i(1<<24),m=i(0);n.ZERO=m;var b=i(0,!0);n.UZERO=b;var y=i(1);n.ONE=y;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var $=n.prototype;$.toInt=function(){return this.unsigned?this.low>>>0:this.low},$.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},$.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},$.getHighBits=function(){return this.high},$.getHighBitsUnsigned=function(){return this.high>>>0},$.getLowBits=function(){return this.low},$.getLowBitsUnsigned=function(){return this.low>>>0},$.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},$.isZero=function(){return 0===this.high&&0===this.low},$.eqz=$.isZero,$.isNegative=function(){return!this.unsigned&&this.high<0},$.isPositive=function(){return this.unsigned||this.high>=0},$.isOdd=function(){return 1==(1&this.low)},$.isEven=function(){return 0==(1&this.low)},$.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},$.eq=$.equals,$.notEquals=function(e){return!this.eq(e)},$.neq=$.notEquals,$.ne=$.notEquals,$.lessThan=function(e){return this.comp(e)<0},$.lt=$.lessThan,$.lessThanOrEqual=function(e){return this.comp(e)<=0},$.lte=$.lessThanOrEqual,$.le=$.lessThanOrEqual,$.greaterThan=function(e){return this.comp(e)>0},$.gt=$.greaterThan,$.greaterThanOrEqual=function(e){return this.comp(e)>=0},$.gte=$.greaterThanOrEqual,$.ge=$.greaterThanOrEqual,$.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},$.comp=$.compare,$.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},$.neg=$.negate,$.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},$.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},$.sub=$.subtract,$.multiply=function(e){if(this.isZero())return m;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=i*p)>>>16,b+=(y+=a*p)>>>16,y&=65535,b+=(y+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+a*c+i*u,l((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},$.mul=$.multiply,$.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;a=b}else{if(this.eq(I))return e.eq(y)||e.eq(v)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?y:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),a=a.add(d),s=s.sub(p)}return a},$.div=$.divide,$.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},$.mod=$.modulo,$.rem=$.modulo,$.not=function(){return l(~this.low,~this.high,this.unsigned)},$.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},$.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},$.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},$.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},$.shl=$.shiftLeft,$.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},$.shr=$.shiftRight,$.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},$.shru=$.shiftRightUnsigned,$.shr_u=$.shiftRightUnsigned,$.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},$.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},$.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},$.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},$.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),s=n(8652),a=n(801),i=n(2030),o=n(3618),l=n(9049),u=n(1971);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},4832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(x,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},5042:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>up,computeFlatOffset:()=>kp,computeOutShape:()=>hp,getNormalizedAxes:()=>gp,isSliceContinous:()=>wp,maskToAxes:()=>cp,parseSliceParams:()=>Ip,sliceInfo:()=>$p,startForAxis:()=>xp,startIndicesWithElidedDims:()=>mp,stopForAxis:()=>vp,stopIndicesWithElidedDims:()=>bp,stridesForAxis:()=>yp,stridesWithElidedDims:()=>dp});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>jb,computeOutShape:()=>Hb,segOpComputeOptimalWindowSize:()=>Gb});var r={};n.r(r),n.d(r,{ERF_A1:()=>wb,ERF_A2:()=>kb,ERF_A3:()=>Ib,ERF_A4:()=>$b,ERF_A5:()=>Nb,ERF_P:()=>vb,PARALLELIZE_THRESHOLD:()=>ib,SELU_SCALE:()=>xb,SELU_SCALEALPHA:()=>yb,applyActivation:()=>om,assertAndGetBroadcastShape:()=>Af,assertAxesAreInnerMostDims:()=>og,assertParamsConsistent:()=>sb,assignToTypedArray:()=>Fb,axesAreInnerMostDims:()=>rg,calculateShapes:()=>bb,checkEinsumDimSizes:()=>Bb,combineLocations:()=>sg,complexWithEvenIndex:()=>Ab,complexWithOddIndex:()=>Rb,computeConv2DInfo:()=>Hp,computeConv3DInfo:()=>jp,computeDefaultPad:()=>qp,computeDilation2DInfo:()=>Vp,computeOptimalWindowSize:()=>ob,computeOutAndReduceShapes:()=>ag,computeOutShape:()=>ab,computePool2DInfo:()=>Up,computePool3DInfo:()=>Gp,convertConv2DDataFormat:()=>ef,decodeEinsumEquation:()=>Lb,eitherStridesOrDilationsAreOne:()=>Qp,expandShapeToKeepDim:()=>ig,exponent:()=>Mb,exponents:()=>Db,fromStringArrayToUint8:()=>Kb,fromUint8ToStringArray:()=>qb,getAxesPermutation:()=>lg,getBroadcastDims:()=>Ef,getComplexWithIndex:()=>_b,getEinsumComputePath:()=>Pb,getEinsumPermutation:()=>zb,getFusedBiasGradient:()=>im,getFusedDyActivation:()=>am,getImageCenter:()=>lb,getInnerMostAxes:()=>cg,getPermuted:()=>cb,getReductionAxes:()=>Tf,getReshaped:()=>ub,getReshapedPermuted:()=>hb,getSliceBeginCoords:()=>db,getSliceSize:()=>pb,getUndoAxesPermutation:()=>ug,isIdentityPermutation:()=>Wb,log:()=>Sb,mergeRealAndImagArrays:()=>Eb,prepareAndValidate:()=>fb,prepareSplitSize:()=>Ub,segment_util:()=>t,shouldFuse:()=>lm,slice_util:()=>e,splitRealAndImagArrays:()=>Tb,tupleValuesAreOne:()=>Jp,upcastType:()=>Qh,validateInput:()=>mb,validateUpdateShape:()=>gb,warn:()=>Cb});var s={};function a(){}n.r(s),n.d(s,{addImpl:()=>eS,bincountImpl:()=>jS,bincountReduceImpl:()=>qS,ceilImpl:()=>YS,concatImpl:()=>nE,equalImpl:()=>zE,expImpl:()=>XE,expm1Impl:()=>eT,floorImpl:()=>bT,gatherNdImpl:()=>NT,gatherV2Impl:()=>ST,greaterEqualImpl:()=>_T,greaterImpl:()=>TT,lessEqualImpl:()=>HT,lessImpl:()=>VT,linSpaceImpl:()=>KT,logImpl:()=>YT,maxImpl:()=>hA,maximumImpl:()=>fA,minimumImpl:()=>$A,multiplyImpl:()=>AE,negImpl:()=>DA,notEqualImpl:()=>VA,prodImpl:()=>tR,rangeImpl:()=>rR,rsqrtImpl:()=>gR,simpleAbsImpl:()=>uS,sliceImpl:()=>VS,sparseFillEmptyRowsImpl:()=>MR,sparseReshapeImpl:()=>LR,sparseSegmentReductionImpl:()=>BR,squaredDifferenceImpl:()=>qR,stridedSliceImpl:()=>JR,stringNGramsImpl:()=>t_,stringSplitImpl:()=>s_,stringToHashBucketFastImpl:()=>i_,subImpl:()=>iT,tileImpl:()=>h_,topKImpl:()=>d_,transposeImpl:()=>mS,uniqueImpl:()=>b_});const i=e=>e;function o(e,t){for(const n in t)e[n]=t[n];return e}function l(e){return e()}function u(){return Object.create(null)}function c(e){e.forEach(l)}function h(e){return"function"==typeof e}function d(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function p(e){return 0===Object.keys(e).length}function f(e,t,n,r){if(e){const s=g(e,t,n,r);return e[0](s)}}function g(e,t,n,r){return e[1]&&r?o(n.ctx.slice(),e[1](r(t))):n.ctx}function m(e,t,n,r,s,a,i){const o=function(e,t,n,r){if(e[2]&&r){const s=e[2](r(n));if(void 0===t.dirty)return s;if("object"==typeof s){const e=[],n=Math.max(t.dirty.length,s.length);for(let r=0;r<n;r+=1)e[r]=t.dirty[r]|s[r];return e}return t.dirty|s}return t.dirty}(t,r,s,a);if(o){const s=g(t,n,r,i);e.p(s,o)}}function b(e){const t={};for(const n in e)"$"!==n[0]&&(t[n]=e[n]);return t}function y(e){return null==e?"":e}const x="undefined"!=typeof window;let v=x?()=>window.performance.now():()=>Date.now(),w=x?e=>requestAnimationFrame(e):a;const k=new Set;function I(e){k.forEach((t=>{t.c(e)||(k.delete(t),t.f())})),0!==k.size&&w(I)}function $(e){let t;return 0===k.size&&w(I),{promise:new Promise((n=>{k.add(t={c:e,f:n})})),abort(){k.delete(t)}}}function N(e,t){e.appendChild(t)}function C(e,t,n){e.insertBefore(t,n||null)}function S(e){e.parentNode.removeChild(e)}function E(e,t){for(let n=0;n<e.length;n+=1)e[n]&&e[n].d(t)}function T(e){return document.createElement(e)}function A(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function R(e){return document.createTextNode(e)}function _(){return R(" ")}function F(){return R("")}function D(e,t,n,r){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n,r)}function M(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function O(e,t){for(const n in t)M(e,n,t[n])}function L(e,t){t=""+t,e.wholeText!==t&&(e.data=t)}function z(e,t){e.value=null==t?"":t}function B(e,t,n){e.classList[n?"add":"remove"](t)}class P{constructor(e=null){this.a=e,this.e=this.n=null}m(e,t,n=null){this.e||(this.e=T(t.nodeName),this.t=t,this.h(e)),this.i(n)}h(e){this.e.innerHTML=e,this.n=Array.from(this.e.childNodes)}i(e){for(let t=0;t<this.n.length;t+=1)C(this.t,this.n[t],e)}p(e){this.d(),this.h(e),this.i(this.a)}d(){this.n.forEach(S)}}const W=new Set;let V,U=0;function G(e,t,n,r,s,a,i,o=0){const l=16.666/r;let u="{\n";for(let e=0;e<=1;e+=l){const r=t+(n-t)*a(e);u+=100*e+`%{${i(r,1-r)}}\n`}const c=u+`100% {${i(n,1-n)}}\n}`,h=`__svelte_${function(e){let t=5381,n=e.length;for(;n--;)t=(t<<5)-t^e.charCodeAt(n);return t>>>0}(c)}_${o}`,d=e.ownerDocument;W.add(d);const p=d.__svelte_stylesheet||(d.__svelte_stylesheet=d.head.appendChild(T("style")).sheet),f=d.__svelte_rules||(d.__svelte_rules={});f[h]||(f[h]=!0,p.insertRule(`@keyframes ${h} ${c}`,p.cssRules.length));const g=e.style.animation||"";return e.style.animation=`${g?`${g}, `:""}${h} ${r}ms linear ${s}ms 1 both`,U+=1,h}function H(e,t){const n=(e.style.animation||"").split(", "),r=n.filter(t?e=>e.indexOf(t)<0:e=>-1===e.indexOf("__svelte")),s=n.length-r.length;s&&(e.style.animation=r.join(", "),U-=s,U||w((()=>{U||(W.forEach((e=>{const t=e.__svelte_stylesheet;let n=t.cssRules.length;for(;n--;)t.deleteRule(n);e.__svelte_rules={}})),W.clear())})))}function j(e){V=e}function q(){if(!V)throw new Error("Function called outside component initialization");return V}function K(e){q().$$.on_mount.push(e)}function X(e,t){q().$$.context.set(e,t)}function Y(e){return q().$$.context.get(e)}const Z=[],J=[],Q=[],ee=[],te=Promise.resolve();let ne=!1;function re(e){Q.push(e)}function se(e){ee.push(e)}let ae=!1;const ie=new Set;function oe(){if(!ae){ae=!0;do{for(let e=0;e<Z.length;e+=1){const t=Z[e];j(t),le(t.$$)}for(j(null),Z.length=0;J.length;)J.pop()();for(let e=0;e<Q.length;e+=1){const t=Q[e];ie.has(t)||(ie.add(t),t())}Q.length=0}while(Z.length);for(;ee.length;)ee.pop()();ne=!1,ae=!1,ie.clear()}}function le(e){if(null!==e.fragment){e.update(),c(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(re)}}let ue;function ce(){return ue||(ue=Promise.resolve(),ue.then((()=>{ue=null}))),ue}function he(e,t,n){e.dispatchEvent(function(e,t){const n=document.createEvent("CustomEvent");return n.initCustomEvent(e,!1,!1,t),n}(`${t?"intro":"outro"}${n}`))}const de=new Set;let pe;function fe(){pe={r:0,c:[],p:pe}}function ge(){pe.r||c(pe.c),pe=pe.p}function me(e,t){e&&e.i&&(de.delete(e),e.i(t))}function be(e,t,n,r){if(e&&e.o){if(de.has(e))return;de.add(e),pe.c.push((()=>{de.delete(e),r&&(n&&e.d(1),r())})),e.o(t)}}const ye={duration:0};function xe(e,t,n){let r,s,o=t(e,n),l=!1,u=0;function c(){r&&H(e,r)}function d(){const{delay:t=0,duration:n=300,easing:h=i,tick:d=a,css:p}=o||ye;p&&(r=G(e,0,1,n,t,h,p,u++)),d(0,1);const f=v()+t,g=f+n;s&&s.abort(),l=!0,re((()=>he(e,!0,"start"))),s=$((t=>{if(l){if(t>=g)return d(1,0),he(e,!0,"end"),c(),l=!1;if(t>=f){const e=h((t-f)/n);d(e,1-e)}}return l}))}let p=!1;return{start(){p||(H(e),h(o)?(o=o(),ce().then(d)):d())},invalidate(){p=!1},end(){l&&(c(),l=!1)}}}function ve(e,t){be(e,1,1,(()=>{t.delete(e.key)}))}function we(e,t,n,r,s,a,i,o,l,u,c,h){let d=e.length,p=a.length,f=d;const g={};for(;f--;)g[e[f].key]=f;const m=[],b=new Map,y=new Map;for(f=p;f--;){const e=h(s,a,f),o=n(e);let l=i.get(o);l?r&&l.p(e,t):(l=u(o,e),l.c()),b.set(o,m[f]=l),o in g&&y.set(o,Math.abs(f-g[o]))}const x=new Set,v=new Set;function w(e){me(e,1),e.m(o,c),i.set(e.key,e),c=e.first,p--}for(;d&&p;){const t=m[p-1],n=e[d-1],r=t.key,s=n.key;t===n?(c=t.first,d--,p--):b.has(s)?!i.has(r)||x.has(r)?w(t):v.has(s)?d--:y.get(r)>y.get(s)?(v.add(r),w(t)):(x.add(s),d--):(l(n,i),d--)}for(;d--;){const t=e[d];b.has(t.key)||l(t,i)}for(;p;)w(m[p-1]);return m}function ke(e,t){const n={},r={},s={$$scope:1};let a=e.length;for(;a--;){const i=e[a],o=t[a];if(o){for(const e in i)e in o||(r[e]=1);for(const e in o)s[e]||(n[e]=o[e],s[e]=1);e[a]=o}else for(const e in i)s[e]=1}for(const e in r)e in n||(n[e]=void 0);return n}function Ie(e){return"object"==typeof e&&null!==e?e:{}}let $e;function Ne(e,t,n){const r=e.$$.props[t];void 0!==r&&(e.$$.bound[r]=n,n(e.$$.ctx[r]))}function Ce(e){e&&e.c()}function Se(e,t,n,r){const{fragment:s,on_mount:a,on_destroy:i,after_update:o}=e.$$;s&&s.m(t,n),r||re((()=>{const t=a.map(l).filter(h);i?i.push(...t):c(t),e.$$.on_mount=[]})),o.forEach(re)}function Ee(e,t){const n=e.$$;null!==n.fragment&&(c(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function Te(e,t,n,r,s,i,o=[-1]){const l=V;j(e);const h=e.$$={fragment:null,ctx:null,props:i,update:a,not_equal:s,bound:u(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(l?l.$$.context:t.context||[]),callbacks:u(),dirty:o,skip_bound:!1};let d=!1;if(h.ctx=n?n(e,t.props||{},((t,n,...r)=>{const a=r.length?r[0]:n;return h.ctx&&s(h.ctx[t],h.ctx[t]=a)&&(!h.skip_bound&&h.bound[t]&&h.bound[t](a),d&&function(e,t){-1===e.$$.dirty[0]&&(Z.push(e),ne||(ne=!0,te.then(oe)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}(e,t)),n})):[],h.update(),d=!0,c(h.before_update),h.fragment=!!r&&r(h.ctx),t.target){if(t.hydrate){const e=(p=t.target,Array.from(p.childNodes));h.fragment&&h.fragment.l(e),e.forEach(S)}else h.fragment&&h.fragment.c();t.intro&&me(e.$$.fragment),Se(e,t.target,t.anchor,t.customElement),oe()}var p;j(l)}"undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global,new Set(["allowfullscreen","allowpaymentrequest","async","autofocus","autoplay","checked","controls","default","defer","disabled","formnovalidate","hidden","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","selected"]),"function"==typeof HTMLElement&&($e=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:e}=this.$$;this.$$.on_disconnect=e.map(l).filter(h);for(const e in this.$$.slotted)this.appendChild(this.$$.slotted[e])}attributeChangedCallback(e,t,n){this[e]=n}disconnectedCallback(){c(this.$$.on_disconnect)}$destroy(){Ee(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!p(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}});class Ae{$destroy(){Ee(this,1),this.$destroy=a}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){this.$$set&&!p(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function Re(e){return e*e*e}function _e(e){const t=e-1;return t*t*t+1}function Fe(e,{delay:t=0,duration:n=400,easing:r=i}={}){const s=+getComputedStyle(e).opacity;return{delay:t,duration:n,easing:r,css:e=>"opacity: "+e*s}}function De(e,{delay:t=0,duration:n=400,easing:r=_e,x:s=0,y:a=0,opacity:i=0}={}){const o=getComputedStyle(e),l=+o.opacity,u="none"===o.transform?"":o.transform,c=l*(1-i);return{delay:t,duration:n,easing:r,css:(e,t)=>`\n\t\t\ttransform: ${u} translate(${(1-e)*s}px, ${(1-e)*a}px);\n\t\t\topacity: ${l-c*t}`}}var Me=n(6026),Oe=n.n(Me),Le=(n(5534),n(2475)),ze=n.n(Le),Be=n(9983),Pe=n.n(Be);function We(e,t,n){const r=e.slice();return r[14]=t[n],r}function Ve(e,t,n){const r=e.slice();return r[17]=t[n],r}function Ue(e,t,n){const r=e.slice();return r[20]=t[n],r}function Ge(e,t){let n,r,s,o,l,u,d,p,f,g,m;return{key:e,first:null,c(){n=T("div"),r=T("div"),s=T("div"),o=T("figure"),l=T("img"),p=_(),l.src!==(u=t[3](t[20]))&&M(l,"src",u),M(l,"alt",d=t[20].name),M(o,"class","image is-square svelte-5jzoyd"),M(s,"class","card-image"),M(r,"class","card current_sample svelte-5jzoyd"),M(r,"draggable","true"),M(n,"class","column is-narrow"),this.first=n},m(e,t){C(e,n,t),N(n,r),N(r,s),N(s,o),N(o,l),N(n,p),m=!0},p(e,n){t=e,(!m||4&n&&l.src!==(u=t[3](t[20])))&&M(l,"src",u),(!m||4&n&&d!==(d=t[20].name))&&M(l,"alt",d)},i(e){m||(e&&re((()=>{g&&g.end(1),f||(f=xe(n,De,{x:200,duration:200,easing:Re})),f.start()})),m=!0)},o(e){f&&f.invalidate(),e&&(g=function(e,t,n){let r,s=t(e,n),o=!0;const l=pe;function u(){const{delay:t=0,duration:n=300,easing:u=i,tick:h=a,css:d}=s||ye;d&&(r=G(e,1,0,n,t,u,d));const p=v()+t,f=p+n;re((()=>he(e,!1,"start"))),$((t=>{if(o){if(t>=f)return h(0,1),he(e,!1,"end"),--l.r||c(l.c),!1;if(t>=p){const e=u((t-p)/n);h(1-e,e)}}return o}))}return l.r+=1,h(s)?ce().then((()=>{s=s(),u()})):u(),{end(t){t&&s.tick&&s.tick(1,0),o&&(r&&H(e,r),o=!1)}}}(n,De,{x:-200,duration:200,easing:_e})),m=!1},d(e){e&&S(n),e&&g&&g.end()}}}function He(e){let t,n,r,s,a,i,o,l,u,h,d;function p(...t){return e[8](e[17],...t)}function f(...t){return e[9](e[17],...t)}function g(...t){return e[10](e[17],...t)}function m(...t){return e[11](e[17],...t)}return{c(){t=T("div"),n=T("div"),r=T("div"),s=T("figure"),a=T("img"),u=_(),a.src!==(i=e[3](e[17]))&&M(a,"src",i),M(a,"alt",o=e[17].name),M(a,"draggable","false"),M(s,"class","image is-square svelte-5jzoyd"),M(s,"draggable","false"),M(r,"class","card-image"),M(r,"draggable","false"),M(n,"draggable","false"),M(n,"class",l=y(`card class_card ${e[17].feedback_class}`)+" svelte-5jzoyd"),B(n,"dragover",e[17].dragover),M(t,"class","column is-narrow")},m(e,i){C(e,t,i),N(t,n),N(n,r),N(r,s),N(s,a),N(t,u),h||(d=[D(n,"drop",p),D(n,"click",f),D(n,"dragenter",g),D(n,"dragleave",m),D(n,"dragover",Ye)],h=!0)},p(t,r){e=t,4&r&&a.src!==(i=e[3](e[17]))&&M(a,"src",i),4&r&&o!==(o=e[17].name)&&M(a,"alt",o),4&r&&l!==(l=y(`card class_card ${e[17].feedback_class}`)+" svelte-5jzoyd")&&M(n,"class",l),4&r&&B(n,"dragover",e[17].dragover)},d(e){e&&S(t),h=!1,c(d)}}}function je(e,t){let n,r,s,a,i,o,l,u=[],c=new Map,h=t[14].current_sample;const d=e=>e[20].name;for(let e=0;e<h.length;e+=1){let n=Ue(t,h,e),r=d(n);c.set(r,u[e]=Ge(r,n))}let p=t[14].examples,f=[];for(let e=0;e<p.length;e+=1)f[e]=He(Ve(t,p,e));return{key:e,first:null,c(){n=T("div"),r=T("div");for(let e=0;e<u.length;e+=1)u[e].c();s=_(),a=T("div");for(let e=0;e<f.length;e+=1)f[e].c();i=_(),M(r,"class","columns is-mobile is-narrow svelte-5jzoyd"),M(a,"class","columns is-mobile is-multiline is-0 is-variable svelte-5jzoyd"),M(n,"class","column task is-full"),this.first=n},m(e,t){C(e,n,t),N(n,r);for(let e=0;e<u.length;e+=1)u[e].m(r,null);N(n,s),N(n,a);for(let e=0;e<f.length;e+=1)f[e].m(a,null);N(n,i),l=!0},p(e,n){if(t=e,12&n&&(h=t[14].current_sample,fe(),u=we(u,n,d,1,t,h,c,r,ve,Ge,null,Ue),ge()),236&n){let e;for(p=t[14].examples,e=0;e<p.length;e+=1){const r=Ve(t,p,e);f[e]?f[e].p(r,n):(f[e]=He(r),f[e].c(),f[e].m(a,null))}for(;e<f.length;e+=1)f[e].d(1);f.length=p.length}},i(e){if(!l){for(let e=0;e<h.length;e+=1)me(u[e]);o||re((()=>{o=xe(n,Fe,{duration:200,easing:Re}),o.start()})),l=!0}},o(e){for(let e=0;e<u.length;e+=1)be(u[e]);l=!1},d(e){e&&S(n);for(let e=0;e<u.length;e+=1)u[e].d();E(f,e)}}}function qe(e){let t;return{c(){t=R("Which of the classes does the character belong to?")},m(e,n){C(e,t,n)},p:a,d(e){e&&S(t)}}}function Ke(e){let t,n,r=(100*e[1]/e[0]).toFixed(1)+"";return{c(){t=R(r),n=R("% accuracy")},m(e,r){C(e,t,r),C(e,n,r)},p(e,n){3&n&&r!==(r=(100*e[1]/e[0]).toFixed(1)+"")&&L(t,r)},d(e){e&&S(t),e&&S(n)}}}function Xe(e){let t,n,r,s,a,i,o,l,u,c,h,d,p,f,g,m,b,y,x=[],v=new Map,w=e[2];const k=e=>e[14].id;for(let t=0;t<w.length;t+=1){let n=We(e,w,t),r=k(n);v.set(r,x[t]=je(r,n))}function I(e,t){return e[0]>0?Ke:qe}let $=I(e),E=$(e);return{c(){t=T("div"),n=T("div");for(let e=0;e<x.length;e+=1)x[e].c();r=_(),s=T("div"),a=T("div"),i=T("span"),o=R(e[1]),l=R(" out of "),u=R(e[0]),c=_(),h=T("div"),d=T("span"),E.c(),p=_(),f=T("div"),g=T("button"),g.textContent="New Task",M(n,"class","columns is-mobile tasks svelte-5jzoyd"),M(a,"class","column is-narrow"),M(h,"class","column is-narrow"),M(g,"class","button"),M(f,"class","column is-narrow"),M(s,"class","columns stats svelte-5jzoyd"),M(t,"class","container svelte-5jzoyd")},m(v,w){C(v,t,w),N(t,n);for(let e=0;e<x.length;e+=1)x[e].m(n,null);N(t,r),N(t,s),N(s,a),N(a,i),N(i,o),N(i,l),N(i,u),N(s,c),N(s,h),N(h,d),E.m(d,null),N(s,p),N(s,f),N(f,g),m=!0,b||(y=D(g,"click",e[4]),b=!0)},p(e,[t]){236&t&&(w=e[2],fe(),x=we(x,t,k,1,e,w,v,n,ve,je,null,We),ge()),(!m||2&t)&&L(o,e[1]),(!m||1&t)&&L(u,e[0]),$===($=I(e))&&E?E.p(e,t):(E.d(1),E=$(e),E&&(E.c(),E.m(d,null)))},i(e){if(!m){for(let e=0;e<w.length;e+=1)me(x[e]);m=!0}},o(e){for(let e=0;e<x.length;e+=1)be(x[e]);m=!1},d(e){e&&S(t);for(let e=0;e<x.length;e+=1)x[e].d();E.d(),b=!1,y()}}}const Ye=e=>{e.preventDefault()};function Ze(e,t,n){let r=0,s=0,a=[{id:null}];const i=e=>e.splice(Math.floor(Math.random()*e.length),1)[0],o=()=>{let e=Oe()(1,965),t=[],r=[];for(let n=0;n<5;n++){let n=i(e),s=ze()(n,4,"0"),a=Oe()(1,21).map((e=>({cls:s,name:`${s}_${ze()(e,2,"0")}`}))),o=i(a);o.dragover=!1,t.push({...o,element:null}),r.push(...a)}r=Pe()(r),t.map((e=>e.cls)).join(",")==a[0].id?o():n(2,a=[{examples:t,remaining_samples:r,current_sample:[r.pop()],id:t.map((e=>e.cls)).join(",")}])},l=()=>{n(2,a=[...a])};o();let u=(e,t)=>{e.preventDefault(),t.dragover=!0,l()},c=(e,t)=>{e.preventDefault(),t.dragover=!1,l()},h=(e,t)=>{e.preventDefault(),n(0,r+=1),a[0].current_sample[0].cls==t.cls?(n(1,s+=1),t.feedback_class="correct"):t.feedback_class="incorrect",setTimeout((()=>{t.feedback_class="",l()}),400),a[0].remaining_samples.length>0?n(2,a[0].current_sample=[a[0].remaining_samples.pop()],a):o(),t.dragover=!1,l()};return[r,s,a,e=>`./img/omniglot/all_characters/${e.name.substr(0,2)}/${e.name.substr(2,2)}/${e.name}.png`,o,u,c,h,(e,t)=>h(t,e),(e,t)=>h(t,e),(e,t)=>u(t,e),(e,t)=>c(t,e)]}function Je(e,t){let n,r;if(void 0===t)for(const t of e)null!=t&&(void 0===n?t>=t&&(n=r=t):(n>t&&(n=t),r<t&&(r=t)));else{let s=-1;for(let a of e)null!=(a=t(a,++s,e))&&(void 0===n?a>=a&&(n=r=a):(n>a&&(n=a),r<a&&(r=a)))}return[n,r]}var Qe=Array.prototype.slice;function et(e){return e}var tt=1e-6;function nt(e){return"translate("+e+",0)"}function rt(e){return"translate(0,"+e+")"}function st(e){return t=>+e(t)}function at(e,t){return t=Math.max(0,e.bandwidth()-2*t)/2,e.round()&&(t=Math.round(t)),n=>+e(n)+t}function it(){return!this.__axis}function ot(e,t){var n=[],r=null,s=null,a=6,i=6,o=3,l="undefined"!=typeof window&&window.devicePixelRatio>1?0:.5,u=1===e||4===e?-1:1,c=4===e||2===e?"x":"y",h=1===e||3===e?nt:rt;function d(d){var p=null==r?t.ticks?t.ticks.apply(t,n):t.domain():r,f=null==s?t.tickFormat?t.tickFormat.apply(t,n):et:s,g=Math.max(a,0)+o,m=t.range(),b=+m[0]+l,y=+m[m.length-1]+l,x=(t.bandwidth?at:st)(t.copy(),l),v=d.selection?d.selection():d,w=v.selectAll(".domain").data([null]),k=v.selectAll(".tick").data(p,t).order(),I=k.exit(),$=k.enter().append("g").attr("class","tick"),N=k.select("line"),C=k.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),k=k.merge($),N=N.merge($.append("line").attr("stroke","currentColor").attr(c+"2",u*a)),C=C.merge($.append("text").attr("fill","currentColor").attr(c,u*g).attr("dy",1===e?"0em":3===e?"0.71em":"0.32em")),d!==v&&(w=w.transition(d),k=k.transition(d),N=N.transition(d),C=C.transition(d),I=I.transition(d).attr("opacity",tt).attr("transform",(function(e){return isFinite(e=x(e))?h(e+l):this.getAttribute("transform")})),$.attr("opacity",tt).attr("transform",(function(e){var t=this.parentNode.__axis;return h((t&&isFinite(t=t(e))?t:x(e))+l)}))),I.remove(),w.attr("d",4===e||2===e?i?"M"+u*i+","+b+"H"+l+"V"+y+"H"+u*i:"M"+l+","+b+"V"+y:i?"M"+b+","+u*i+"V"+l+"H"+y+"V"+u*i:"M"+b+","+l+"H"+y),k.attr("opacity",1).attr("transform",(function(e){return h(x(e)+l)})),N.attr(c+"2",u*a),C.attr(c,u*g).text(f),v.filter(it).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===e?"start":4===e?"end":"middle"),v.each((function(){this.__axis=x}))}return d.scale=function(e){return arguments.length?(t=e,d):t},d.ticks=function(){return n=Qe.call(arguments),d},d.tickArguments=function(e){return arguments.length?(n=null==e?[]:Qe.call(e),d):n.slice()},d.tickValues=function(e){return arguments.length?(r=null==e?null:Qe.call(e),d):r&&r.slice()},d.tickFormat=function(e){return arguments.length?(s=e,d):s},d.tickSize=function(e){return arguments.length?(a=i=+e,d):a},d.tickSizeInner=function(e){return arguments.length?(a=+e,d):a},d.tickSizeOuter=function(e){return arguments.length?(i=+e,d):i},d.tickPadding=function(e){return arguments.length?(o=+e,d):o},d.offset=function(e){return arguments.length?(l=+e,d):l},d}function lt(){}function ut(e){return null==e?lt:function(){return this.querySelector(e)}}function ct(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function ht(){return[]}function dt(e){return null==e?ht:function(){return this.querySelectorAll(e)}}function pt(e){return function(){return this.matches(e)}}function ft(e){return function(t){return t.matches(e)}}var gt=Array.prototype.find;function mt(){return this.firstElementChild}var bt=Array.prototype.filter;function yt(){return this.children}function xt(e){return new Array(e.length)}function vt(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function wt(e){return function(){return e}}function kt(e,t,n,r,s,a){for(var i,o=0,l=t.length,u=a.length;o<u;++o)(i=t[o])?(i.__data__=a[o],r[o]=i):n[o]=new vt(e,a[o]);for(;o<l;++o)(i=t[o])&&(s[o]=i)}function It(e,t,n,r,s,a,i){var o,l,u,c=new Map,h=t.length,d=a.length,p=new Array(h);for(o=0;o<h;++o)(l=t[o])&&(p[o]=u=i.call(l,l.__data__,o,t)+"",c.has(u)?s[o]=l:c.set(u,l));for(o=0;o<d;++o)u=i.call(e,a[o],o,a)+"",(l=c.get(u))?(r[o]=l,l.__data__=a[o],c.delete(u)):n[o]=new vt(e,a[o]);for(o=0;o<h;++o)(l=t[o])&&c.get(p[o])===l&&(s[o]=l)}function $t(e){return e.__data__}function Nt(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}vt.prototype={constructor:vt,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var Ct="http://www.w3.org/1999/xhtml";const St={svg:"http://www.w3.org/2000/svg",xhtml:Ct,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Et(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),St.hasOwnProperty(t)?{space:St[t],local:e}:e}function Tt(e){return function(){this.removeAttribute(e)}}function At(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Rt(e,t){return function(){this.setAttribute(e,t)}}function _t(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function Ft(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}function Dt(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function Mt(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function Ot(e){return function(){this.style.removeProperty(e)}}function Lt(e,t,n){return function(){this.style.setProperty(e,t,n)}}function zt(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function Bt(e,t){return e.style.getPropertyValue(t)||Mt(e).getComputedStyle(e,null).getPropertyValue(t)}function Pt(e){return function(){delete this[e]}}function Wt(e,t){return function(){this[e]=t}}function Vt(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}function Ut(e){return e.trim().split(/^|\s+/)}function Gt(e){return e.classList||new Ht(e)}function Ht(e){this._node=e,this._names=Ut(e.getAttribute("class")||"")}function jt(e,t){for(var n=Gt(e),r=-1,s=t.length;++r<s;)n.add(t[r])}function qt(e,t){for(var n=Gt(e),r=-1,s=t.length;++r<s;)n.remove(t[r])}function Kt(e){return function(){jt(this,e)}}function Xt(e){return function(){qt(this,e)}}function Yt(e,t){return function(){(t.apply(this,arguments)?jt:qt)(this,e)}}function Zt(){this.textContent=""}function Jt(e){return function(){this.textContent=e}}function Qt(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function en(){this.innerHTML=""}function tn(e){return function(){this.innerHTML=e}}function nn(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function rn(){this.nextSibling&&this.parentNode.appendChild(this)}function sn(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function an(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===Ct&&t.documentElement.namespaceURI===Ct?t.createElement(e):t.createElementNS(n,e)}}function on(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function ln(e){var t=Et(e);return(t.local?on:an)(t)}function un(){return null}function cn(){var e=this.parentNode;e&&e.removeChild(this)}function hn(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function dn(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function pn(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}function fn(e){return function(){var t=this.__on;if(t){for(var n,r=0,s=-1,a=t.length;r<a;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++s]=n:this.removeEventListener(n.type,n.listener,n.options);++s?t.length=s:delete this.__on}}}function gn(e,t,n){return function(){var r,s=this.__on,a=function(e){return function(t){e.call(this,t,this.__data__)}}(t);if(s)for(var i=0,o=s.length;i<o;++i)if((r=s[i]).type===e.type&&r.name===e.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=a,r.options=n),void(r.value=t);this.addEventListener(e.type,a,n),r={type:e.type,name:e.name,value:t,listener:a,options:n},s?s.push(r):this.__on=[r]}}function mn(e,t,n){var r=Mt(e),s=r.CustomEvent;"function"==typeof s?s=new s(t,n):(s=r.document.createEvent("Event"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e.dispatchEvent(s)}function bn(e,t){return function(){return mn(this,e,t)}}function yn(e,t){return function(){return mn(this,e,t.apply(this,arguments))}}Ht.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var xn=[null];function vn(e,t){this._groups=e,this._parents=t}function wn(){return new vn([[document.documentElement]],xn)}vn.prototype=wn.prototype={constructor:vn,select:function(e){"function"!=typeof e&&(e=ut(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i,o=t[s],l=o.length,u=r[s]=new Array(l),c=0;c<l;++c)(a=o[c])&&(i=e.call(a,a.__data__,c,o))&&("__data__"in a&&(i.__data__=a.__data__),u[c]=i);return new vn(r,this._parents)},selectAll:function(e){e="function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);return null==t?[]:ct(t)}}(e):dt(e);for(var t=this._groups,n=t.length,r=[],s=[],a=0;a<n;++a)for(var i,o=t[a],l=o.length,u=0;u<l;++u)(i=o[u])&&(r.push(e.call(i,i.__data__,u,o)),s.push(i));return new vn(r,s)},selectChild:function(e){return this.select(null==e?mt:function(e){return function(){return gt.call(this.children,e)}}("function"==typeof e?e:ft(e)))},selectChildren:function(e){return this.selectAll(null==e?yt:function(e){return function(){return bt.call(this.children,e)}}("function"==typeof e?e:ft(e)))},filter:function(e){"function"!=typeof e&&(e=pt(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new vn(r,this._parents)},data:function(e,t){if(!arguments.length)return Array.from(this,$t);var n=t?It:kt,r=this._parents,s=this._groups;"function"!=typeof e&&(e=wt(e));for(var a=s.length,i=new Array(a),o=new Array(a),l=new Array(a),u=0;u<a;++u){var c=r[u],h=s[u],d=h.length,p=ct(e.call(c,c&&c.__data__,u,r)),f=p.length,g=o[u]=new Array(f),m=i[u]=new Array(f),b=l[u]=new Array(d);n(c,h,g,m,b,p,t);for(var y,x,v=0,w=0;v<f;++v)if(y=g[v]){for(v>=w&&(w=v+1);!(x=m[w])&&++w<f;);y._next=x||null}}return(i=new vn(i,r))._enter=o,i._exit=l,i},enter:function(){return new vn(this._enter||this._groups.map(xt),this._parents)},exit:function(){return new vn(this._exit||this._groups.map(xt),this._parents)},join:function(e,t,n){var r=this.enter(),s=this,a=this.exit();return r="function"==typeof e?e(r):r.append(e+""),null!=t&&(s=t(s)),null==n?a.remove():n(a),r&&s?r.merge(s).order():s},merge:function(e){if(!(e instanceof vn))throw new Error("invalid merge");for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new vn(i,this._parents)},selection:function(){return this},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,s=e[t],a=s.length-1,i=s[a];--a>=0;)(r=s[a])&&(i&&4^r.compareDocumentPosition(i)&&i.parentNode.insertBefore(r,i),i=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=Nt);for(var n=this._groups,r=n.length,s=new Array(r),a=0;a<r;++a){for(var i,o=n[a],l=o.length,u=s[a]=new Array(l),c=0;c<l;++c)(i=o[c])&&(u[c]=i);u.sort(t)}return new vn(s,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],s=0,a=r.length;s<a;++s){var i=r[s];if(i)return i}return null},size:function(){let e=0;for(const t of this)++e;return e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var s,a=t[n],i=0,o=a.length;i<o;++i)(s=a[i])&&e.call(s,s.__data__,i,a);return this},attr:function(e,t){var n=Et(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?At:Tt:"function"==typeof t?n.local?Dt:Ft:n.local?_t:Rt)(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?Ot:"function"==typeof t?zt:Lt)(e,t,null==n?"":n)):Bt(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?Pt:"function"==typeof t?Vt:Wt)(e,t)):this.node()[e]},classed:function(e,t){var n=Ut(e+"");if(arguments.length<2){for(var r=Gt(this.node()),s=-1,a=n.length;++s<a;)if(!r.contains(n[s]))return!1;return!0}return this.each(("function"==typeof t?Yt:t?Kt:Xt)(n,t))},text:function(e){return arguments.length?this.each(null==e?Zt:("function"==typeof e?Qt:Jt)(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?en:("function"==typeof e?nn:tn)(e)):this.node().innerHTML},raise:function(){return this.each(rn)},lower:function(){return this.each(sn)},append:function(e){var t="function"==typeof e?e:ln(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))},insert:function(e,t){var n="function"==typeof e?e:ln(e),r=null==t?un:"function"==typeof t?t:ut(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(cn)},clone:function(e){return this.select(e?dn:hn)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,s,a=pn(e+""),i=a.length;if(!(arguments.length<2)){for(o=t?gn:fn,r=0;r<i;++r)this.each(o(a[r],t,n));return this}var o=this.node().__on;if(o)for(var l,u=0,c=o.length;u<c;++u)for(r=0,l=o[u];r<i;++r)if((s=a[r]).type===l.type&&s.name===l.name)return l.value},dispatch:function(e,t){return this.each(("function"==typeof t?yn:bn)(e,t))},[Symbol.iterator]:function*(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r,s=e[t],a=0,i=s.length;a<i;++a)(r=s[a])&&(yield r)}};const kn=wn;var In={value:()=>{}};function $n(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new Nn(r)}function Nn(e){this._=e}function Cn(e,t){return e.trim().split(/^|\s+/).map((function(e){var n="",r=e.indexOf(".");if(r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}}))}function Sn(e,t){for(var n,r=0,s=e.length;r<s;++r)if((n=e[r]).name===t)return n.value}function En(e,t,n){for(var r=0,s=e.length;r<s;++r)if(e[r].name===t){e[r]=In,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}Nn.prototype=$n.prototype={constructor:Nn,on:function(e,t){var n,r=this._,s=Cn(e+"",r),a=-1,i=s.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++a<i;)if(n=(e=s[a]).type)r[n]=En(r[n],e.name,t);else if(null==t)for(n in r)r[n]=En(r[n],e.name,null);return this}for(;++a<i;)if((n=(e=s[a]).type)&&(n=Sn(r[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new Nn(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,s=new Array(n),a=0;a<n;++a)s[a]=arguments[a+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(a=0,n=(r=this._[e]).length;a<n;++a)r[a].value.apply(t,s)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],s=0,a=r.length;s<a;++s)r[s].value.apply(t,n)}};const Tn=$n;var An,Rn,_n=0,Fn=0,Dn=0,Mn=0,On=0,Ln=0,zn="object"==typeof performance&&performance.now?performance:Date,Bn="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function Pn(){return On||(Bn(Wn),On=zn.now()+Ln)}function Wn(){On=0}function Vn(){this._call=this._time=this._next=null}function Un(e,t,n){var r=new Vn;return r.restart(e,t,n),r}function Gn(){On=(Mn=zn.now())+Ln,_n=Fn=0;try{!function(){Pn(),++_n;for(var e,t=An;t;)(e=On-t._time)>=0&&t._call.call(null,e),t=t._next;--_n}()}finally{_n=0,function(){for(var e,t,n=An,r=1/0;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:An=t);Rn=e,jn(r)}(),On=0}}function Hn(){var e=zn.now(),t=e-Mn;t>1e3&&(Ln-=t,Mn=e)}function jn(e){_n||(Fn&&(Fn=clearTimeout(Fn)),e-On>24?(e<1/0&&(Fn=setTimeout(Gn,e-zn.now()-Ln)),Dn&&(Dn=clearInterval(Dn))):(Dn||(Mn=zn.now(),Dn=setInterval(Hn,1e3)),_n=1,Bn(Gn)))}function qn(e,t,n){var r=new Vn;return t=null==t?0:+t,r.restart((n=>{r.stop(),e(n+t)}),t,n),r}Vn.prototype=Un.prototype={constructor:Vn,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?Pn():+n)+(null==t?0:+t),this._next||Rn===this||(Rn?Rn._next=this:An=this,Rn=this),this._call=e,this._time=n,jn()},stop:function(){this._call&&(this._call=null,this._time=1/0,jn())}};var Kn=Tn("start","end","cancel","interrupt"),Xn=[];function Yn(e,t,n,r,s,a){var i=e.__transition;if(i){if(n in i)return}else e.__transition={};!function(e,t,n){var r,s=e.__transition;function a(l){var u,c,h,d;if(1!==n.state)return o();for(u in s)if((d=s[u]).name===n.name){if(3===d.state)return qn(a);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete s[u]):+u<t&&(d.state=6,d.timer.stop(),d.on.call("cancel",e,e.__data__,d.index,d.group),delete s[u])}if(qn((function(){3===n.state&&(n.state=4,n.timer.restart(i,n.delay,n.time),i(l))})),n.state=2,n.on.call("start",e,e.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(h=n.tween.length),u=0,c=-1;u<h;++u)(d=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function i(t){for(var s=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(o),n.state=5,1),a=-1,i=r.length;++a<i;)r[a].call(e,s);5===n.state&&(n.on.call("end",e,e.__data__,n.index,n.group),o())}function o(){for(var r in n.state=6,n.timer.stop(),delete s[t],s)return;delete e.__transition}s[t]=n,n.timer=Un((function(e){n.state=1,n.timer.restart(a,n.delay,n.time),n.delay<=e&&a(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:s,on:Kn,tween:Xn,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:0})}function Zn(e,t){var n=Qn(e,t);if(n.state>0)throw new Error("too late; already scheduled");return n}function Jn(e,t){var n=Qn(e,t);if(n.state>3)throw new Error("too late; already running");return n}function Qn(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function er(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}var tr,nr=180/Math.PI,rr={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function sr(e,t,n,r,s,a){var i,o,l;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(l=e*n+t*r)&&(n-=e*l,r-=t*l),(o=Math.sqrt(n*n+r*r))&&(n/=o,r/=o,l/=o),e*r<t*n&&(e=-e,t=-t,l=-l,i=-i),{translateX:s,translateY:a,rotate:Math.atan2(t,e)*nr,skewX:Math.atan(l)*nr,scaleX:i,scaleY:o}}function ar(e,t,n,r){function s(e){return e.length?e.pop()+" ":""}return function(a,i){var o=[],l=[];return a=e(a),i=e(i),function(e,r,s,a,i,o){if(e!==s||r!==a){var l=i.push("translate(",null,t,null,n);o.push({i:l-4,x:er(e,s)},{i:l-2,x:er(r,a)})}else(s||a)&&i.push("translate("+s+t+a+n)}(a.translateX,a.translateY,i.translateX,i.translateY,o,l),function(e,t,n,a){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),a.push({i:n.push(s(n)+"rotate(",null,r)-2,x:er(e,t)})):t&&n.push(s(n)+"rotate("+t+r)}(a.rotate,i.rotate,o,l),function(e,t,n,a){e!==t?a.push({i:n.push(s(n)+"skewX(",null,r)-2,x:er(e,t)}):t&&n.push(s(n)+"skewX("+t+r)}(a.skewX,i.skewX,o,l),function(e,t,n,r,a,i){if(e!==n||t!==r){var o=a.push(s(a)+"scale(",null,",",null,")");i.push({i:o-4,x:er(e,n)},{i:o-2,x:er(t,r)})}else 1===n&&1===r||a.push(s(a)+"scale("+n+","+r+")")}(a.scaleX,a.scaleY,i.scaleX,i.scaleY,o,l),a=i=null,function(e){for(var t,n=-1,r=l.length;++n<r;)o[(t=l[n]).i]=t.x(e);return o.join("")}}}var ir=ar((function(e){const t=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?rr:sr(t.a,t.b,t.c,t.d,t.e,t.f)}),"px, ","px)","deg)"),or=ar((function(e){return null==e?rr:(tr||(tr=document.createElementNS("http://www.w3.org/2000/svg","g")),tr.setAttribute("transform",e),(e=tr.transform.baseVal.consolidate())?sr((e=e.matrix).a,e.b,e.c,e.d,e.e,e.f):rr)}),", ",")",")");function lr(e,t){var n,r;return function(){var s=Jn(this,e),a=s.tween;if(a!==n)for(var i=0,o=(r=n=a).length;i<o;++i)if(r[i].name===t){(r=r.slice()).splice(i,1);break}s.tween=r}}function ur(e,t,n){var r,s;if("function"!=typeof n)throw new Error;return function(){var a=Jn(this,e),i=a.tween;if(i!==r){s=(r=i).slice();for(var o={name:t,value:n},l=0,u=s.length;l<u;++l)if(s[l].name===t){s[l]=o;break}l===u&&s.push(o)}a.tween=s}}function cr(e,t,n){var r=e._id;return e.each((function(){var e=Jn(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return Qn(e,r).value[t]}}function hr(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function dr(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function pr(){}var fr=.7,gr=1/fr,mr="\\s*([+-]?\\d+)\\s*",br="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",yr="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",xr=/^#([0-9a-f]{3,8})$/,vr=new RegExp("^rgb\\("+[mr,mr,mr]+"\\)$"),wr=new RegExp("^rgb\\("+[yr,yr,yr]+"\\)$"),kr=new RegExp("^rgba\\("+[mr,mr,mr,br]+"\\)$"),Ir=new RegExp("^rgba\\("+[yr,yr,yr,br]+"\\)$"),$r=new RegExp("^hsl\\("+[br,yr,yr]+"\\)$"),Nr=new RegExp("^hsla\\("+[br,yr,yr,br]+"\\)$"),Cr={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Sr(){return this.rgb().formatHex()}function Er(){return this.rgb().formatRgb()}function Tr(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=xr.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?Ar(t):3===n?new Dr(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?Rr(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?Rr(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=vr.exec(e))?new Dr(t[1],t[2],t[3],1):(t=wr.exec(e))?new Dr(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=kr.exec(e))?Rr(t[1],t[2],t[3],t[4]):(t=Ir.exec(e))?Rr(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=$r.exec(e))?zr(t[1],t[2]/100,t[3]/100,1):(t=Nr.exec(e))?zr(t[1],t[2]/100,t[3]/100,t[4]):Cr.hasOwnProperty(e)?Ar(Cr[e]):"transparent"===e?new Dr(NaN,NaN,NaN,0):null}function Ar(e){return new Dr(e>>16&255,e>>8&255,255&e,1)}function Rr(e,t,n,r){return r<=0&&(e=t=n=NaN),new Dr(e,t,n,r)}function _r(e){return e instanceof pr||(e=Tr(e)),e?new Dr((e=e.rgb()).r,e.g,e.b,e.opacity):new Dr}function Fr(e,t,n,r){return 1===arguments.length?_r(e):new Dr(e,t,n,null==r?1:r)}function Dr(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function Mr(){return"#"+Lr(this.r)+Lr(this.g)+Lr(this.b)}function Or(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}function Lr(e){return((e=Math.max(0,Math.min(255,Math.round(e)||0)))<16?"0":"")+e.toString(16)}function zr(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new Pr(e,t,n,r)}function Br(e){if(e instanceof Pr)return new Pr(e.h,e.s,e.l,e.opacity);if(e instanceof pr||(e=Tr(e)),!e)return new Pr;if(e instanceof Pr)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,s=Math.min(t,n,r),a=Math.max(t,n,r),i=NaN,o=a-s,l=(a+s)/2;return o?(i=t===a?(n-r)/o+6*(n<r):n===a?(r-t)/o+2:(t-n)/o+4,o/=l<.5?a+s:2-a-s,i*=60):o=l>0&&l<1?0:i,new Pr(i,o,l,e.opacity)}function Pr(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function Wr(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function Vr(e,t,n,r,s){var a=e*e,i=a*e;return((1-3*e+3*a-i)*t+(4-6*a+3*i)*n+(1+3*e+3*a-3*i)*r+i*s)/6}hr(pr,Tr,{copy:function(e){return Object.assign(new this.constructor,this,e)},displayable:function(){return this.rgb().displayable()},hex:Sr,formatHex:Sr,formatHsl:function(){return Br(this).formatHsl()},formatRgb:Er,toString:Er}),hr(Dr,Fr,dr(pr,{brighter:function(e){return e=null==e?gr:Math.pow(gr,e),new Dr(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?fr:Math.pow(fr,e),new Dr(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Mr,formatHex:Mr,formatRgb:Or,toString:Or})),hr(Pr,(function(e,t,n,r){return 1===arguments.length?Br(e):new Pr(e,t,n,null==r?1:r)}),dr(pr,{brighter:function(e){return e=null==e?gr:Math.pow(gr,e),new Pr(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?fr:Math.pow(fr,e),new Pr(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,s=2*n-r;return new Dr(Wr(e>=240?e-240:e+120,s,r),Wr(e,s,r),Wr(e<120?e+240:e-120,s,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===e?")":", "+e+")")}}));const Ur=e=>()=>e;function Gr(e,t){var n=t-e;return n?function(e,t){return function(n){return e+n*t}}(e,n):Ur(isNaN(e)?t:e)}const Hr=function e(t){var n=function(e){return 1==(e=+e)?Gr:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Ur(isNaN(t)?n:t)}}(t);function r(e,t){var r=n((e=Fr(e)).r,(t=Fr(t)).r),s=n(e.g,t.g),a=n(e.b,t.b),i=Gr(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=s(t),e.b=a(t),e.opacity=i(t),e+""}}return r.gamma=e,r}(1);function jr(e){return function(t){var n,r,s=t.length,a=new Array(s),i=new Array(s),o=new Array(s);for(n=0;n<s;++n)r=Fr(t[n]),a[n]=r.r||0,i[n]=r.g||0,o[n]=r.b||0;return a=e(a),i=e(i),o=e(o),r.opacity=1,function(e){return r.r=a(e),r.g=i(e),r.b=o(e),r+""}}}jr((function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),s=e[r],a=e[r+1],i=r>0?e[r-1]:2*s-a,o=r<t-1?e[r+2]:2*a-s;return Vr((n-r/t)*t,i,s,a,o)}})),jr((function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),s=e[(r+t-1)%t],a=e[r%t],i=e[(r+1)%t],o=e[(r+2)%t];return Vr((n-r/t)*t,s,a,i,o)}}));var qr=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Kr=new RegExp(qr.source,"g");function Xr(e,t){var n,r,s,a=qr.lastIndex=Kr.lastIndex=0,i=-1,o=[],l=[];for(e+="",t+="";(n=qr.exec(e))&&(r=Kr.exec(t));)(s=r.index)>a&&(s=t.slice(a,s),o[i]?o[i]+=s:o[++i]=s),(n=n[0])===(r=r[0])?o[i]?o[i]+=r:o[++i]=r:(o[++i]=null,l.push({i,x:er(n,r)})),a=Kr.lastIndex;return a<t.length&&(s=t.slice(a),o[i]?o[i]+=s:o[++i]=s),o.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,r=0;r<t;++r)o[(n=l[r]).i]=n.x(e);return o.join("")})}function Yr(e,t){var n;return("number"==typeof t?er:t instanceof Tr?Hr:(n=Tr(t))?(t=n,Hr):Xr)(e,t)}function Zr(e){return function(){this.removeAttribute(e)}}function Jr(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Qr(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttribute(e);return i===a?null:i===r?s:s=t(r=i,n)}}function es(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttributeNS(e.space,e.local);return i===a?null:i===r?s:s=t(r=i,n)}}function ts(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttribute(e))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttribute(e)}}function ns(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttributeNS(e.space,e.local))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttributeNS(e.space,e.local)}}function rs(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}function ss(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}function as(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&ss(e,s)),n}return s._value=t,s}function is(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&rs(e,s)),n}return s._value=t,s}function os(e,t){return function(){Zn(this,e).delay=+t.apply(this,arguments)}}function ls(e,t){return t=+t,function(){Zn(this,e).delay=t}}function us(e,t){return function(){Jn(this,e).duration=+t.apply(this,arguments)}}function cs(e,t){return t=+t,function(){Jn(this,e).duration=t}}function hs(e,t){if("function"!=typeof t)throw new Error;return function(){Jn(this,e).ease=t}}function ds(e,t,n){var r,s,a=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?Zn:Jn;return function(){var i=a(this,e),o=i.on;o!==r&&(s=(r=o).copy()).on(t,n),i.on=s}}var ps=kn.prototype.constructor;function fs(e){return function(){this.style.removeProperty(e)}}function gs(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}function ms(e,t,n){var r,s;function a(){var a=t.apply(this,arguments);return a!==s&&(r=(s=a)&&gs(e,a,n)),r}return a._value=t,a}function bs(e){return function(t){this.textContent=e.call(this,t)}}function ys(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&bs(r)),t}return r._value=e,r}var xs=0;function vs(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function ws(){return++xs}var ks=kn.prototype;vs.prototype=function(e){return kn().transition(e)}.prototype={constructor:vs,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=ut(e));for(var r=this._groups,s=r.length,a=new Array(s),i=0;i<s;++i)for(var o,l,u=r[i],c=u.length,h=a[i]=new Array(c),d=0;d<c;++d)(o=u[d])&&(l=e.call(o,o.__data__,d,u))&&("__data__"in o&&(l.__data__=o.__data__),h[d]=l,Yn(h[d],t,n,d,h,Qn(o,n)));return new vs(a,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=dt(e));for(var r=this._groups,s=r.length,a=[],i=[],o=0;o<s;++o)for(var l,u=r[o],c=u.length,h=0;h<c;++h)if(l=u[h]){for(var d,p=e.call(l,l.__data__,h,u),f=Qn(l,n),g=0,m=p.length;g<m;++g)(d=p[g])&&Yn(d,t,n,g,p,f);a.push(p),i.push(l)}return new vs(a,i,t,n)},filter:function(e){"function"!=typeof e&&(e=pt(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new vs(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new vs(i,this._parents,this._name,this._id)},selection:function(){return new ps(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=ws(),r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)if(i=o[u]){var c=Qn(i,t);Yn(i,e,n,u,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new vs(r,this._parents,e,n)},call:ks.call,nodes:ks.nodes,node:ks.node,size:ks.size,empty:ks.empty,each:ks.each,on:function(e,t){var n=this._id;return arguments.length<2?Qn(this.node(),n).on.on(e):this.each(ds(n,e,t))},attr:function(e,t){var n=Et(e),r="transform"===n?or:Yr;return this.attrTween(e,"function"==typeof t?(n.local?ns:ts)(n,r,cr(this,"attr."+e,t)):null==t?(n.local?Jr:Zr)(n):(n.local?es:Qr)(n,r,t))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=Et(e);return this.tween(n,(r.local?as:is)(r,t))},style:function(e,t,n){var r="transform"==(e+="")?ir:Yr;return null==t?this.styleTween(e,function(e,t){var n,r,s;return function(){var a=Bt(this,e),i=(this.style.removeProperty(e),Bt(this,e));return a===i?null:a===n&&i===r?s:s=t(n=a,r=i)}}(e,r)).on("end.style."+e,fs(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,s,a;return function(){var i=Bt(this,e),o=n(this),l=o+"";return null==o&&(this.style.removeProperty(e),l=o=Bt(this,e)),i===l?null:i===r&&l===s?a:(s=l,a=t(r=i,o))}}(e,r,cr(this,"style."+e,t))).each(function(e,t){var n,r,s,a,i="style."+t,o="end."+i;return function(){var l=Jn(this,e),u=l.on,c=null==l.value[i]?a||(a=fs(t)):void 0;u===n&&s===c||(r=(n=u).copy()).on(o,s=c),l.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,s,a=n+"";return function(){var i=Bt(this,e);return i===a?null:i===r?s:s=t(r=i,n)}}(e,r,t),n).on("end.style."+e,null)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,ms(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(cr(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},textTween:function(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,ys(e))},remove:function(){return this.on("end.remove",function(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}(this._id))},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,s=Qn(this.node(),n).tween,a=0,i=s.length;a<i;++a)if((r=s[a]).name===e)return r.value;return null}return this.each((null==t?lr:ur)(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?os:ls)(t,e)):Qn(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?us:cs)(t,e)):Qn(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(hs(t,e)):Qn(this.node(),t).ease},easeVarying:function(e){if("function"!=typeof e)throw new Error;return this.each(function(e,t){return function(){var n=t.apply(this,arguments);if("function"!=typeof n)throw new Error;Jn(this,e).ease=n}}(this._id,e))},end:function(){var e,t,n=this,r=n._id,s=n.size();return new Promise((function(a,i){var o={value:i},l={value:function(){0==--s&&a()}};n.each((function(){var n=Jn(this,r),s=n.on;s!==e&&((t=(e=s).copy())._.cancel.push(o),t._.interrupt.push(o),t._.end.push(l)),n.on=t})),0===s&&a()}))},[Symbol.iterator]:ks[Symbol.iterator]};var Is={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function $s(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}kn.prototype.interrupt=function(e){return this.each((function(){!function(e,t){var n,r,s,a=e.__transition,i=!0;if(a){for(s in t=null==t?null:t+"",a)(n=a[s]).name===t?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete a[s]):i=!1;i&&delete e.__transition}}(this,e)}))},kn.prototype.transition=function(e){var t,n;e instanceof vs?(t=e._id,e=e._name):(t=ws(),(n=Is).time=Pn(),e=null==e?null:e+"");for(var r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)(i=o[u])&&Yn(i,e,t,u,o,n||$s(i,t));return new vs(r,this._parents,e,t)};const{abs:Ns,max:Cs,min:Ss}=Math;function Es(e){return{type:e}}function Ts(e){return Math.ceil(Math.log(function(e,t){let n=0;for(let t of e)null!=t&&(t=+t)>=t&&++n;return n}(e))/Math.LN2)+1}["w","e"].map(Es),["n","s"].map(Es),["n","w","e","s","nw","ne","sw","se"].map(Es);var As=Math.sqrt(50),Rs=Math.sqrt(10),_s=Math.sqrt(2);function Fs(e,t,n){var r=(t-e)/Math.max(0,n),s=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,s);return s>=0?(a>=As?10:a>=Rs?5:a>=_s?2:1)*Math.pow(10,s):-Math.pow(10,-s)/(a>=As?10:a>=Rs?5:a>=_s?2:1)}function Ds(e,t,n){var r=Math.abs(t-e)/Math.max(0,n),s=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/s;return a>=As?s*=10:a>=Rs?s*=5:a>=_s&&(s*=2),t<e?-s:s}var Ms=Array.prototype.slice;function Os(e,t){return e-t}const Ls=e=>()=>e;function zs(e,t){for(var n,r=-1,s=t.length;++r<s;)if(n=Bs(e,t[r]))return n;return 0}function Bs(e,t){for(var n=t[0],r=t[1],s=-1,a=0,i=e.length,o=i-1;a<i;o=a++){var l=e[a],u=l[0],c=l[1],h=e[o],d=h[0],p=h[1];if(Ps(l,h,t))return 0;c>r!=p>r&&n<(d-u)*(r-c)/(p-c)+u&&(s=-s)}return s}function Ps(e,t,n){var r;return function(e,t,n){return(t[0]-e[0])*(n[1]-e[1])==(n[0]-e[0])*(t[1]-e[1])}(e,t,n)&&function(e,t,n){return e<=t&&t<=n||n<=t&&t<=e}(e[r=+(e[0]===t[0])],n[r],t[r])}function Ws(){}var Vs=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function Us(e){return"string"==typeof e?new vn([[document.querySelector(e)]],[document.documentElement]):new vn([[e]],xn)}function Gs(e,t){if(e=function(e){let t;for(;t=e.sourceEvent;)e=t;return e}(e),void 0===t&&(t=e.currentTarget),t){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var r=n.createSVGPoint();return r.x=e.clientX,r.y=e.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}if(t.getBoundingClientRect){var s=t.getBoundingClientRect();return[e.clientX-s.left-t.clientLeft,e.clientY-s.top-t.clientTop]}}return[e.pageX,e.pageY]}function Hs(e){e.stopImmediatePropagation()}function js(e){e.preventDefault(),e.stopImmediatePropagation()}const qs=e=>()=>e;function Ks(e,{sourceEvent:t,subject:n,target:r,identifier:s,active:a,x:i,y:o,dx:l,dy:u,dispatch:c}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},subject:{value:n,enumerable:!0,configurable:!0},target:{value:r,enumerable:!0,configurable:!0},identifier:{value:s,enumerable:!0,configurable:!0},active:{value:a,enumerable:!0,configurable:!0},x:{value:i,enumerable:!0,configurable:!0},y:{value:o,enumerable:!0,configurable:!0},dx:{value:l,enumerable:!0,configurable:!0},dy:{value:u,enumerable:!0,configurable:!0},_:{value:c}})}function Xs(e){return!e.ctrlKey&&!e.button}function Ys(){return this.parentNode}function Zs(e,t){return null==t?{x:e.x,y:e.y}:t}function Js(){return navigator.maxTouchPoints||"ontouchstart"in this}Ks.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e};const Qs=e=>e;function ea(e,t){e&&na.hasOwnProperty(e.type)&&na[e.type](e,t)}var ta={Feature:function(e,t){ea(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,r=-1,s=n.length;++r<s;)ea(n[r].geometry,t)}},na={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)e=n[r],t.point(e[0],e[1],e[2])},LineString:function(e,t){ra(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)ra(n[r],t,0)},Polygon:function(e,t){sa(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,r=-1,s=n.length;++r<s;)sa(n[r],t)},GeometryCollection:function(e,t){for(var n=e.geometries,r=-1,s=n.length;++r<s;)ea(n[r],t)}};function ra(e,t,n){var r,s=-1,a=e.length-n;for(t.lineStart();++s<a;)r=e[s],t.point(r[0],r[1],r[2]);t.lineEnd()}function sa(e,t){var n=-1,r=e.length;for(t.polygonStart();++n<r;)ra(e[n],t,1);t.polygonEnd()}function aa(e,t){e&&ta.hasOwnProperty(e.type)?ta[e.type](e,t):ea(e,t)}class ia{constructor(){this._partials=new Float64Array(32),this._n=0}add(e){const t=this._partials;let n=0;for(let r=0;r<this._n&&r<32;r++){const s=t[r],a=e+s,i=Math.abs(e)<Math.abs(s)?e-(a-s):s-(a-e);i&&(t[n++]=i),e=a}return t[n]=e,this._n=n+1,this}valueOf(){const e=this._partials;let t,n,r,s=this._n,a=0;if(s>0){for(a=e[--s];s>0&&(t=a,n=e[--s],a=t+n,r=n-(a-t),!r););s>0&&(r<0&&e[s-1]<0||r>0&&e[s-1]>0)&&(n=2*r,t=a+n,n==t-a&&(a=t))}return a}}var oa=1e-6,la=Math.PI,ua=2*la,ca=180/la,ha=la/180,da=Math.abs,pa=(Math.atan,Math.atan2,Math.cos),fa=(Math.ceil,Math.exp,Math.floor,Math.hypot,Math.log,Math.pow,Math.sin),ga=(Math.sign,Math.sqrt);function ma(){}Math.tan;var ba,ya,xa,va,wa=new ia,ka=new ia,Ia={point:ma,lineStart:ma,lineEnd:ma,polygonStart:function(){Ia.lineStart=$a,Ia.lineEnd=Sa},polygonEnd:function(){Ia.lineStart=Ia.lineEnd=Ia.point=ma,wa.add(da(ka)),ka=new ia},result:function(){var e=wa/2;return wa=new ia,e}};function $a(){Ia.point=Na}function Na(e,t){Ia.point=Ca,ba=xa=e,ya=va=t}function Ca(e,t){ka.add(va*e-xa*t),xa=e,va=t}function Sa(){Ca(ba,ya)}const Ea=Ia;var Ta=1/0,Aa=Ta,Ra=-Ta,_a=Ra;const Fa={point:function(e,t){e<Ta&&(Ta=e),e>Ra&&(Ra=e),t<Aa&&(Aa=t),t>_a&&(_a=t)},lineStart:ma,lineEnd:ma,polygonStart:ma,polygonEnd:ma,result:function(){var e=[[Ta,Aa],[Ra,_a]];return Ra=_a=-(Aa=Ta=1/0),e}};var Da,Ma,Oa,La,za=0,Ba=0,Pa=0,Wa=0,Va=0,Ua=0,Ga=0,Ha=0,ja=0,qa={point:Ka,lineStart:Xa,lineEnd:Ja,polygonStart:function(){qa.lineStart=Qa,qa.lineEnd=ei},polygonEnd:function(){qa.point=Ka,qa.lineStart=Xa,qa.lineEnd=Ja},result:function(){var e=ja?[Ga/ja,Ha/ja]:Ua?[Wa/Ua,Va/Ua]:Pa?[za/Pa,Ba/Pa]:[NaN,NaN];return za=Ba=Pa=Wa=Va=Ua=Ga=Ha=ja=0,e}};function Ka(e,t){za+=e,Ba+=t,++Pa}function Xa(){qa.point=Ya}function Ya(e,t){qa.point=Za,Ka(Oa=e,La=t)}function Za(e,t){var n=e-Oa,r=t-La,s=ga(n*n+r*r);Wa+=s*(Oa+e)/2,Va+=s*(La+t)/2,Ua+=s,Ka(Oa=e,La=t)}function Ja(){qa.point=Ka}function Qa(){qa.point=ti}function ei(){ni(Da,Ma)}function ti(e,t){qa.point=ni,Ka(Da=Oa=e,Ma=La=t)}function ni(e,t){var n=e-Oa,r=t-La,s=ga(n*n+r*r);Wa+=s*(Oa+e)/2,Va+=s*(La+t)/2,Ua+=s,Ga+=(s=La*e-Oa*t)*(Oa+e),Ha+=s*(La+t),ja+=3*s,Ka(Oa=e,La=t)}const ri=qa;function si(e){this._context=e}si.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._context.moveTo(e,t),this._point=1;break;case 1:this._context.lineTo(e,t);break;default:this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,ua)}},result:ma};var ai,ii,oi,li,ui,ci=new ia,hi={point:ma,lineStart:function(){hi.point=di},lineEnd:function(){ai&&pi(ii,oi),hi.point=ma},polygonStart:function(){ai=!0},polygonEnd:function(){ai=null},result:function(){var e=+ci;return ci=new ia,e}};function di(e,t){hi.point=pi,ii=li=e,oi=ui=t}function pi(e,t){li-=e,ui-=t,ci.add(ga(li*li+ui*ui)),li=e,ui=t}const fi=hi;function gi(){this._string=[]}function mi(e){return"m0,"+e+"a"+e+","+e+" 0 1,1 0,"+-2*e+"a"+e+","+e+" 0 1,1 0,"+2*e+"z"}function bi(e,t,n,r){this.x=e,this.z=t,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function yi(e){if(t=e.length){for(var t,n,r=0,s=e[0];++r<t;)s.n=n=e[r],n.p=s,s=n;s.n=n=e[0],n.p=s}}gi.prototype={_radius:4.5,_circle:mi(4.5),pointRadius:function(e){return(e=+e)!==this._radius&&(this._radius=e,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(e,t){switch(this._point){case 0:this._string.push("M",e,",",t),this._point=1;break;case 1:this._string.push("L",e,",",t);break;default:null==this._circle&&(this._circle=mi(this._radius)),this._string.push("M",e,",",t,this._circle)}},result:function(){if(this._string.length){var e=this._string.join("");return this._string=[],e}return null}};var xi=1e9,vi=-xi;function wi(e,t,n,r){function s(s,a){return e<=s&&s<=n&&t<=a&&a<=r}function a(s,a,o,u){var c=0,h=0;if(null==s||(c=i(s,o))!==(h=i(a,o))||l(s,a)<0^o>0)do{u.point(0===c||3===c?e:n,c>1?r:t)}while((c=(c+o+4)%4)!==h);else u.point(a[0],a[1])}function i(r,s){return da(r[0]-e)<oa?s>0?0:3:da(r[0]-n)<oa?s>0?2:1:da(r[1]-t)<oa?s>0?1:0:s>0?3:2}function o(e,t){return l(e.x,t.x)}function l(e,t){var n=i(e,1),r=i(t,1);return n!==r?n-r:0===n?t[1]-e[1]:1===n?e[0]-t[0]:2===n?e[1]-t[1]:t[0]-e[0]}return function(i){var l,u,c,h,d,p,f,g,m,b,y,x,v,w=i,k=(v=[],{point:function(e,t,n){x.push([e,t,n])},lineStart:function(){v.push(x=[])},lineEnd:ma,rejoin:function(){v.length>1&&v.push(v.pop().concat(v.shift()))},result:function(){var e=v;return v=[],x=null,e}}),I={point:$,lineStart:function(){I.point=N,u&&u.push(c=[]),b=!0,m=!1,f=g=NaN},lineEnd:function(){l&&(N(h,d),p&&m&&k.rejoin(),l.push(k.result())),I.point=$,m&&w.lineEnd()},polygonStart:function(){w=k,l=[],u=[],y=!0},polygonEnd:function(){var t,n=function(){for(var t=0,n=0,s=u.length;n<s;++n)for(var a,i,o=u[n],l=1,c=o.length,h=o[0],d=h[0],p=h[1];l<c;++l)a=d,i=p,d=(h=o[l])[0],p=h[1],i<=r?p>r&&(d-a)*(r-i)>(p-i)*(e-a)&&++t:p<=r&&(d-a)*(r-i)<(p-i)*(e-a)&&--t;return t}(),s=y&&n,h=(t=l,l=Array.from(function*(e){for(const t of e)yield*t}(t))).length;(s||h)&&(i.polygonStart(),s&&(i.lineStart(),a(null,null,1,i),i.lineEnd()),h&&function(e,t,n,r,s){var a,i,o=[],l=[];if(e.forEach((function(e){if(!((t=e.length-1)<=0)){var t,n,r,i,u=e[0],c=e[t];if(i=c,da((r=u)[0]-i[0])<oa&&da(r[1]-i[1])<oa){if(!u[2]&&!c[2]){for(s.lineStart(),a=0;a<t;++a)s.point((u=e[a])[0],u[1]);return void s.lineEnd()}c[0]+=2e-6}o.push(n=new bi(u,e,null,!0)),l.push(n.o=new bi(u,null,n,!1)),o.push(n=new bi(c,e,null,!1)),l.push(n.o=new bi(c,null,n,!0))}})),o.length){for(l.sort(t),yi(o),yi(l),a=0,i=l.length;a<i;++a)l[a].e=n=!n;for(var u,c,h=o[0];;){for(var d=h,p=!0;d.v;)if((d=d.n)===h)return;u=d.z,s.lineStart();do{if(d.v=d.o.v=!0,d.e){if(p)for(a=0,i=u.length;a<i;++a)s.point((c=u[a])[0],c[1]);else r(d.x,d.n.x,1,s);d=d.n}else{if(p)for(u=d.p.z,a=u.length-1;a>=0;--a)s.point((c=u[a])[0],c[1]);else r(d.x,d.p.x,-1,s);d=d.p}u=(d=d.o).z,p=!p}while(!d.v);s.lineEnd()}}}(l,o,n,a,i),i.polygonEnd()),w=i,l=u=c=null}};function $(e,t){s(e,t)&&w.point(e,t)}function N(a,i){var o=s(a,i);if(u&&c.push([a,i]),b)h=a,d=i,p=o,b=!1,o&&(w.lineStart(),w.point(a,i));else if(o&&m)w.point(a,i);else{var l=[f=Math.max(vi,Math.min(xi,f)),g=Math.max(vi,Math.min(xi,g))],x=[a=Math.max(vi,Math.min(xi,a)),i=Math.max(vi,Math.min(xi,i))];!function(e,t,n,r,s,a){var i,o=e[0],l=e[1],u=0,c=1,h=t[0]-o,d=t[1]-l;if(i=n-o,h||!(i>0)){if(i/=h,h<0){if(i<u)return;i<c&&(c=i)}else if(h>0){if(i>c)return;i>u&&(u=i)}if(i=s-o,h||!(i<0)){if(i/=h,h<0){if(i>c)return;i>u&&(u=i)}else if(h>0){if(i<u)return;i<c&&(c=i)}if(i=r-l,d||!(i>0)){if(i/=d,d<0){if(i<u)return;i<c&&(c=i)}else if(d>0){if(i>c)return;i>u&&(u=i)}if(i=a-l,d||!(i<0)){if(i/=d,d<0){if(i>c)return;i>u&&(u=i)}else if(d>0){if(i<u)return;i<c&&(c=i)}return u>0&&(e[0]=o+u*h,e[1]=l+u*d),c<1&&(t[0]=o+c*h,t[1]=l+c*d),!0}}}}}(l,x,e,t,n,r)?o&&(w.lineStart(),w.point(a,i),y=!1):(m||(w.lineStart(),w.point(l[0],l[1])),w.point(x[0],x[1]),o||w.lineEnd(),y=!1)}f=a,g=i,m=o}return I}}function ki(){}function Ii(e,t,n){var r=e.clipExtent&&e.clipExtent();return e.scale(150).translate([0,0]),null!=r&&e.clipExtent(null),aa(n,e.stream(Fa)),t(Fa.result()),null!=r&&e.clipExtent(r),e}function $i(e,t,n){return Ii(e,(function(n){var r=t[1][0]-t[0][0],s=t[1][1]-t[0][1],a=Math.min(r/(n[1][0]-n[0][0]),s/(n[1][1]-n[0][1])),i=+t[0][0]+(r-a*(n[1][0]+n[0][0]))/2,o=+t[0][1]+(s-a*(n[1][1]+n[0][1]))/2;e.scale(150*a).translate([i,o])}),n)}function Ni(){var e,t,n,r,s,a,i,o,l=1,u=0,c=0,h=1,d=1,p=0,f=null,g=1,m=1,b=(o={point:function(e,t){var n=v([e,t]);this.stream.point(n[0],n[1])}},function(e){var t=new ki;for(var n in o)t[n]=o[n];return t.stream=e,t}),y=Qs;function x(){return g=l*h,m=l*d,a=i=null,v}function v(n){var r=n[0]*g,s=n[1]*m;if(p){var a=s*e-r*t;r=r*e+s*t,s=a}return[r+u,s+c]}return v.invert=function(n){var r=n[0]-u,s=n[1]-c;if(p){var a=s*e+r*t;r=r*e-s*t,s=a}return[r/g,s/m]},v.stream=function(e){return a&&i===e?a:a=b(y(i=e))},v.postclip=function(e){return arguments.length?(y=e,f=n=r=s=null,x()):y},v.clipExtent=function(e){return arguments.length?(y=null==e?(f=n=r=s=null,Qs):wi(f=+e[0][0],n=+e[0][1],r=+e[1][0],s=+e[1][1]),x()):null==f?null:[[f,n],[r,s]]},v.scale=function(e){return arguments.length?(l=+e,x()):l},v.translate=function(e){return arguments.length?(u=+e[0],c=+e[1],x()):[u,c]},v.angle=function(n){return arguments.length?(t=fa(p=n%360*ha),e=pa(p),x()):p*ca},v.reflectX=function(e){return arguments.length?(h=e?-1:1,x()):h<0},v.reflectY=function(e){return arguments.length?(d=e?-1:1,x()):d<0},v.fitExtent=function(e,t){return $i(v,e,t)},v.fitSize=function(e,t){return function(e,t,n){return $i(e,[[0,0],t],n)}(v,e,t)},v.fitWidth=function(e,t){return function(e,t,n){return Ii(e,(function(n){var r=+t,s=r/(n[1][0]-n[0][0]),a=(r-s*(n[1][0]+n[0][0]))/2,i=-s*n[0][1];e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v.fitHeight=function(e,t){return function(e,t,n){return Ii(e,(function(n){var r=+t,s=r/(n[1][1]-n[0][1]),a=-s*n[0][0],i=(r-s*(n[1][1]+n[0][1]))/2;e.scale(150*s).translate([a,i])}),n)}(v,e,t)},v}function Ci(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function Si(e){let t=e,n=e;function r(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)<0?r=a+1:s=a}return r}return 1===e.length&&(t=(t,n)=>e(t)-n,n=function(e){return(t,n)=>Ci(e(t),n)}(e)),{left:r,center:function(e,n,s,a){null==s&&(s=0),null==a&&(a=e.length);const i=r(e,n,s,a-1);return i>s&&t(e[i-1],n)>-t(e[i],n)?i-1:i},right:function(e,t,r,s){for(null==r&&(r=0),null==s&&(s=e.length);r<s;){const a=r+s>>>1;n(e[a],t)>0?s=a:r=a+1}return r}}}ki.prototype={constructor:ki,point:function(e,t){this.stream.point(e,t)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};const Ei=Si(Ci),Ti=Ei.right,Ai=(Ei.left,Si((function(e){return null===e?NaN:+e})).center,Ti);function Ri(e,t){var n,r=t?t.length:0,s=e?Math.min(r,e.length):0,a=new Array(s),i=new Array(r);for(n=0;n<s;++n)a[n]=Mi(e[n],t[n]);for(;n<r;++n)i[n]=t[n];return function(e){for(n=0;n<s;++n)i[n]=a[n](e);return i}}function _i(e,t){var n=new Date;return e=+e,t=+t,function(r){return n.setTime(e*(1-r)+t*r),n}}function Fi(e,t){var n,r={},s={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?r[n]=Mi(e[n],t[n]):s[n]=t[n];return function(e){for(n in r)s[n]=r[n](e);return s}}function Di(e,t){t||(t=[]);var n,r=e?Math.min(t.length,e.length):0,s=t.slice();return function(a){for(n=0;n<r;++n)s[n]=e[n]*(1-a)+t[n]*a;return s}}function Mi(e,t){var n,r,s=typeof t;return null==t||"boolean"===s?Ur(t):("number"===s?er:"string"===s?(n=Tr(t))?(t=n,Hr):Xr:t instanceof Tr?Hr:t instanceof Date?_i:(r=t,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(t)?Ri:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?Fi:er:Di))(e,t)}function Oi(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}function Li(e){return+e}var zi=[0,1];function Bi(e){return e}function Pi(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:(n=isNaN(t)?NaN:.5,function(){return n});var n}function Wi(e,t,n){var r=e[0],s=e[1],a=t[0],i=t[1];return s<r?(r=Pi(s,r),a=n(i,a)):(r=Pi(r,s),a=n(a,i)),function(e){return a(r(e))}}function Vi(e,t,n){var r=Math.min(e.length,t.length)-1,s=new Array(r),a=new Array(r),i=-1;for(e[r]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<r;)s[i]=Pi(e[i],e[i+1]),a[i]=n(t[i],t[i+1]);return function(t){var n=Ai(e,t,1,r)-1;return a[n](s[n](t))}}function Ui(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function Gi(){return function(){var e,t,n,r,s,a,i=zi,o=zi,l=Mi,u=Bi;function c(){var e,t,n,l=Math.min(i.length,o.length);return u!==Bi&&(e=i[0],t=i[l-1],e>t&&(n=e,e=t,t=n),u=function(n){return Math.max(e,Math.min(t,n))}),r=l>2?Vi:Wi,s=a=null,h}function h(t){return null==t||isNaN(t=+t)?n:(s||(s=r(i.map(e),o,l)))(e(u(t)))}return h.invert=function(n){return u(t((a||(a=r(o,i.map(e),er)))(n)))},h.domain=function(e){return arguments.length?(i=Array.from(e,Li),c()):i.slice()},h.range=function(e){return arguments.length?(o=Array.from(e),c()):o.slice()},h.rangeRound=function(e){return o=Array.from(e),l=Oi,c()},h.clamp=function(e){return arguments.length?(u=!!e||Bi,c()):u!==Bi},h.interpolate=function(e){return arguments.length?(l=e,c()):l},h.unknown=function(e){return arguments.length?(n=e,h):n},function(n,r){return e=n,t=r,c()}}()(Bi,Bi)}function Hi(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}var ji,qi=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ki(e){if(!(t=qi.exec(e)))throw new Error("invalid format: "+e);var t;return new Xi({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function Xi(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function Yi(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]}function Zi(e){return(e=Yi(Math.abs(e)))?e[1]:NaN}function Ji(e,t){var n=Yi(e,t);if(!n)return e+"";var r=n[0],s=n[1];return s<0?"0."+new Array(-s).join("0")+r:r.length>s+1?r.slice(0,s+1)+"."+r.slice(s+1):r+new Array(s-r.length+2).join("0")}Ki.prototype=Xi.prototype,Xi.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const Qi={"%":(e,t)=>(100*e).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>Ji(100*e,t),r:Ji,s:function(e,t){var n=Yi(e,t);if(!n)return e+"";var r=n[0],s=n[1],a=s-(ji=3*Math.max(-8,Math.min(8,Math.floor(s/3))))+1,i=r.length;return a===i?r:a>i?r+new Array(a-i+1).join("0"):a>0?r.slice(0,a)+"."+r.slice(a):"0."+new Array(1-a).join("0")+Yi(e,Math.max(0,t+a-1))[0]},X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function eo(e){return e}var to,no,ro,so=Array.prototype.map,ao=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function io(e){var t=e.domain;return e.ticks=function(e){var n=t();return function(e,t,n){var r,s,a,i,o=-1;if(n=+n,(e=+e)==(t=+t)&&n>0)return[e];if((r=t<e)&&(s=e,e=t,t=s),0===(i=Fs(e,t,n))||!isFinite(i))return[];if(i>0){let n=Math.round(e/i),r=Math.round(t/i);for(n*i<e&&++n,r*i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)*i}else{i=-i;let n=Math.round(e*i),r=Math.round(t*i);for(n/i<e&&++n,r/i>t&&--r,a=new Array(s=r-n+1);++o<s;)a[o]=(n+o)/i}return r&&a.reverse(),a}(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){var r=t();return function(e,t,n,r){var s,a=Ds(e,t,n);switch((r=Ki(null==r?",f":r)).type){case"s":var i=Math.max(Math.abs(e),Math.abs(t));return null!=r.precision||isNaN(s=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Zi(t)/3)))-Zi(Math.abs(e)))}(a,i))||(r.precision=s),ro(r,i);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(s=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Zi(t)-Zi(e))+1}(a,Math.max(Math.abs(e),Math.abs(t))))||(r.precision=s-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(s=function(e){return Math.max(0,-Zi(Math.abs(e)))}(a))||(r.precision=s-2*("%"===r.type))}return no(r)}(r[0],r[r.length-1],null==e?10:e,n)},e.nice=function(n){null==n&&(n=10);var r,s,a=t(),i=0,o=a.length-1,l=a[i],u=a[o],c=10;for(u<l&&(s=l,l=u,u=s,s=i,i=o,o=s);c-- >0;){if((s=Fs(l,u,n))===r)return a[i]=l,a[o]=u,t(a);if(s>0)l=Math.floor(l/s)*s,u=Math.ceil(u/s)*s;else{if(!(s<0))break;l=Math.ceil(l*s)/s,u=Math.floor(u*s)/s}r=s}return e},e}function oo(){var e=Gi();return e.copy=function(){return Ui(e,oo())},Hi.apply(e,arguments),io(e)}function lo(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n}function uo(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}to=function(e){var t,n,r=void 0===e.grouping||void 0===e.thousands?eo:(t=so.call(e.grouping,Number),n=e.thousands+"",function(e,r){for(var s=e.length,a=[],i=0,o=t[0],l=0;s>0&&o>0&&(l+o+1>r&&(o=Math.max(1,r-l)),a.push(e.substring(s-=o,s+o)),!((l+=o+1)>r));)o=t[i=(i+1)%t.length];return a.reverse().join(n)}),s=void 0===e.currency?"":e.currency[0]+"",a=void 0===e.currency?"":e.currency[1]+"",i=void 0===e.decimal?".":e.decimal+"",o=void 0===e.numerals?eo:function(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}(so.call(e.numerals,String)),l=void 0===e.percent?"%":e.percent+"",u=void 0===e.minus?"−":e.minus+"",c=void 0===e.nan?"NaN":e.nan+"";function h(e){var t=(e=Ki(e)).fill,n=e.align,h=e.sign,d=e.symbol,p=e.zero,f=e.width,g=e.comma,m=e.precision,b=e.trim,y=e.type;"n"===y?(g=!0,y="g"):Qi[y]||(void 0===m&&(m=12),b=!0,y="g"),(p||"0"===t&&"="===n)&&(p=!0,t="0",n="=");var x="$"===d?s:"#"===d&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",v="$"===d?a:/[%p]/.test(y)?l:"",w=Qi[y],k=/[defgprs%]/.test(y);function I(e){var s,a,l,d=x,I=v;if("c"===y)I=w(e)+I,e="";else{var $=(e=+e)<0||1/e<0;if(e=isNaN(e)?c:w(Math.abs(e),m),b&&(e=function(e){e:for(var t,n=e.length,r=1,s=-1;r<n;++r)switch(e[r]){case".":s=t=r;break;case"0":0===s&&(s=r),t=r;break;default:if(!+e[r])break e;s>0&&(s=0)}return s>0?e.slice(0,s)+e.slice(t+1):e}(e)),$&&0==+e&&"+"!==h&&($=!1),d=($?"("===h?h:u:"-"===h||"("===h?"":h)+d,I=("s"===y?ao[8+ji/3]:"")+I+($&&"("===h?")":""),k)for(s=-1,a=e.length;++s<a;)if(48>(l=e.charCodeAt(s))||l>57){I=(46===l?i+e.slice(s+1):e.slice(s))+I,e=e.slice(0,s);break}}g&&!p&&(e=r(e,1/0));var N=d.length+e.length+I.length,C=N<f?new Array(f-N+1).join(t):"";switch(g&&p&&(e=r(C+e,C.length?f-I.length:1/0),C=""),n){case"<":e=d+e+I+C;break;case"=":e=d+C+e+I;break;case"^":e=C.slice(0,N=C.length>>1)+d+e+I+C.slice(N);break;default:e=C+d+e+I}return o(e)}return m=void 0===m?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),I.toString=function(){return e+""},I}return{format:h,formatPrefix:function(e,t){var n=h(((e=Ki(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(Zi(t)/3))),s=Math.pow(10,-r),a=ao[8+r/3];return function(e){return n(s*e)+a}}}}({thousands:",",grouping:[3],currency:["$",""]}),no=to.format,ro=to.formatPrefix;const co=uo(lo("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));function ho(e,t,n){this.k=e,this.x=t,this.y=n}uo(lo("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),uo(lo("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),uo(lo("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),ho.prototype={constructor:ho,scale:function(e){return 1===e?this:new ho(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new ho(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new ho(1,0,0),ho.prototype;class po{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class fo{refCount(e){return go("refCount")}incRef(e){return go("incRef")}timerAvailable(){return!0}time(e){return go("time")}read(e){return go("read")}readSync(e){return go("readSync")}numDataIds(){return go("numDataIds")}disposeData(e,t){return go("disposeData")}write(e,t,n){return go("write")}move(e,t,n,r,s){return go("move")}memory(){return go("memory")}floatPrecision(){return go("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return go("dispose")}}function go(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function mo(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function bo(e,t,n){return Math.max(e,Math.min(t,n))}function yo(e){return e%2==0?e:e+1}function xo(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function vo(e,t,n=""){xo($o(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function wo(e){xo(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ko(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Mo(e)&&!n)for(let r=0;r<e.length;++r)ko(e[r],t,n);else t.push(e);return t}function Io(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function $o(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function No(e){return e%1==0}function Co(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function So(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Eo(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function To(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function Ao(e,t){const n=t.length;return xo((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),xo(e.every((e=>No(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function Ro(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:Ao(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function _o(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Fo(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Do(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Mo(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function Oo(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Lo(e){return"string"==typeof e||e instanceof String}function zo(e){return"number"==typeof e}function Bo(e){return Array.isArray(e)?Bo(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":zo(e)?"float32":Lo(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function Po(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Wo(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Vo(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Uo(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Uo(e+t*o,i,n,r)}return s}function Go(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Uo(0,e,t,n)}function Ho(e,t){const n=jo(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function jo(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function qo(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Go(e,new Float32Array(n));if("int32"===t)return Go(e,new Int32Array(n));if("bool"===t)return Go(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ko(e){e.forEach((t=>{xo(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Xo(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Yo(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Zo(e){return e&&e.then&&"function"==typeof e.then}class Jo{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Qo,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Zo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Qo(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function el(){return nl}let tl,nl=null;function rl(){if(null==tl){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}tl=e}return tl}function sl(e,t){const n=function(){const e=rl();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const al="Abs",il="Acos",ol="Acosh",ll="Add",ul="AddN",cl="All",hl="Any",dl="ArgMax",pl="ArgMin",fl="Asin",gl="Asinh",ml="Atan",bl="Atanh",yl="Atan2",xl="AvgPool",vl="AvgPoolGrad",wl="AvgPool3D",kl="AvgPool3DGrad",Il="BatchMatMul",$l="BatchToSpaceND",Nl="Bincount",Cl="Cast",Sl="Ceil",El="ClipByValue",Tl="Complex",Al="ComplexAbs",Rl="Concat",_l="Conv2D",Fl="Conv2DBackpropFilter",Dl="Conv2DBackpropInput",Ml="Conv3D",Ol="Conv3DBackpropFilterV2",Ll="Conv3DBackpropInputV2",zl="Cos",Bl="Cosh",Pl="Cumsum",Wl="CropAndResize",Vl="DenseBincount",Ul="DepthToSpace",Gl="DepthwiseConv2dNative",Hl="DepthwiseConv2dNativeBackpropFilter",jl="DepthwiseConv2dNativeBackpropInput",ql="Diag",Kl="Dilation2D",Xl="Dilation2DBackpropInput",Yl="Dilation2DBackpropFilter",Zl="RealDiv",Jl="Einsum",Ql="Elu",eu="EluGrad",tu="Erf",nu="Equal",ru="Exp",su="ExpandDims",au="Expm1",iu="FFT",ou="Fill",lu="FlipLeftRight",uu="Floor",cu="FloorDiv",hu="FusedBatchNorm",du="GatherV2",pu="GatherNd",fu="Greater",gu="GreaterEqual",mu="Identity",bu="IFFT",yu="Imag",xu="IsFinite",vu="IsInf",wu="IsNan",ku="LeakyRelu",Iu="Less",$u="LessEqual",Nu="LinSpace",Cu="Log",Su="Log1p",Eu="LogicalAnd",Tu="LogicalNot",Au="LogicalOr",Ru="LRN",_u="LRNGrad",Fu="Max",Du="Maximum",Mu="MaxPool",Ou="MaxPoolGrad",Lu="MaxPool3D",zu="MaxPool3DGrad",Bu="MaxPoolWithArgmax",Pu="Mean",Wu="Min",Vu="Minimum",Uu="MirrorPad",Gu="Mod",Hu="Multinomial",ju="Multiply",qu="Neg",Ku="NotEqual",Xu="NonMaxSuppressionV3",Yu="NonMaxSuppressionV4",Zu="NonMaxSuppressionV5",Ju="OnesLike",Qu="OneHot",ec="Pack",tc="PadV2",nc="Pow",rc="Prelu",sc="Prod",ac="Range",ic="Real",oc="Reciprocal",lc="Relu",uc="Reshape",cc="ResizeNearestNeighbor",hc="ResizeNearestNeighborGrad",dc="ResizeBilinear",pc="ResizeBilinearGrad",fc="Relu6",gc="Reverse",mc="Round",bc="Rsqrt",yc="ScatterNd",xc="Select",vc="Selu",wc="Slice",kc="Sin",Ic="Sinh",$c="Sign",Nc="Sigmoid",Cc="Softplus",Sc="Sqrt",Ec="Sum",Tc="SpaceToBatchND",Ac="SplitV",Rc="Softmax",_c="SparseFillEmptyRows",Fc="SparseReshape",Dc="SparseSegmentMean",Mc="SparseSegmentSum",Oc="SparseToDense",Lc="SquaredDifference",zc="Square",Bc="StridedSlice",Pc="StringNGrams",Wc="StringSplit",Vc="StringToHashBucketFast",Uc="Sub",Gc="Tan",Hc="Tanh",jc="Tile",qc="TopK",Kc="Transform",Xc="Transpose",Yc="Unique",Zc="Unpack",Jc="UnsortedSegmentSum",Qc="ZerosLike",eh="Step",th="RotateWithOffset",nh="_FusedMatMul",rh="FusedConv2D",sh="FusedDepthwiseConv2D",ah=sl("kernelRegistry",(()=>new Map)),ih=sl("gradRegistry",(()=>new Map));function oh(e,t){const n=dh(e,t);return ah.get(n)}function lh(e){return ih.get(e)}function uh(e){const t=ah.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function ch(e){const{kernelName:t,backendName:n}=e,r=dh(t,n);ah.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),ah.set(r,e)}function hh(e){const{kernelName:t}=e;ih.has(t)&&el().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),ih.set(t,e)}function dh(e,t){return`${t}_${e}`}var ph=n(3720);const fh=n.n(ph)()||ph;function gh(e){return fh.fromString(e,!0,16)}const mh=gh("c3a5c85c97cb3127"),bh=gh("b492b66fbe98f273"),yh=gh("9ae16a3b2f90404f");function xh(e){return e.xor(e.shru(47))}function vh(e,t,n){const r=e.slice(t,t+n);return fh.fromBytes(Array.from(r),!0,!0)}function wh(e,t){return vh(e,t,8)}function kh(e,t){return vh(e,t,4)}function Ih(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function $h(e,t,n=gh("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Nh(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Ih(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Ih(s,44)),[s.add(r),a.add(i)]}(wh(e,t),wh(e,t+8),wh(e,t+16),wh(e,t+24),n,r)}function Ch(e,t=e.length){const n=fh.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=yh.add(2*t),r=wh(e,0).add(yh),s=wh(e,t-8);return $h(Ih(s,37).mul(n).add(r),Ih(r,25).add(s).mul(n),n)}if(t>=4){const n=yh.add(2*t);return $h(kh(e,0).shl(3).add(t),kh(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return xh(yh.mul(n).xor(mh.mul(r))).mul(yh)}return yh}(e,t):function(e,t=e.length){const n=yh.add(2*t),r=wh(e,0).mul(bh),s=wh(e,8),a=wh(e,t-8).mul(n),i=wh(e,t-16).mul(yh);return $h(Ih(r.add(s),43).add(Ih(a,30)).add(i),r.add(Ih(s.add(yh),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=yh.add(2*t),r=wh(e,0).mul(yh),s=wh(e,8),a=wh(e,t-8).mul(n),i=wh(e,t-16).mul(yh),o=Ih(r.add(s),43).add(Ih(a,30)).add(i),l=$h(o,r.add(Ih(s.add(yh),18)).add(a),n),u=wh(e,16).mul(n),c=wh(e,24),h=o.add(wh(e,t-32)).mul(n),d=l.add(wh(e,t-24)).mul(n);return $h(Ih(u.add(c),43).add(Ih(h,30)).add(d),u.add(Ih(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(bh).add(113),a=xh(s.mul(yh).add(113)).mul(yh),i=[fh.UZERO,fh.UZERO],o=[fh.UZERO,fh.UZERO];r=r.mul(yh).add(wh(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Ih(r.add(s).add(i[0]).add(wh(e,l+8)),37).mul(bh),s=Ih(s.add(i[1]).add(wh(e,l+48)),42).mul(bh),r=r.xor(o[1]),s=s.add(i[0]).add(wh(e,l+40)),a=Ih(a.add(o[0]),33).mul(bh),i=Nh(e,l,i[1].mul(bh),r.add(o[0])),o=Nh(e,l+32,a.add(o[1]),s.add(wh(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=bh.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Ih(r.add(s).add(i[0]).add(wh(e,l+8)),37).mul(h),s=Ih(s.add(i[1]).add(wh(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(wh(e,l+40))),a=Ih(a.add(o[0]),33).mul(h),i=Nh(e,l,i[1].mul(h),r.add(o[0])),o=Nh(e,l+32,a.add(o[1]),s.add(wh(e,l+16))),[a,r]=[r,a],$h($h(i[0],o[0],h).add(xh(s).mul(mh)).add(a),$h(i[1],o[1],h).add(r),h)}function Sh(e,t){return"string"===t?Ah(e):Eh([e],t)}function Eh(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ko(e)),el().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Th(){return el().platform.now()}function Ah(e,t="utf-8"){return t=t||"utf-8",el().platform.encode(e,t)}function Rh(e,t="utf-8"){return t=t||"utf-8",el().platform.decode(e,t)}class _h{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Dh)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Th();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Th()-i})}if(el().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Fh(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Fh(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Dh{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?So(`${r}ms`,9):r.error,o=So(e,25),l=t.rank,u=t.size,c=So(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Mh(e,t,n,r){const s=Vo(t),a=function(e,t,n,r){const s=Io(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Bh(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Oh(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=zh(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Oh(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Lo(e)?`'${e}'`:"bool"===n?Lh(e):parseFloat(e.toFixed(7)).toString(),So(r,t)}function Lh(e){return 0===e?"false":"true"}function zh(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Oh(Bh(e)[0],0,n)]:"bool"===n?[Lh(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Bh(r),a=Bh(a)),["["+r.map(((e,t)=>Oh(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Oh(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Bh(e):Array.from(e)).map(((e,t)=>Oh(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...zh(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...zh(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...zh(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Bh(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ph{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Io(e),null!=n){const e=n.length;xo(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Fo(t,this.size),this.strides=Vo(e)}set(e,...t){0===t.length&&(t=[0]),xo(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Wh().makeTensor(this.values,this.shape,this.dtype)}}let Wh=null,Vh=null,Uh=null;class Gh{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Io(e),this.strides=Vo(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Vh.buffer(this.shape,this.dtype,e)}bufferSync(){return Vh.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Go(this.shape,e,"complex64"===this.dtype)}arraySync(){return Go(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Wh().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Rh(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Wh().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Rh(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Wh().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Wh().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Vh.print(this,e)}clone(){return this.throwIfDisposed(),Vh.clone(this)}toString(e=!1){return Mh(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Vh.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Wh().makeVariable(this,e,t,n)}}function Hh(){return sl("Tensor",(()=>Gh))}Object.defineProperty(Gh,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Hh();class jh extends Gh{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!$o(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Wh().disposeTensor(this),this.dataId=e.dataId,Wh().incRef(this,null)}dispose(){Wh().disposeVariable(this),this.isDisposedInternal=!0}}var qh,Kh,Xh,Yh,Zh;Object.defineProperty(jh,Symbol.hasInstance,{value:e=>e instanceof Gh&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(qh||(qh={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Kh||(Kh={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Xh||(Xh={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Yh||(Yh={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Zh||(Zh={}));const Jh={float32:Yh,int32:Kh,bool:Xh,complex64:Zh};function Qh(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Jh[e][t]}function ed(e){return Qh(e,"int32")}function td(e,t){if(e.dtype===t.dtype)return[e,t];const n=Qh(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function nd(e,t){return t.some((t=>t.id===e.id))}function rd(e){const t=[];return sd(e,t,new Set),t}function sd(e,t,n){if(null==e)return;if(e instanceof Gh)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),sd(r,t,n))}}function ad(e){return null!=e.kernelName}class id{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class od{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new id}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new _h(this.backendInstance),!0}setupRegisteredKernels(){uh(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){uh(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof fo||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return od.nextTensorId++}nextVariableId(){return od.nextVariableId++}clone(e){const t=ud.runKernel(mu,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ud.runKernel(Cl,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==oh(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ad(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ad(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=oh(t,this.backendName);xo(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ad(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=lh(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(xo(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Lo(e[0])&&(s=e.map((e=>Ah(e))));const a=r.write(s,t,n),i=new Gh(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new Gh(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new jh(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Oo(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof jh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Oo(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=lh(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=jo(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rd(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(xo(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));xo(s instanceof Gh,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Ho(Io(e),"float32");return ud.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!$o(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),cd);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return xo(Po(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;xo(t.every((e=>e instanceof Gh)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),xo(n.value instanceof Gh,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),xo(Po(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];xo(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),xo(a.every((e=>e instanceof Gh)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Th(),n=await this.backend.time(e);return n.wallMs=Th()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new id;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ld(){const e=rl();if(null==e._tfengine){const t=new Jo(e);e._tfengine=new od(t)}var t;return t=e._tfengine.ENV,nl=t,Wh=()=>e._tfengine,e._tfengine}od.nextTensorId=0,od.nextVariableId=0;const ud=ld();function cd(e,t){const n={a:e,b:t};return ud.runKernel(ll,n)}function hd(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function dd(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const pd=el();function fd(e,t){let n=e;if(Mo(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Mo(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&el().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&gd(e,r,[]),r}function gd(e,t,n){if(n=n||[],!Array.isArray(e)&&!Mo(e))return void xo(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));xo(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),xo(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)gd(e[t],r,n.concat(t))}function md(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function bd(e,t,n,r="numeric"){if(e instanceof Gh)return md(r,e.dtype,t,n),e;let s=Bo(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),md(r,s,t,n),null==e||!Mo(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=fd(e,s);Mo(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Eh(e,s):ko(e,[],!0);return ud.makeTensor(i,a,s)}function yd(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>bd(e,`${t}[${s}]`,n,r)))}function xd(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ud.startScope(n);try{const t=r(...e);return Zo(t)&&console.error("Cannot return a Promise inside of tidy."),ud.endScope(t),t}catch(e){throw ud.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}pd.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),pd.registerFlag("IS_BROWSER",(()=>dd())),pd.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),pd.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),pd.registerFlag("PROD",(()=>!1)),pd.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>pd.getBool("DEBUG"))),pd.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),pd.registerFlag("IS_TEST",(()=>!1)),pd.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),pd.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const vd=xd({complex_:function(e,t){const n=bd(e,"real","complex"),r=bd(t,"imag","complex");vo(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ud.runKernel(Tl,s)}});function wd(e,t,n,r){if(null==r&&(r=Bo(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Mo(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ko(t);const e=Io(t),r=Io(n);xo(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Io(t.slice(e));xo(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Mo(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Eh(e,r):ko(e,[],!0),ud.makeTensor(e,t,r)}function kd(e,t,n){return wd(e,t,fd(e,n),n)}async function Id(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:$d(await Promise.all(r)),specs:n}}function $d(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const Nd="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Cd(e){return Nd?Buffer.byteLength(e):new Blob([e]).size}function Sd(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ed(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Cd(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Cd(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Td{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Td.instance&&(Td.instance=new Td),Td.instance}static registerSaveRouter(e){Td.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Td.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Td.getHandlers(e,"save")}static getLoadHandlers(e,t){return Td.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Td.getInstance().loadRouters:Td.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Ad="tensorflowjs",Rd="models_store",_d="model_info_store";function Fd(){if(!el().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Dd(e){const t=e.result;t.createObjectStore(Rd,{keyPath:"modelPath"}),t.createObjectStore(_d,{keyPath:"modelPath"})}class Md{constructor(e){if(this.indexedDB=Fd(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ad,1);r.onupgradeneeded=()=>Dd(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Rd,"readonly"),r=t.objectStore(Rd).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Ed(t),a=s.transaction(_d,"readwrite");let i=a.objectStore(_d);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Rd,"readwrite");const o=l.objectStore(Rd).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(_d);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Md.URL_SCHEME="indexeddb://";const Od=e=>{return el().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Md.URL_SCHEME)?(t=e.slice(Md.URL_SCHEME.length),new Md(t)):null;var t};Td.registerSaveRouter(Od),Td.registerLoadRouter(Od);class Ld{constructor(){this.indexedDB=Fd()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ad,1);n.onupgradeneeded=()=>Dd(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(_d,"readonly"),a=s.objectStore(_d).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Md.URL_SCHEME)?t.slice(Md.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ad,1);r.onupgradeneeded=()=>Dd(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(_d,"readwrite"),i=a.objectStore(_d),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Rd,"readwrite");const r=l.objectStore(Rd).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const zd="/",Bd="tensorflowjs_models",Pd="info",Wd="model_topology",Vd="weight_specs",Ud="weight_data",Gd="model_metadata";function Hd(e){return{info:[Bd,e,Pd].join(zd),topology:[Bd,e,Wd].join(zd),weightSpecs:[Bd,e,Vd].join(zd),weightData:[Bd,e,Ud].join(zd),modelMetadata:[Bd,e,Gd].join(zd)}}function jd(e){const t=e.split(zd);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(zd)}class qd{constructor(e){if(!el().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Hd(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ed(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Nd)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Nd){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}qd.URL_SCHEME="localstorage://";const Kd=e=>{return el().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qd.URL_SCHEME)?(t=e.slice(qd.URL_SCHEME.length),new qd(t)):null;var t};Td.registerSaveRouter(Kd),Td.registerLoadRouter(Kd);class Xd{constructor(){xo(el().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),xo("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Bd+zd,n=zd+Pd;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[jd(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Hd(e=(t=e).startsWith(qd.URL_SCHEME)?t.slice(qd.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Yd{constructor(){this.managers={}}static getInstance(){return null==Yd.instance&&(Yd.instance=new Yd),Yd.instance}static registerManager(e,t){xo(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),xo(e.length>0,(()=>"scheme must not be an empty string."));const n=Yd.getInstance();xo(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Zd{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(el().get("IS_BROWSER")){el().setPlatform("browser",new Zd);try{Yd.registerManager(qd.URL_SCHEME,new Xd)}catch(e){}try{Yd.registerManager(Md.URL_SCHEME,new Ld)}catch(e){}}let Jd;function Qd(e,t="float32",n){return t=t||"float32",Ko(e),new Ph(e,t,n)}el().get("IS_NODE")&&el().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=el().global.fetch?el().global.fetch(e,t):(null==Jd&&(Jd=n(5410)),Jd(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const ep=xd({cast_:function(e,t){const n=bd(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ud.runKernel(Cl,r,s)}}),tp=xd({clone_:function(e){const t={x:bd(e,"x","clone","string_or_numeric")};return ud.runKernel(mu,t)}});function np(e){return new Promise((e=>setTimeout(e))).then(e)}ld(),Vh={buffer:Qd,cast:ep,clone:tp,print:function(e,t=!1){console.log(e.toString(t))}};class rp{constructor(e){if(!el().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(rp.URL_SCHEME)&&(e=e.slice(rp.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await np((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await np((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ed(e)}}}}function sp(e,t,n,r){!function(e){xo(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){xo(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),xo(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),xo(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ap(e,t){null==t&&(t={});const n=null==t.fetchFunc?el().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await sp(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await sp(s,t.onProgress,.5,1)}rp.URL_SCHEME="downloads://",Td.registerSaveRouter((e=>el().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rp.URL_SCHEME)?function(e="model"){return new rp(e)}(e.slice(rp.URL_SCHEME.length)):null));class ip{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(xo("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=el().platform.fetch,xo(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&xo(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Ed(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Sd(await ap(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function op(e){return null!=e.match(ip.URL_SCHEME_REGEX)}ip.URL_SCHEME_REGEX=/^https?:\/\//;const lp=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>op(e))):op(e),n)return function(e,t){return new ip(e,t)}(e,t)}return null};function up(e,t,n){const r=e.shape.length;xo(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),xo(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)xo(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function cp(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function hp(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function dp(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function pp(e,t,n){return n<=e?n:n-(t-1)}function fp(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function gp(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=mp(i,l,u,r,e),h=bp(o,l,u,s,e),d=dp(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=xp(i,r,a,e,t,l),h[t]=vp(o,s,a,e,t,l),d[t]=yp(a,t,l);return{begin:c,end:h,strides:d}}function mp(e,t,n,r,s){const a=[...s],i=fp(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=pp(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function bp(e,t,n,r,s){const a=[...s],i=fp(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=pp(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=bo(0,a[e],s[e])}return a}function yp(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function xp(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=bo(0,i,l-1),i}function vp(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?bo(0,i,l):bo(-1,i,l-1),i}function wp(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function kp(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ip(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{xo(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(xo(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function $p(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=cp(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=cp(o),g=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,g.splice(e,0,1)}));const{begin:m,end:b,strides:y}=gp(g,d,p,u,c,h,s,a,i);u=m,c=b,h=y;const x=cp(l);x.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const v=hp(u,c,h),w=v.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:v,newShape:g,outShape:w}}Td.registerSaveRouter(lp),Td.registerLoadRouter(lp);class Np{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Cp{constructor(){this.classNameMap={}}static getMap(){return null==Cp.instance&&(Cp.instance=new Cp),Cp.instance}static register(e){Cp.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Sp(e){xo(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),xo("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),xo(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Cp.register(e)}function Ep(){return ud}function Tp(){return ud.memory()}function Ap(e,t){return ud.tidy(e,t)}function Rp(e){rd(e).forEach((e=>e.dispose()))}function _p(e){return ud.keep(e)}function Fp(e,t,n=1){return ud.registerBackend(e,t,n)}function Dp(e){return ud.customGrad(e)}function Mp(e,t){if((Mo(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Mo(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wd(e,[],[],t)}Uh=function(e){el().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Op extends Np{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Rp(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){xo(Po(e),(()=>"The f passed in variableGrads(f) must be a function")),xo(null==t||Array.isArray(t)&&t.every((e=>e instanceof jh)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ud.registeredVariables)t.push(ud.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;xo((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=ud.gradients(e,t,null,!0);xo(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),xo(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Rp(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Mp(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Op,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Lp=xd({abs_:function(e){const t=bd(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ud.runKernel(Al,e)}{const e={x:t};return ud.runKernel(al,e)}}}),zp=xd({add_:function(e,t){let n=bd(e,"a","add"),r=bd(t,"b","add");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(ll,s)}}),Bp=xd({all_:function(e,t=null,n=!1){const r={x:bd(e,"x","all","bool")},s={axis:t,keepDims:n};return ud.runKernel(cl,r,s)}}),Pp=xd({any_:function(e,t=null,n=!1){const r={x:bd(e,"x","any","bool")},s={axis:t,keepDims:n};return ud.runKernel(hl,r,s)}}),Wp=xd({argMax_:function(e,t=0){const n={x:bd(e,"x","argMax")},r={axis:t};return ud.runKernel(dl,n,r)}});function Vp(e,t,n,r,s="NHWC",a){return Hp(e,[...t,e[3]],n,a,r,null,null,ef(s))}function Up(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Kp(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Hp(e,u,n,r,s,a,!1,i)}function Gp(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Xp(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return jp(e,c,n,r,s,!1,h,a)}function Hp(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Kp(n),[b,y]=Kp(r),x=Yp(d,b),v=Yp(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=qp(e,t,n));const a=e[1];return[Zp((e[0]-t+2*r)/n+1,s),Zp((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Zp((t-a+d+p)/r+1,o),h=Zp((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,a,o),$=i?f*h:f;let N;return"channelsFirst"===o?N=[l,$,k,I]:"channelsLast"===o&&(N=[l,k,I,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:$,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function jp(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=Xp(n),[v,w,k]=Xp(r),I=Yp(p,v),$=Yp(f,w),N=Yp(g,k),{padInfo:C,outDepth:S,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=qp(e,t,r));const i=e[1],o=e[2];return[Zp((e[0]-t+2*s)/r+1,a),Zp((i-t+2*s)/r+1,a),Zp((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,$,N,o),A=a?m*d:m;let R;return"channelsFirst"===i?R=[l,A,S,E,T]:"channelsLast"===i&&(R=[l,S,E,T,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:S,outHeight:E,outWidth:T,outChannels:A,padInfo:C,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:$,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function qp(e,t,n,r=1){const s=Yp(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Kp(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Xp(e){return"number"==typeof e?[e,e,e]:e}function Yp(e,t){return t<=1?e:e+(e-1)*(t-1)}function Zp(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Jp(e){const[t,n,r]=Kp(e);return 1===t&&1===n&&1===r}function Qp(e,t){return Jp(e)||Jp(t)}function ef(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const tf=xd({reshape_:function(e,t){const n={x:bd(e,"x","reshape","string_or_numeric")},r={shape:t};return ud.runKernel(uc,n,r)}}),nf=xd({avgPool_:function(e,t,n,r,s){const a=bd(e,"x","avgPool","float32");xo(Qp(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=tf(a,[1,a.shape[0],a.shape[1],a.shape[2]])),xo(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&xo(No(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=ud.runKernel(xl,l,u);return c=ep(c,a.dtype),o?tf(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),rf=xd({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=bd(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=tf(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),xo(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),xo("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&xo(No(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=ud.runKernel(wl,u,c);return h=ep(h,o.dtype),l?tf(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),sf=xd({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=bd(e,"x","batchNorm"),o=bd(t,"mean","batchNorm"),l=bd(n,"variance","batchNorm");let u,c;null!=s&&(u=bd(s,"scale","batchNorm")),null!=r&&(c=bd(r,"offset","batchNorm")),xo(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),xo(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),xo(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?tf(e,[1,1,1,e.size]):2===e.rank?tf(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?tf(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=ud.runKernel(hu,h,d);return tf(p,i.shape)}}),af=xd({batchNorm2d_:function(e,t,n,r,s,a){const i=bd(e,"x","batchNorm"),o=bd(t,"mean","batchNorm"),l=bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=bd(s,"scale","batchNorm")),null!=r&&(c=bd(r,"offset","batchNorm")),xo(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),xo(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),xo(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&xo(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&xo(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),sf(i,o,l,c,u,a)}}),of=xd({batchNorm3d_:function(e,t,n,r,s,a){const i=bd(e,"x","batchNorm"),o=bd(t,"mean","batchNorm"),l=bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=bd(s,"scale","batchNorm")),null!=r&&(c=bd(r,"offset","batchNorm")),xo(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),xo(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),xo(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&xo(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&xo(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),sf(i,o,l,c,u,a)}}),lf=xd({batchNorm4d_:function(e,t,n,r,s,a){const i=bd(e,"x","batchNorm"),o=bd(t,"mean","batchNorm"),l=bd(n,"variance","batchNorm");let u,c;return null!=s&&(u=bd(s,"scale","batchNorm")),null!=r&&(c=bd(r,"offset","batchNorm")),xo(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),xo(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),xo(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&xo(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&xo(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),sf(i,o,l,c,u,a)}}),uf=xd({clipByValue_:function(e,t,n){const r=bd(e,"x","clipByValue");xo(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return ud.runKernel(El,s,a)}}),cf=xd({concat_:function(e,t=0){xo(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=yd(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return tp(n[0]);const r=n,s={axis:t};return ud.runKernel(Rl,r,s)}}),hf=xd({concat1d_:function(e){return cf(e,0)}}),df=xd({concat2d_:function(e,t){return cf(e,t)}}),pf=xd({concat3d_:function(e,t){return cf(e,t)}}),ff=xd({concat4d_:function(e,t){return cf(e,t)}}),gf=xd({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=bd(e,"x","conv2d"),l=bd(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=tf(o,[1,o.shape[0],o.shape[1],o.shape[2]])),xo(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),xo(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&xo(No(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];xo(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),xo(Qp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=ud.runKernel(_l,d,p);return c?tf(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),mf=xd({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=bd(e,"x","conv1d"),l=bd(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=tf(o,[1,o.shape[0],o.shape[1]])),xo(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),xo(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&xo(No(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),xo(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),xo(Qp(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),xo("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=tf(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=tf(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=gf(d,h,[1,n],r,"NHWC",[1,a],i);return tf(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),bf=xd({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){xo(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=tf(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),xo(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),xo(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),xo(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];xo(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),xo(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&xo(No(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=ud.runKernel(Dl,d,p);return u?tf(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),yf=xd({conv2dTranspose_:function(e,t,n,r,s,a){const i=bd(e,"x","conv2dTranspose"),o=bd(t,"filter","conv2dTranspose");return bf(n,i,o,r,s,"NHWC",a)}}),xf=xd({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=bd(e,"x","conv3d"),o=bd(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=tf(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),xo(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),xo(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),xo(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),xo(Qp(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),xo("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=ud.runKernel(Ml,c,h);return u?tf(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),vf=xd({conv3DBackpropInput_:function(e,t,n,r,s){xo(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=tf(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];xo(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),xo(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),xo(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),xo(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),xo(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=ud.runKernel(Ll,c,h);return o?tf(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),wf=xd({conv3dTranspose_:function(e,t,n,r,s){const a=bd(e,"x","conv3dTranspose"),i=bd(t,"filter","conv3dTranspose");return vf(n,a,i,r,s)}}),kf=xd({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=bd(e,"x","depthwiseConv2d"),l=bd(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=tf(o,[1,o.shape[0],o.shape[1],o.shape[2]])),xo(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),xo(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),xo(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&xo(No(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=ud.runKernel(Gl,h,d);return c?tf(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),If=xd({floorDiv_:function(e,t){let n=bd(e,"a","floorDiv"),r=bd(t,"b","floorDiv");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(cu,s)}}),$f=xd({div_:function(e,t){let n=bd(e,"a","div"),r=bd(t,"b","div");if([n,r]=td(n,r),"int32"===n.dtype&&"int32"===r.dtype)return If(n,r);const s={a:n,b:r};return ud.runKernel(Zl,s,{})}}),Nf=xd({matMul_:function(e,t,n=!1,r=!1){let s=bd(e,"a","matMul"),a=bd(t,"b","matMul");[s,a]=td(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return ud.runKernel(Il,i,o)}}),Cf=xd({dot_:function(e,t){const n=bd(e,"t1","dot"),r=bd(t,"t2","dot");xo(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(xo(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=tf(n,[1,-1]),t=tf(r,[-1,1]),s=Nf(e,t);return tf(s,[])}if(1===n.rank&&2===r.rank){const e=tf(n,[1,-1]),t=tf(r,[r.shape[0],r.shape[1]]),s=Nf(e,t);return tf(s,[s.size])}if(2===n.rank&&1===r.rank){const e=tf(r,[-1,1]),t=Nf(n,e);return tf(t,[t.size])}{const e=tf(r,[r.shape[0],r.shape[1]]);return Nf(n,e)}}}),Sf=xd({elu_:function(e){const t={x:bd(e,"x","elu")};return ud.runKernel(Ql,t)}});function Ef(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Tf(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Af(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Rf=xd({equal_:function(e,t){let n=bd(e,"a","equal","string_or_numeric"),r=bd(t,"b","equal","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(nu,s)}}),_f=xd({expandDims_:function(e,t=0){const n=bd(e,"x","expandDims","string_or_numeric");xo(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ud.runKernel(su,r,s)}}),Ff=xd({tile_:function(e,t){const n=bd(e,"x","tile","string_or_numeric");xo(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ud.runKernel(jc,r,s)}}),Df=xd({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Qd([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=tf(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Ff(_f(i,0),[n[0],1,1]);if(2===n.length)return Ff(_f(_f(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ff(_f(_f(_f(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Mf(e,t,n){const r={shape:e,value:t,dtype:n};return ud.runKernel(ou,{},r)}const Of=xd({floor_:function(e){const t={x:bd(e,"x","floor")};return ud.runKernel(uu,t)}}),Lf=xd({gather_:function(e,t,n=0,r=0){const s={x:bd(e,"x","gather"),indices:bd(t,"indices","gather","int32")},a={axis:n,batchDims:r};return ud.runKernel(du,s,a)}}),zf=xd({greater_:function(e,t){let n=bd(e,"a","greater","string_or_numeric"),r=bd(t,"b","greater","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(fu,s)}}),Bf=xd({greaterEqual_:function(e,t){let n=bd(e,"a","greaterEqual","string_or_numeric"),r=bd(t,"b","greaterEqual","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(gu,s)}}),Pf=xd({leakyRelu_:function(e,t=.2){const n={x:bd(e,"x","leakyRelu")},r={alpha:t};return ud.runKernel(ku,n,r)}});function Wf(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ud.runKernel(Nu,{},r)}const Vf=xd({log_:function(e){const t={x:bd(e,"x","log")};return ud.runKernel(Cu,t)}}),Uf=xd({exp_:function(e){const t={x:bd(e,"x","exp")};return ud.runKernel(ru,t)}}),Gf=xd({max_:function(e,t=null,n=!1){const r={x:bd(e,"x","max")},s={reductionIndices:t,keepDims:n};return ud.runKernel(Fu,r,s)}}),Hf=xd({mul_:function(e,t){let n=bd(e,"a","mul"),r=bd(t,"b","mul");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(ju,s)}}),jf=xd({sub_:function(e,t){let n=bd(e,"a","sub"),r=bd(t,"b","sub");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(Uc,s)}}),qf=xd({sum_:function(e,t=null,n=!1){let r=bd(e,"x","sum");"bool"===r.dtype&&(r=ep(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return ud.runKernel(Ec,s,a)}}),Kf=xd({logSoftmax_:function(e,t=-1){const n=bd(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Dp(((e,n)=>{const r=Gf(e,t,!0),s=jf(e,r),a=jf(ep(s,"float32"),Vf(qf(Uf(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=Uf(r);return jf(e,Hf(qf(e,t,!0),s))}}}))(n)}}),Xf=xd({logicalAnd_:function(e,t){const n=bd(e,"a","logicalAnd","bool"),r=bd(t,"b","logicalAnd","bool");Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Eu,s)}}),Yf=xd({maxPool_:function(e,t,n,r,s){const a=bd(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=tf(a,[1,a.shape[0],a.shape[1],a.shape[2]])),xo(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),xo(Qp(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&xo(No(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=ud.runKernel(Mu,l,u);return o?tf(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Zf=xd({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=bd(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=tf(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),xo(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),xo("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&xo(No(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=ud.runKernel(Lu,u,c);return l?tf(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Jf=xd({maximum_:function(e,t){let n=bd(e,"a","maximum"),r=bd(t,"b","maximum");[n,r]=td(n,r),"bool"===n.dtype&&(n=ep(n,"int32"),r=ep(r,"int32")),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Du,s)}}),Qf=xd({mean_:function(e,t=null,n=!1){const r={x:bd(e,"x","mean")},s={axis:t,keepDims:n};return ud.runKernel(Pu,r,s)}});function eg(e,t="float32"){if("complex64"===t){const t=eg(e,"float32"),n=eg(e,"float32");return vd(t,n)}const n=jo(Io(e),t);return ud.makeTensor(n,e,t)}function tg(e,t="float32"){if("complex64"===t){const t=tg(e,"float32"),n=eg(e,"float32");return vd(t,n)}const n=Ho(Io(e),t);return ud.makeTensor(n,e,t)}const ng=xd({minimum_:function(e,t){let n=bd(e,"a","minimum"),r=bd(t,"b","minimum");[n,r]=td(n,r),"bool"===n.dtype&&(n=ep(n,"int32"),r=ep(r,"int32")),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Vu,s)}});function rg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function sg(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function ag(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function ig(e,t){return sg(e,t.map((e=>1)),t)}function og(e,t,n){xo(rg(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function lg(e,t){if(rg(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function ug(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function cg(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const hg=xd({square_:function(e){const t=bd(e,"x","square");return ud.runKernel("Square",{x:t},{})}}),dg=xd({moments_:function(e,t=null,n=!1){const r=Ao(t,(e=bd(e,"x","moments")).shape),s=Qf(e,r,n);let a=s.shape;n||(a=ig(s.shape,r));const i=hg(jf(ep(e,"float32"),tf(s,a)));return{mean:s,variance:Qf(i,r,n)}}}),pg=xd({neg_:function(e){const t={x:bd(e,"x","neg")};return ud.runKernel(qu,t)}}),fg=xd({notEqual_:function(e,t){let n=bd(e,"a","notEqual","string_or_numeric"),r=bd(t,"b","notEqual","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Ku,s)}}),gg=xd({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:bd(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return ud.runKernel(Qu,s,a)}}),mg=xd({onesLike_:function(e){const t={x:bd(e,"x","onesLike")};return ud.runKernel(Ju,t)}}),bg=xd({pad_:function(e,t,n=0){const r=bd(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return ud.runKernel(tc,a,s)}}),yg=xd({prelu_:function(e,t){const n={x:bd(e,"x","prelu"),alpha:bd(t,"alpha","prelu")};return ud.runKernel(rc,n)}});var xg=n(6377);class vg{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=xg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class wg{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const kg=xd({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new vg(t,n,r,!1,s),i=Qd(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ig=xd({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Qd(e,r),i=new wg(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),$g=xd({relu_:function(e){const t={x:bd(e,"x","relu")};return ud.runKernel(lc,t)}}),Ng=xd({reverse_:function(e,t){const n={x:bd(e,"x","reverse")},r={dims:t};return ud.runKernel(gc,n,r)}}),Cg=xd({selu_:function(e){const t={x:bd(e,"x","selu")};return ud.runKernel(vc,t)}}),Sg=xd({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=bd(e,"x","separableConv2d"),l=bd(t,"depthwiseFilter","separableConv2d"),u=bd(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=tf(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");xo(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),xo(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),xo(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),xo(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),xo(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];xo(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=kf(c,l,r,s,i,a),g=gf(f,u,1,"valid",i);return h?tf(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Eg=xd({sigmoid_:function(e){const t={x:bd(e,"x","sigmoid")};return ud.runKernel(Nc,t)}}),Tg=xd({slice_:function(e,t,n){const r=bd(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return ud.runKernel(wc,s,a)}}),Ag=xd({slice1d_:function(e,t,n){const r=bd(e,"x","slice1d");return xo(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Tg(r,[t],[n])}}),Rg=xd({slice2d_:function(e,t,n){const r=bd(e,"x","slice2d");return xo(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Tg(r,t,n)}}),_g=xd({slice3d_:function(e,t,n){const r=bd(e,"x","slice3d");return xo(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Tg(r,t,n)}}),Fg=xd({slice4d_:function(e,t,n){const r=bd(e,"x","slice4d");return xo(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Tg(r,t,n)}}),Dg=xd({softmax_:function(e,t=-1){const n=bd(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ud.runKernel(Rc,r,s)}}),Mg=xd({softplus_:function(e){const t={x:bd(e,"x","softplus")};return ud.runKernel(Cc,t)}}),Og=xd({split_:function(e,t,n=0){const r={x:bd(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ud.runKernel(Ac,r,s)}}),Lg=xd({sqrt_:function(e){const t={x:bd(e,"x","sqrt")};return ud.runKernel(Sc,t)}}),zg=xd({squeeze_:function(e,t){const n=bd(e,"x","squeeze");return tf(n,Ro(n.shape,t).newShape)}}),Bg=xd({stack_:function(e,t=0){const n=yd(e,"tensors","stack","string_or_numeric");xo(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&xo(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ud.runKernel(ec,r,s)}}),Pg=xd({tanh_:function(e){const t={x:bd(e,"x","tanh")};return ud.runKernel(Hc,t)}});function Wg(e,t){wo(e);const n=fd(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wd(e,null,n,t)}const Vg=xd({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new vg(t,n,r,!0,s),i=Qd(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ug=xd({unstack_:function(e,t=0){const n=bd(e,"x","unstack","string_or_numeric");xo(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ud.runKernel(Zc,r,s)}});function Gg(e,t=!0,n,r){return ud.makeVariable(e,t,n,r)}const Hg=xd({broadcastTo_:function(e,t){let n=bd(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=tf(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return tp(n);const i={x:n},o={reps:a};return ud.runKernel(jc,i,o)}}),jg=xd({where_:function(e,t,n){const r=bd(t,"a","where"),s=bd(n,"b","where"),a=bd(e,"condition","where","bool"),i=Af(Af(a.shape,r.shape),s.shape),o={condition:Hg(a,i),t:Hg(r,i),e:Hg(s,i)};return ud.runKernel(xc,o)}}),qg=xd({zerosLike_:function(e){const t={x:bd(e,"x","zerosLike")};return ud.runKernel(Qc,t)}}),Kg=xd({transpose_:function(e,t){const n=bd(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),xo(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{xo(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return ud.runKernel(Xc,r,s)}}),Xg=xd({dropout_:function(e,t,n,r){const s=bd(e,"x","dropout");if(xo("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),xo(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Gh?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if($o(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=$f(Of(zp(Ig(a,0,1,"float32",r),i)),i);return Hf(s,o)}}),Yg=xd({imag_:function(e){const t={input:bd(e,"input","imag")};return ud.runKernel(yu,t)}}),Zg=xd({real_:function(e){const t={input:bd(e,"input","real")};return ud.runKernel(ic,t)}}),Jg=xd({fft_:function(e){xo("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ud.runKernel(iu,t)}}),Qg=xd({rfft_:function(e,t){xo("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Tg(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=cf([e,eg(r)],e.shape.length-1),n=t}else s=e;const a=qg(s),i=tf(vd(s,a),[r,n]),o=Jg(i),l=Math.floor(n/2)+1,u=Zg(o),c=Yg(o),h=Og(u,[l,n-l],u.shape.length-1),d=Og(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,tf(vd(h[0],d[0]),p)}}),em=xd({ifft_:function(e){xo("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ud.runKernel(bu,t)}}),tm=xd({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=tf(e,[n,t]);r=em(s)}else{const s=[n,2*(t-1)],a=tf(Zg(e),[n,t]),i=tf(Yg(e),[n,t]),o=Ng(Tg(a,[0,1],[n,t-2]),1),l=Hf(Ng(Tg(i,[0,1],[n,t-2]),1),Mp(-1)),u=cf([a,o],1),c=cf([i,l],1),h=tf(vd(u,c),[s[0],s[1]]);r=em(h)}if(r=Zg(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=tf(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),nm=xd({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=tf(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=tf(t,[1,t.shape[0],t.shape[1],t.shape[2]])),xo(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),xo(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),xo(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];xo(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),xo(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&xo(No(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return ud.runKernel(Fl,h,d)}}),rm=xd({relu6_:function(e){const t={x:bd(e,"x","relu6")};return ud.runKernel(fc,t)}}),sm=xd({step_:function(e,t=0){const n={x:bd(e,"x","step")},r={alpha:t};return ud.runKernel(eh,n,r)}});function am(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Hf(e,sm(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function im(e,t){let n=t;const r=Tf(e.shape,t.shape);return r.length>0&&(n=qf(n,r)),tf(n,e.shape)}function om(e,t,n,r){if("linear"===t)return e;if("relu"===t)return $g(e);if("elu"===t)return Sf(e);if("relu6"===t)return rm(e);if("prelu"===t)return yg(e,n);if("leakyrelu"===t)return Pf(e,r);if("sigmoid"===t)return Eg(e);throw new Error(`Unknown fused activation ${t}.`)}const lm=(e,t)=>!(e>0)||"linear"===t,um=xd({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===lm(ud.state.gradientDepth,l)){let h=gf(e,t,n,r,s,a,i);return null!=o&&(h=zp(h,o)),om(h,l,u,c)}const h=bd(e,"x","conv2d"),d=bd(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=tf(h,[1,h.shape[0],h.shape[1],h.shape[2]])),xo(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),xo(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&xo(No(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),xo(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),xo(Qp(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),xo("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=Hp(p.shape,d.shape,n,a,r,i);let m,b;null!=o&&(m=bd(o,"bias","fused conv2d"),[m]=td(m,h),Af(g.outShape,m.shape)),null!=u&&(b=bd(u,"prelu weights","fused conv2d"));const y=(e,t)=>{const[s,i,o,u]=t,c=am(e,o,l);xo(Jp(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[bf(i.shape,c,s,n,r),nm(i,c,s.shape,n,r)];if(null!=u){const e=im(u,c);h.push(e)}return h},x={x:p,filter:d,bias:m,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Dp(((e,t,n)=>{let r=ud.runKernel(rh,x,v);return n([t,e,r]),f&&(r=tf(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Dp(((e,t,n,r)=>{let s=ud.runKernel(rh,x,v);return r([t,e,s,n]),f&&(s=tf(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}}),cm=xd({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=tf(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=tf(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return ud.runKernel(Hl,u,c)}}),hm=xd({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=tf(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=ud.runKernel(jl,u,c);return l?tf(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});xd({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===lm(ud.state.gradientDepth,l)){let h=kf(e,t,n,r,s,a,i);return null!=o&&(h=zp(h,o)),om(h,l,u,c)}const h=bd(e,"x","depthwiseConv2d"),d=bd(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=tf(h,[1,h.shape[0],h.shape[1],h.shape[2]])),xo(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),xo(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),xo(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),xo(Qp(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&xo(No(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=Hp(p.shape,d.shape,n,a,r,i,!0);let m,b;null!=o&&(m=bd(o,"bias","fused conv2d"),[m]=td(m,h),Af(g.outShape,m.shape)),null!=u&&(b=bd(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{xo(Jp(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=am(e,u,l),d=hm(o.shape,h,s,n,r,a,i),p=cm(o,h,s.shape,n,r,a,i);return null!=c?[d,p,im(m,h)]:[d,p]},x={x:p,filter:d,bias:m,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?Dp(((e,t,n)=>{let r=ud.runKernel(sh,x,v);return n([t,e,r]),f&&(r=tf(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):Dp(((e,t,n,r)=>{let s=ud.runKernel(sh,x,v);return r([t,e,s,n]),f&&(s=tf(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}});const dm=xd({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===lm(ud.state.gradientDepth,a)){let l=Nf(e,t,n,r);return null!=s&&(l=zp(l,s)),om(l,a,i,o)}let l=bd(e,"a","fused matMul"),u=bd(t,"b","fused matMul");[l,u]=td(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=Io(f),b=Io(g);xo(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),xo($o(f,g),(()=>`Error in fused matMul: outer dimensions (${f}) and (${g}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),xo(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=l.shape.slice(0,-2).concat([d,p]),x=tf(l,n?[m,c,d]:[m,d,c]),v=tf(u,r?[b,p,h]:[b,h,p]);let w,k;null!=s&&(w=bd(s,"bias","fused matMul"),[w]=td(w,l),Af(y,w.shape)),null!=i&&(k=bd(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=am(tf(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=Nf(c,o,!1,!1),d=Nf(c,i,!0,!1)):n&&!r?(h=Nf(o,c,!1,!0),d=Nf(i,c,!1,!1)):(h=Nf(o,c,!0,!0),d=Nf(c,i,!0,!0)):(h=Nf(c,o,!1,!0),d=Nf(i,c,!0,!1)),null!=s?[h,d,im(u,c)]:[h,d]},$={a:x,b:v,bias:w,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?Dp(((e,t,n)=>{const r=ud.runKernel(nh,$,N);return n([e,t,r]),{value:tf(r,y),gradFunc:I}}))(x,v):Dp(((e,t,n,r)=>{const s=ud.runKernel(nh,$,N);return r([e,t,s,n]),{value:tf(s,y),gradFunc:I}}))(x,v,w)}});function pm(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Wg(s,"float32")}xd({hammingWindow_:function(e){return pm(e,.54,.46)}});const fm=xd({hannWindow_:function(e){return pm(e,.5,.5)}});function gm(e,t,n){if(wo(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=fd(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wd(e,t,r,n)}const mm=xd({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Tg(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=cf([Tg(e,a,t-r),Mf([r],s)]);i.push(o),a+=n}return 0===i.length?gm([],[0,t]):tf(cf(i),[i.length,t])}});function bm(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),xo(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),xo(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),xo(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),xo(1===t.rank,(()=>"scores must be a 1D tensor")),xo(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),xo(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function ym(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||xm)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function xm(e,t){return e>t?1:e<t?-1:0}function vm(e,t,n,r,s){return Im(e,t,n,r,s,0)}function wm(e,t,n,r,s,a){return Im(e,t,n,r,s,0,!1,a,!0)}function km(e,t,n,r,s,a){return Im(e,t,n,r,s,a,!0)}function Im(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Cm);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=$m(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Nm(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&ym(u,t,Cm))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function $m(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function Nm(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Cm(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}xd({stft_:function(e,t,n,r,s=fm){null==r&&(r=function(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}(t));const a=mm(e,t,n),i=Hf(a,s(t));return Qg(i,r)}}),xd({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=bd(e,"image","cropAndResize"),o=bd(t,"boxes","cropAndResize","float32"),l=bd(n,"boxInd","cropAndResize","int32"),u=o.shape[0];xo(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),xo(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),xo(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),xo(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),xo(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),xo("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return ud.runKernel(Wl,c,h)}}),xd({flipLeftRight_:function(e){const t=bd(e,"image","flipLeftRight","float32");xo(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ud.runKernel(lu,n,{})}}),xd({rotateWithOffset_:function(e,t,n=0,r=.5){const s=bd(e,"image","rotateWithOffset","float32");xo(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return ud.runKernel(th,a,i)}}),xd({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=bd(e,"boxes","nonMaxSuppression"),i=bd(t,"scores","nonMaxSuppression"),o=bm(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ud.runKernel(Xu,{boxes:a,scores:i},l)}}),xd({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=bd(e,"boxes","nonMaxSuppression"),o=bd(t,"scores","nonMaxSuppression"),l=bm(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=ud.runKernel(Zu,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),xd({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=bd(e,"boxes","nonMaxSuppression"),o=bd(t,"scores","nonMaxSuppression"),l=bm(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=ud.runKernel(Yu,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Sm=xd({resizeBilinear_:function(e,t,n=!1,r=!1){const s=bd(e,"images","resizeBilinear");xo(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),xo(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),xo(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=tf(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=ud.runKernel(dc,o,l);return i?tf(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Em=xd({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=bd(e,"images","resizeNearestNeighbor");xo(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),xo(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),xo("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),xo(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=tf(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=ud.runKernel(cc,o,l);return i?tf(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Tm=xd({bincount_:function(e,t,n){const r=bd(e,"x","bincount"),s=bd(t,"weights","bincount");xo("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),xo(n>=0,(()=>`size must be non-negative, but got ${n}.`)),xo(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return ud.runKernel(Nl,a,i)}}),Am=xd({lessEqual_:function(e,t){let n=bd(e,"a","lessEqual","string_or_numeric"),r=bd(t,"b","lessEqual","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel($u,s)}}),Rm=xd({round_:function(e){const t={x:bd(e,"x","round")};return ud.runKernel(mc,t)}});function _m(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ud.runKernel(ac,{},s)}xd({threshold_:function(e,t="binary",n=!1,r=.5){const s=bd(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Hf(Wg([r]),255);if(xo(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),xo(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),xo("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),xo("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Og(s,[1,1,1],-1);const e=Hf(i,.2989),t=Hf(o,.587),n=Hf(l,.114);u=zp(zp(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=Wg([-1]),u=Wg([0]),c=Wg([0]);for(let h=0;h<e.size-1;h++){n=Tg(e,0,h+1),r=Tg(e,h+1),i=$f(qf(n),t),o=$f(qf(r),t);const d=qf(Hf(n,_m(0,n.size)));s=$f(d,qf(n));const p=Mf(r.shape,n.size),f=zp(_m(0,r.size),p),g=Hf(r,f);a=$f(qf(g),qf(r));const m=jf(s,a),b=jf(s,a),y=Hf(i,o);c=Hf(Hf(y,m),b);const x=zf(c,u);u=jg(x,c,u),l=jg(x,Wg([h]),l)}return l}(Tm(ep(Rm(u),"int32"),kd([]),256),a));const h=n?Am(u,c):zf(u,c);return ep(Hf(h,255),"int32")}}),xd({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=bd(e,"image","transform","float32"),o=bd(t,"transforms","transform","float32");xo(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),xo(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),xo(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return ud.runKernel(Kc,l,u)}});const Fm=xd({bandPart_:function(e,t,n){xo(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),xo(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=bd(e,"a","bandPart");xo(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=tf(_m(0,a,1,"int32"),[-1,1]),l=_m(0,i,1,"int32"),u=jf(o,l),c=Xf(Am(u,Mp(+t,"int32")),Bf(u,Mp(-n,"int32"))),h=eg([a,i],r.dtype);return tf(Bg(Ug(tf(r,[-1,a,i])).map((e=>jg(c,e,h)))),s)}}),Dm=xd({min_:function(e,t=null,n=!1){const r={x:bd(e,"x","min")},s={axis:t,keepDims:n};return ud.runKernel(Wu,r,s)}}),Mm=xd({pow_:function(e,t){let n=bd(e,"base","pow"),r=bd(t,"exp","pow");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(nc,s)}});function Om(e,t,n=null){if(0===e.rank)return Lp(e);if(1!==e.rank&&null===n)return Om(tf(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return qf(Lp(e),n);if(t===1/0)return Gf(Lp(e),n);if(t===-1/0)return Dm(Lp(e),n);if("euclidean"===t||2===t)return Lg(qf(Mm(Lp(e),Mp(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Gf(qf(Lp(e),n[0]),n[1]-1);if(t===1/0)return Gf(qf(Lp(e),n[1]),n[0]);if(t===-1/0)return Dm(qf(Lp(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Lg(qf(hg(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Lm=xd({norm_:function(e,t="euclidean",n=null,r=!1){const s=Om(e=bd(e,"x","norm"),t,n);let a=s.shape;if(r){const t=Ao(n,e.shape);a=ig(s.shape,t)}return tf(s,a)}}),zm=xd({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,xo(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)xo(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Og(e,e.shape[0],0).map((e=>zg(e,[0])));xo(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ud.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Hf(qf(Hf(n[r],e)),n[r]);e=jf(e,t)}return $f(e,Lm(e,"euclidean"))})));return t?Bg(n,0):n}});function Bm(e,t=!1){return ud.tidy((()=>{xo(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Df(n),a=tp(e);const i=gm([[1]],[1,1]);let o=tp(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=ud.tidy((()=>{const t=Tg(a,[e,e],[n-e,1]),l=Lm(t),u=Tg(a,[e,e],[1,1]),c=jg(zf(u,0),gm([[-1]]),gm([[1]])),h=jf(u,Hf(c,l)),d=$f(t,h);o=1===d.shape[0]?tp(i):cf([i,Tg(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=pg($f(Nf(c,h),l)),f=Tg(a,[e,0],[n-e,r]),g=Hf(p,o),m=Kg(o);if(0===e)a=jf(f,Nf(g,Nf(m,f)));else{const t=jf(f,Nf(g,Nf(m,f)));a=cf([Tg(a,[0,0],[e,r]),t],0)}const b=Kg(g),y=Tg(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=jf(y,Nf(Nf(y,o),b));else{const t=jf(y,Nf(Nf(y,o),b));s=cf([Tg(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Rp([t,l,u])}return!t&&n>r&&(s=Tg(s,[0,0],[n,r]),a=Tg(a,[0,0],[r,r])),[s,a]}))}const Pm=xd({qr_:function(e,t=!1){if(xo(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Bm(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ug(tf(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Bm(e,t);s.push(n),a.push(r)})),[tf(Bg(s,0),e.shape),tf(Bg(a,0),e.shape)]}}});var Wm;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Wm||(Wm={}));const Vm=xd({computeWeightedLoss_:function(e,t,n=Wm.SUM_BY_NONZERO_WEIGHTS){const r=bd(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=bd(t,"weights","computeWeightedLoss"));const a=null==s?r:Hf(r,s);if(n===Wm.NONE)return a;if(n===Wm.SUM)return qf(a);if(n===Wm.MEAN){if(null==s)return Qf(a);{const e=r.size/s.size,t=$f(qf(a),qf(s));return e>1?$f(t,Mp(e)):t}}if(n===Wm.SUM_BY_NONZERO_WEIGHTS){if(null==s)return $f(qf(a),Mp(r.size));{const e=Hf(s,tg(r.shape)),t=ep(qf(fg(e,Mp(0))),"float32");return $f(qf(a),t)}}throw Error(`Unknown reduction: ${n}`)}});xd({absoluteDifference_:function(e,t,n,r=Wm.SUM_BY_NONZERO_WEIGHTS){const s=bd(e,"labels","absoluteDifference"),a=bd(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=bd(n,"weights","absoluteDifference")),vo(s.shape,a.shape,"Error in absoluteDifference: ");const o=Lp(jf(s,a));return Vm(o,i,r)}}),xd({cosineDistance_:function(e,t,n,r,s=Wm.SUM_BY_NONZERO_WEIGHTS){const a=bd(e,"labels","cosineDistance"),i=bd(t,"predictions","cosineDistance");let o=null;null!=r&&(o=bd(r,"weights","cosineDistance")),vo(a.shape,i.shape,"Error in cosineDistance: ");const l=Mp(1),u=jf(l,qf(Hf(a,i),n,!0));return Vm(u,o,s)}}),xd({hingeLoss_:function(e,t,n,r=Wm.SUM_BY_NONZERO_WEIGHTS){let s=bd(e,"labels","hingeLoss");const a=bd(t,"predictions","hingeLoss");let i=null;null!=n&&(i=bd(n,"weights","hingeLoss")),vo(s.shape,a.shape,"Error in hingeLoss: ");const o=Mp(1);s=jf(Hf(Mp(2),s),o);const l=$g(jf(o,Hf(s,a)));return Vm(l,i,r)}}),xd({huberLoss_:function(e,t,n,r=1,s=Wm.SUM_BY_NONZERO_WEIGHTS){const a=bd(e,"labels","huberLoss"),i=bd(t,"predictions","huberLoss");let o=null;null!=n&&(o=bd(n,"weights","huberLoss")),vo(a.shape,i.shape,"Error in huberLoss: ");const l=Mp(r),u=Lp(jf(i,a)),c=ng(u,l),h=jf(u,c),d=zp(Hf(Mp(.5),hg(c)),Hf(l,h));return Vm(d,o,s)}}),xd({logLoss_:function(e,t,n,r=1e-7,s=Wm.SUM_BY_NONZERO_WEIGHTS){const a=bd(e,"labels","logLoss"),i=bd(t,"predictions","logLoss");let o=null;null!=n&&(o=bd(n,"weights","logLoss")),vo(a.shape,i.shape,"Error in logLoss: ");const l=Mp(1),u=Mp(r),c=pg(Hf(a,Vf(zp(i,u)))),h=Hf(jf(l,a),Vf(zp(jf(l,i),u))),d=jf(c,h);return Vm(d,o,s)}});const Um=xd({squaredDifference_:function(e,t){let n=bd(e,"a","squaredDifference"),r=bd(t,"b","squaredDifference");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Lc,s,{})}});xd({meanSquaredError_:function(e,t,n,r=Wm.SUM_BY_NONZERO_WEIGHTS){const s=bd(e,"labels","meanSquaredError"),a=bd(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=bd(n,"weights","meanSquaredError")),vo(s.shape,a.shape,"Error in meanSquaredError: ");const o=Um(s,a);return Vm(o,i,r)}});const Gm=xd({log1p_:function(e){const t={x:bd(e,"x","log1p")};return ud.runKernel(Su,t)}});xd({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Wm.SUM_BY_NONZERO_WEIGHTS){let a=bd(e,"multiClassLabels","sigmoidCrossEntropy");const i=bd(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=bd(n,"weights","sigmoidCrossEntropy")),vo(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Mp(r),t=Mp(1),n=Mp(.5);a=zp(Hf(a,jf(t,e)),Hf(n,e))}const l=function(e,t){const n=bd(e,"labels","sigmoidCrossEntropyWithLogits"),r=bd(t,"logits","sigmoidCrossEntropyWithLogits");vo(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=$g(r),a=Hf(r,n),i=Gm(Uf(pg(Lp(r))));return zp(jf(s,a),i)}(a,i);return Vm(l,o,s)}});const Hm=xd({logSumExp_:function(e,t=null,n=!1){const r=bd(e,"x","logSumExp"),s=Ao(t,r.shape),a=Gf(r,s,!0),i=jf(r,a),o=Uf(i),l=qf(o,s),u=Vf(l),c=zp(tf(a,u.shape),u);if(n){const e=ig(c.shape,s);return tf(c,e)}return c}});xd({softmaxCrossEntropy_:function(e,t,n,r=0,s=Wm.SUM_BY_NONZERO_WEIGHTS){let a=bd(e,"onehotLabels","softmaxCrossEntropy");const i=bd(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=bd(n,"weights","softmaxCrossEntropy")),vo(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Mp(r),t=Mp(1),n=Mp(a.shape[1]);a=zp(Hf(a,jf(t,e)),$f(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Dp(((e,t,r)=>{const s=Hm(t,[n],!0),a=jf(ep(t,"float32"),s);r([e,a]);const i=pg(Hf(a,e));return{value:qf(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=ig(e.shape,[n]);return[Hf(tf(e,a),jf(ep(r,"float32"),Uf(s))),Hf(tf(e,a),jf(Uf(s),ep(r,"float32")))]}}}))(e,t)}(a,i);return Vm(l,o,s)}}),xd({sparseFillEmptyRows_:function(e,t,n,r){const s=bd(e,"indices","sparseFillEmptyRows"),a=bd(t,"values","sparseFillEmptyRows"),i=bd(n,"denseShape","sparseFillEmptyRows"),o=bd(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=ud.runKernel(_c,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),xd({sparseReshape_:function(e,t,n){const r=bd(e,"inputIndices","sparseReshape"),s=bd(t,"inputShape","sparseReshape"),a=bd(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=ud.runKernel(Fc,i);return{outputIndices:o[0],outputShape:o[1]}}}),xd({sparseSegmentMean_:function(e,t,n){const r=bd(e,"data","sparseSegmentMean"),s=bd(t,"indices","sparseSegmentMean"),a=bd(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return ud.runKernel(Dc,i)}}),xd({sparseSegmentSum_:function(e,t,n){const r=bd(e,"data","sparseSegmentSum"),s=bd(t,"indices","sparseSegmentSum"),a=bd(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return ud.runKernel(Mc,i)}}),xd({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=bd(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=bd(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=ud.runKernel(Pc,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),xd({stringSplit_:function(e,t,n=!0){const r=bd(e,"input","stringSplit","string"),s=bd(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=ud.runKernel(Wc,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),xd({stringToHashBucketFast_:function(e,t){const n=bd(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ud.runKernel(Vc,s,r)}});const jm={bandPart:Fm,gramSchmidt:zm,qr:Pm};class qm extends Op{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ud.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ud.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ap((()=>qg(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ap((()=>qg(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Ap((()=>{const e=zp(Hf(a,this.rho),Hf(hg(s),1-this.rho)),t=Hf($f(Lg(zp(i,this.epsilon)),Lg(zp(a,this.epsilon))),s),n=zp(Hf(i,this.rho),Hf(hg(t),1-this.rho));a.assign(e),i.assign(n);const o=zp(Hf(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Rp(this.accumulatedGrads.map((e=>e.variable))),Rp(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}qm.className="Adadelta",Sp(qm);class Km extends Op{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ud.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ap((()=>Mf(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Ap((()=>{const e=zp(a,hg(s));a.assign(e);const t=zp(Hf($f(s,Lg(zp(e,ud.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Rp(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Km.className="Adagrad",Sp(Km);class Xm extends Op{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ap((()=>{this.accBeta1=Mp(t).variable(),this.accBeta2=Mp(n).variable()})),null==r&&(this.epsilon=ud.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ap((()=>{const n=jf(1,this.accBeta1),r=jf(1,this.accBeta2);t.forEach(((t,s)=>{const a=ud.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ap((()=>qg(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Ap((()=>qg(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=zp(Hf(o,this.beta1),Hf(i,1-this.beta1)),c=zp(Hf(l,this.beta2),Hf(hg(i),1-this.beta2)),h=$f(u,n),d=$f(c,r);o.assign(u),l.assign(c);const p=zp(Hf($f(h,zp(Lg(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(Hf(this.accBeta1,this.beta1)),this.accBeta2.assign(Hf(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Rp(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Rp(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ap((()=>{this.accBeta1.assign(Mm(this.beta1,this.iterations_+1)),this.accBeta2.assign(Mm(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Xm.className="Adam",Sp(Xm);class Ym extends Op{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ap((()=>{this.iteration=Mp(0).variable(),this.accBeta1=Mp(t).variable()})),null==r&&(this.epsilon=ud.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ap((()=>{const n=jf(1,this.accBeta1),r=$f(-this.learningRate,zp(Hf(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=ud.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:qg(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:qg(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=zp(Hf(o,this.beta1),Hf(i,1-this.beta1)),c=Hf(l,this.beta2),h=Lp(i),d=Jf(c,h);o.assign(u),l.assign(d);const p=zp(Hf($f(r,n),$f(u,zp(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(zp(this.iteration,1)),this.accBeta1.assign(Hf(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Rp(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Rp(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ym.className="Adamax",Sp(Ym);class Zm extends Op{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ud.registeredVariables[t];Ap((()=>{const e=zp(Hf(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=_p(Mp(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Zm.className="SGD",Sp(Zm);class Jm extends Zm{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Mp(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ud.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ap((()=>qg(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Ap((()=>{let e;const t=zp(Hf(this.m,s),a);e=this.useNesterov?zp(Hf(this.c,zp(a,Hf(t,this.m))),r):zp(Hf(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Rp(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Jm.className="Momentum",Sp(Jm);class Qm extends Op{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ud.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ud.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ap((()=>qg(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ap((()=>qg(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ap((()=>qg(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ap((()=>{const e=zp(Hf(i,this.decay),Hf(hg(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=zp(Hf(t,this.decay),Hf(a,1-this.decay)),l=$f(Hf(a,this.learningRate),Lg(jf(e,zp(hg(s),this.epsilon)))),u=zp(Hf(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=jf(r,u);r.assign(c)}else{const e=zp(Hf(i,this.decay),Hf(hg(a),1-this.decay)),t=zp(Hf(o,this.momentum),$f(Hf(a,this.learningRate),Lg(zp(e,this.epsilon))));i.assign(e),o.assign(t);const n=jf(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Rp(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Rp(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Rp(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Qm.className="RMSProp",Sp(Qm);class eb{static sgd(e){return new Zm(e)}static momentum(e,t,n=!1){return new Jm(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Qm(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Xm(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new qm(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Ym(e,t,n,r,s)}static adagrad(e,t=.1){return new Km(e,t)}}const tb={sgd:eb.sgd,momentum:eb.momentum,adadelta:eb.adadelta,adagrad:eb.adagrad,rmsprop:eb.rmsprop,adamax:eb.adamax,adam:eb.adam},nb="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function rb(){return new Promise((e=>nb((()=>e()))))}function sb(e,t){const n=e[0].length;e.forEach(((e,t)=>{xo(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),xo(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)xo(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function ab(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const ib=30;function ob(e){return e<=ib?e:Wo(e,Math.floor(Math.sqrt(e)))}function lb(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ub(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function cb(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function hb(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function db(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pb(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function fb(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Io(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Vo(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function gb(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function mb(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}gb(n,t,e)}function bb(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:Io(t.shape)/o,sliceSize:i,strides:[...Vo(n.slice(0,s)),1],outputSize:Io(n)}}const yb=1.7580993408473768,xb=1.0507009873554805,vb=.3275911,wb=.254829592,kb=-.284496736,Ib=1.421413741,$b=-1.453152027,Nb=1.061405429;function Cb(...e){el().getBool("IS_TEST")||console.warn(...e)}function Sb(...e){el().getBool("IS_TEST")||console.log(...e)}function Eb(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Tb(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ab(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Rb(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function _b(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Fb(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Db(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Mb(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Ob=/->/g;function Lb(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ob,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");xo(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function zb(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Bb(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:xo(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Pb(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=Vb(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Wb(e){return e.every(((e,t)=>e===t))}function Vb(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Ub(e,t,n=0){let r=[];if("number"==typeof t)xo(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{xo(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}xo(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Gb(e,t){let n,r=!1;for(e<=ib?(n=e,r=!0):n=Wo(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Wo(e,n+1);return n}function Hb(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function jb(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function qb(e){try{return e.map((e=>Rh(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Kb(e){return e.map((e=>Ah(e)))}function Xb(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Qd(e,"int32"),s=Qd([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const Yb={kernelName:al,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,sm(ep(n,"float32"),-1))}}},Zb={kernelName:il,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=hg(ep(n,"float32")),r=Lg(jf(Mp(1),t));return pg($f(e,r))}}}},Jb={kernelName:ol,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Lg(jf(hg(ep(n,"float32")),1));return $f(e,t)}}}},Qb={kernelName:ll,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{let t=e;const r=Tf(n.shape,s);return r.length>0&&(t=qf(t,r)),tf(t,n.shape)},b:()=>{let t=e;const n=Tf(r.shape,s);return n.length>0&&(t=qf(t,n)),tf(t,r.shape)}}}},ey={kernelName:ul,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ty={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qg(n)}}},ny={kernelName:pl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qg(n)}}},ry={kernelName:fl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,Lg(jf(Mp(1),hg(ep(n,"float32")))))}}},sy={kernelName:gl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Lg(zp(Mp(1),hg(ep(n,"float32"))));return $f(e,t)}}}},ay={kernelName:yl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{const t=zp(hg(n),hg(r));let a=Hf(e,$f(r,t));const i=Tf(n.shape,s);return i.length>0&&(a=qf(a,i)),tf(a,n.shape)},b:()=>{const t=zp(hg(n),hg(r));let a=pg(Hf(e,$f(n,t)));const i=Tf(r.shape,s);return i.length>0&&(a=qf(a,i)),tf(a,r.shape)}}}},iy={kernelName:ml,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,zp(hg(ep(n,"float32")),1))}}},oy={kernelName:bl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,jf(Mp(1),hg(ep(n,"float32"))))}}},ly=xd({avgPool3dGrad_:function(e,t,n,r,s,a){const i=bd(e,"dy","avgPool3dGrad"),o=bd(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=tf(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=tf(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),xo(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),xo(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&xo(No(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=ud.runKernel(kl,h,d);return c?tf(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),uy={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ly(e,r,s,a,i,o)}}},cy=xd({avgPoolGrad_:function(e,t,n,r,s){const a=bd(e,"dy","avgPoolGrad"),i=bd(t,"input","avgPoolGrad");xo(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=tf(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=tf(a,[1,a.shape[0],a.shape[1],a.shape[2]])),xo(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),xo(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=ud.runKernel(vl,c,h);return u?tf(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),hy={kernelName:xl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>cy(e,r,s,a,i)}}},dy={kernelName:Il,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Nf(e,s,!1,!1),b:()=>Nf(e,r,!0,!1)}:a&&!i?{a:()=>Nf(s,e,!1,!0),b:()=>Nf(r,e,!1,!1)}:{a:()=>Nf(s,e,!0,!0),b:()=>Nf(e,r,!0,!0)}:{a:()=>Nf(e,s,!1,!0),b:()=>Nf(r,e,!0,!1)}}},py=xd({spaceToBatchND_:function(e,t,n){const r=bd(e,"x","spaceToBatchND");xo(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),xo(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),xo(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return ud.runKernel(Tc,s,a)}}),fy={kernelName:$l,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>py(e,r,s)}}},gy={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>qf(e,o,!0)}}},my={kernelName:Cl,gradFunc:e=>({x:()=>e.clone()})},by={kernelName:Sl,gradFunc:e=>({x:()=>qg(e)})},yy={kernelName:El,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>jg(Xf(Bf(r,s),Am(r,a)),e,qg(e))}}},xy={kernelName:Al,inputsToSave:["x"],gradFunc:Yb.gradFunc},vy={kernelName:Rl,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=Ao(s,t[0].shape)[0],i=r.map((e=>e[a]));return Og(e,i,a).map((e=>()=>e))}},wy={kernelName:_l,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return xo(Jp(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>bf(r.shape,e,s,i,o,l),filter:()=>nm(r,e,s.shape,i,o,l)}}},ky={kernelName:Dl,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>gf(e,s,a,i,o,1,l),filter:()=>nm(e,r,s.shape,a,i,o,l)}}},Iy=xd({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=tf(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=tf(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),xo(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),xo(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),xo(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),xo(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),xo(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return ud.runKernel(Ol,o,l)}}),$y={kernelName:Ml,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;xo(Jp(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>vf(i.shape,e,o,s,a),filter:()=>Iy(i,e,o.shape,s,a)}}},Ny=xd({sin_:function(e){const t={x:bd(e,"x","sin")};return ud.runKernel(kc,t)}}),Cy={kernelName:zl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(pg(Ny(ep(n,"float32"))),e)}}},Sy=xd({sinh_:function(e){const t={x:bd(e,"x","sinh")};return ud.runKernel(Ic,t)}}),Ey={kernelName:Bl,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(Sy(ep(n,"float32")),e)}}},Ty=xd({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:bd(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return ud.runKernel(Pl,s,a)}}),Ay={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=lg([s],r.rank);let n=Ty(e,s,a,!i);return null!=t&&(n=Kg(n,t)),n}}}},Ry={kernelName:Gl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;xo(Jp(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return xo(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),xo(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),xo(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),xo(Qp(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&xo(No(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>hm(l.shape,e,u,s,a,r,i),filter:()=>cm(l,e,u.shape,s,a,r,i)}}},_y={kernelName:Kl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>ud.runKernel(Xl,a,n),filter:()=>ud.runKernel(Yl,i,n)}}},Fy={kernelName:Ql,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ud.runKernel(eu,r)}}},Dy={kernelName:tu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Hf(Uf(pg(hg(n))),2/Math.sqrt(Math.PI));return{x:()=>Hf(e,r)}}},My={kernelName:ru,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,n)}}},Oy={kernelName:su,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>tf(e,n.shape)}}},Ly={kernelName:au,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,Uf(n))}}},zy={kernelName:uu,gradFunc:e=>({x:()=>qg(e)})},By={kernelName:cu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{const t=$f(e,ep(r,"float32")),a=Tf(n.shape,s);return a.length>0?tf(qf(t,a),n.shape):t},b:()=>{let t=Hf(e,ep(n,"float32"));const a=Tf(r.shape,s);a.length>0&&(t=tf(qf(t,a),r.shape));const i=hg(r);return pg($f(t,ep(i,"float32")))}}}},Py=xd({rsqrt_:function(e){const t={x:bd(e,"x","rsqrt")};return ud.runKernel(bc,t)}}),Wy={kernelName:hu,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Mp(1):o,u=Tf(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=jf(s,a),d=Hf(e,l),p=Py(zp(i,Mp(r))),f=Hf(Hf(Hf(p,p),p),Mp(-.5));return{x:()=>1===a.rank?tf(Hf(Hf(e,Ff(tf(p,[1,1,1,a.shape[0]]),c)),l),s.shape):tf(Hf(Hf(e,p),l),s.shape),mean:()=>{let e=Hf(Hf(p,Mp(-1)),d);return 1===a.rank&&(e=qf(e,u)),tf(e,a.shape)},variance:()=>{let e=Hf(Hf(f,h),d);return 1===a.rank&&(e=qf(e,u)),tf(e,a.shape)},scale:()=>{const t=Hf(h,p);let n=Hf(e,t);return 1===a.rank&&(n=qf(n,u)),tf(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=qf(t,u)),tf(t,a.shape)}}}},Vy=xd({unsortedSegmentSum_:function(e,t,n){const r=bd(e,"x","unsortedSegmentSum"),s=bd(t,"segmentIds","unsortedSegmentSum","int32");xo(No(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return ud.runKernel(Jc,a,i)}}),Uy={kernelName:du,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=Ao(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=Gy(0,l),d=Gy(l+1,l+1+c),p=Hy([o,[n],u]),f=tf(e,p),g=tf(s,[n]),m=Hy([[l],h,d]),b=Kg(f,m);let y=Vy(b,g,r.shape[i]);const x=ug(m);return y=Kg(y,x),y},indices:()=>s}}};function Gy(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Hy(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const jy={kernelName:gu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>qg(n),b:()=>qg(r)}}},qy={kernelName:mu,gradFunc:e=>({x:()=>ep(e,"float32")})},Ky={kernelName:xu,gradFunc:e=>({x:()=>qg(e)})},Xy={kernelName:vu,gradFunc:e=>({x:()=>qg(e)})},Yy={kernelName:wu,gradFunc:e=>({x:()=>qg(e)})},Zy={kernelName:ku,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=zf(r,0);return{x:()=>jg(a,e,Hf(e,s))}}},Jy={kernelName:Su,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,zp(n,1))}}},Qy={kernelName:Cu,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,ep(n,"float32"))}}},ex={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Uf(r);return jf(e,Hf(qf(e,s,!0),t))}}}},tx=xd({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return ud.runKernel(_u,o,l)}}),nx={kernelName:Ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>tx(r,s,e,a,i,o,l)}}};function rx(e,t,n,r){return t.rank<n.rank&&(t=tf(t,ig(t.shape,r))),e.rank<n.rank&&(e=tf(e,ig(e.shape,r))),{x:()=>Hf(e,ep(Rf(n,t),e.dtype))}}const sx={kernelName:Fu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=rx(e,t[1],a,Ao(s,a.shape));return{x:()=>i.x()}}},ax=xd({less_:function(e,t){let n=bd(e,"a","less","string_or_numeric"),r=bd(t,"b","less","string_or_numeric");[n,r]=td(n,r),Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Iu,s)}}),ix={kernelName:Du,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Hf(e,ep(Bf(n,r),"float32")),b:()=>Hf(e,ep(ax(n,r),"float32"))}}},ox=xd({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=bd(e,"dy","maxPool3dGrad"),l=bd(t,"input","maxPool3dGrad"),u=bd(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=tf(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=tf(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=tf(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),xo(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),xo(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),xo(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&xo(No(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:a,dimRoundingMode:i},m=ud.runKernel(zu,f,g);return p?tf(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),lx={kernelName:Lu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ox(e,r,s,a,i,o,l)}}},ux=xd({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=bd(e,"dy","maxPoolGrad"),l=bd(t,"input","maxPoolGrad"),u=bd(n,"output","maxPoolGrad");xo(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),xo(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),xo(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&xo(No(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return ud.runKernel(Ou,c,h)}}),cx={kernelName:Mu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>ux(e,r,s,a,i,o)}}},hx={kernelName:Pu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=Ao(s,r.shape),i=Io(ag(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=tf(e,t);return $f(Hf(n,tg(r.shape,"float32")),i)}}}},dx={kernelName:Wu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=rx(e,i,a,Ao(s,a.shape));return{x:()=>o.x()}}},px={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Hf(e,ep(Am(n,r),"float32")),b:()=>Hf(e,ep(zf(n,r),"float32"))}}},fx={kernelName:Uu,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Tg(e,a,r.shape)}}},gx={kernelName:Gu,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{const t=Tf(n.shape,s);return t.length>0?tf(qf(e,t),n.shape):e},b:()=>{const t=Hf(e,pg(Of($f(n,r)))),a=Tf(r.shape,s);return a.length>0?tf(qf(t,a),r.shape):t}}}},mx={kernelName:ju,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{const t=Hf(e,ep(r,"float32")),a=Tf(n.shape,s);return a.length>0?tf(qf(t,a),n.shape):t},b:()=>{const t=Hf(e,ep(n,"float32")),a=Tf(r.shape,s);return a.length>0?tf(qf(t,a),r.shape):t}}}},bx={kernelName:qu,gradFunc:e=>({x:()=>pg(e)})},yx={kernelName:Qu,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>eg(n.shape,"float32")}}},xx={kernelName:Ju,gradFunc:e=>({x:()=>qg(e)})},vx={kernelName:ec,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Ug(e,r).map((e=>()=>e))}},wx={kernelName:tc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Tg(e,a,r.shape)}}},kx={kernelName:nc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Af(a.shape,i.shape);return{a:()=>{const t=ep(i,"float32");let n=Hf(e,Hf(t,Mm(a,jf(t,Mp(1)))));const r=Tf(a.shape,o);return r.length>0&&(n=qf(n,r)),tf(n,a.shape)},b:()=>{const t=zf(a,0),n=jg(t,Vf(a),qg(a));let r=Hf(e,Hf(s,n));const l=Tf(i.shape,o);return l.length>0&&(r=qf(r,l)),tf(r,i.shape)}}}},Ix={kernelName:rc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=zf(n,0);return{x:()=>jg(s,e,Hf(e,r)),alpha:()=>{let t=jg(s,qg(e),Hf(e,n));const a=Tf(r.shape,e.shape);return a.length>0&&(t=qf(t,a)),tf(t,r.shape)}}}},$x={kernelName:Zl,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{const t=$f(e,ep(r,"float32")),a=Tf(n.shape,s);return a.length>0?tf(qf(t,a),n.shape):t},b:()=>{let t=Hf(e,ep(n,"float32"));const a=Tf(r.shape,s);a.length>0&&(t=tf(qf(t,a),r.shape));const i=hg(r);return pg($f(t,ep(i,"float32")))}}}},Nx={kernelName:oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,pg(hg(n)))}}},Cx={kernelName:fc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Hf(Am(n,6),sm(n));return{x:()=>Hf(e,ep(r,"float32"))}}},Sx={kernelName:lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,ep(sm(n),"float32"))}}},Ex={kernelName:uc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tf(e,n.shape)}}},Tx={kernelName:dc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ud.runKernel(pc,s,n)}}},Ax={kernelName:cc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ud.runKernel(hc,s,n)}}},Rx={kernelName:gc,gradFunc:(e,t,n)=>{const{dims:r}=n,s=Ao(r,e.shape);return{x:()=>Ng(e,s)}}},_x={kernelName:mc,gradFunc:e=>({x:()=>qg(e)})},Fx={kernelName:bc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pg($f(e,Hf(Mm(n,1.5),2)))}}},Dx=xd({logicalNot_:function(e){const t={x:bd(e,"x","logicalNot","bool")};return ud.runKernel(Tu,t)}}),Mx={kernelName:xc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ep(qg(n),"float32"),t:()=>Hf(e,ep(n,e.dtype)),e:()=>Hf(e,ep(Dx(n),e.dtype))}}},Ox={kernelName:vc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zf(n,Mp(0)),r=Mp(yb),s=Mp(xb),a=Hf(e,s),i=Hf(Hf(e,r),Uf(ep(n,"float32")));return jg(t,a,i)}}}},Lx={kernelName:Nc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,Hf(n,jf(Mp(1),n)))}}},zx={kernelName:$c,gradFunc:e=>({x:()=>qg(e)})},Bx=xd({cos_:function(e){const t={x:bd(e,"x","cos")};return ud.runKernel(zl,t)}}),Px={kernelName:kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(Bx(ep(n,"float32")),e)}}},Wx=xd({cosh_:function(e){const t={x:bd(e,"x","cosh")};return ud.runKernel(Bl,t)}}),Vx={kernelName:Ic,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(Wx(ep(n,"float32")),e)}}},Ux={kernelName:wc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Ip(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>bg(e,u)}}},Gx={kernelName:Rc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Hf(e,r);return{logits:()=>jf(a,Hf(qf(a,[s],!0),r))}}},Hx={kernelName:Cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,Eg(n))}}},jx=xd({batchToSpaceND_:function(e,t,n){const r=bd(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));xo(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),xo(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),xo(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return ud.runKernel($l,a,i)}}),qx={kernelName:Tc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>jx(e,r,s)}}},Kx={kernelName:Ac,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>cf(e,r)}}},Xx=[Yb,Zb,Jb,Qb,ey,ty,ny,ry,sy,ay,iy,oy,uy,hy,dy,fy,gy,my,by,yy,xy,vy,ky,wy,$y,Cy,Ey,Ay,Ry,_y,$x,Fy,Dy,My,Oy,Ly,By,zy,Wy,Uy,jy,qy,Ky,Xy,Yy,Zy,Jy,Qy,ex,nx,sx,sx,ix,lx,cx,hx,dx,px,fx,gx,mx,bx,yx,xx,vx,wx,wx,kx,Ix,Nx,Cx,Sx,Ex,Tx,Ax,Rx,_x,Fx,Mx,Ox,Lx,zx,Px,Vx,Ux,Gx,Hx,qx,qx,Kx,Kx,{kernelName:Sc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,Hf(Lg(ep(n,"float32")),2))}}},{kernelName:Lc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Mp(2);return{a:()=>Hf(e,Hf(s,jf(n,r))),b:()=>Hf(e,Hf(s,jf(r,n)))}}},{kernelName:zc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(e,Hf(ep(n,"float32"),2))}}},{kernelName:eh,gradFunc:e=>({x:()=>qg(e)})},{kernelName:Uc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Af(n.shape,r.shape);return{a:()=>{let t=e;const r=Tf(n.shape,s);return r.length>0&&(t=qf(t,r)),tf(t,n.shape)},b:()=>{let t=e;const n=Tf(r.shape,s);return n.length>0&&(t=qf(t,n)),tf(pg(t),r.shape)}}}},{kernelName:Ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;Ao(a,r.shape).forEach((e=>{s[e]=1}));const i=tf(e,s),o=Hf(i,tg(r.shape,"float32"));return{x:()=>o}}},{kernelName:Gc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>$f(e,hg(Bx(n)))}}},{kernelName:Hc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hf(jf(Mp(1),hg(n)),e)}}},{kernelName:jc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=qg(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=zp(t,Tg(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=zp(t,Tg(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=zp(t,Tg(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=zp(t,Tg(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Xc,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=ug(s);return{x:()=>Kg(e,a)}}},{kernelName:Zc,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Bg(e,s)}}},{kernelName:Jc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Jf(t,qg(t)),r=Lf(e,n);let s=Bf(t,Mp(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=_f(s,e+1);s=Xf(s,tg(r.shape,"bool"));const i=qg(r);return jg(s,r,i)}(e,n)}}},{kernelName:Qc,gradFunc:e=>({x:()=>qg(e)})}];for(const e of Xx)hh(e);Hh().prototype.abs=function(){return this.throwIfDisposed(),Lp(this)};const Yx=xd({acos_:function(e){const t={x:bd(e,"x","acos")};return ud.runKernel(il,t)}});Hh().prototype.acos=function(){return this.throwIfDisposed(),Yx(this)};const Zx=xd({acosh_:function(e){const t={x:bd(e,"x","acosh")};return ud.runKernel(ol,t)}});Hh().prototype.acosh=function(){return this.throwIfDisposed(),Zx(this)},Hh().prototype.add=function(e){return this.throwIfDisposed(),zp(this,e)},Hh().prototype.all=function(e,t){return this.throwIfDisposed(),Bp(this,e,t)},Hh().prototype.any=function(e,t){return this.throwIfDisposed(),Pp(this,e,t)},Hh().prototype.argMax=function(e){return this.throwIfDisposed(),Wp(this,e)};const Jx=xd({argMin_:function(e,t=0){const n={x:bd(e,"x","argMin")},r={axis:t};return ud.runKernel(pl,n,r)}});Hh().prototype.argMin=function(e){return this.throwIfDisposed(),Jx(this,e)},Hh().prototype.asScalar=function(){return this.throwIfDisposed(),xo(1===this.size,(()=>"The array must have only 1 element.")),tf(this,[])},Hh().prototype.asType=function(e){return this.throwIfDisposed(),ep(this,e)},Hh().prototype.as1D=function(){return this.throwIfDisposed(),tf(this,[this.size])},Hh().prototype.as2D=function(e,t){return this.throwIfDisposed(),tf(this,[e,t])},Hh().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),tf(this,[e,t,n])},Hh().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),tf(this,[e,t,n,r])},Hh().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),tf(this,[e,t,n,r,s])};const Qx=xd({asin_:function(e){const t={x:bd(e,"x","asin")};return ud.runKernel(fl,t)}});Hh().prototype.asin=function(){return this.throwIfDisposed(),Qx(this)};const ev=xd({asinh_:function(e){const t={x:bd(e,"x","asinh")};return ud.runKernel(gl,t)}});Hh().prototype.asinh=function(){return this.throwIfDisposed(),ev(this)};const tv=xd({atan_:function(e){const t={x:bd(e,"x","atan")};return ud.runKernel(ml,t)}});Hh().prototype.atan=function(){return this.throwIfDisposed(),tv(this)};const nv=xd({atan2_:function(e,t){let n=bd(e,"a","atan2"),r=bd(t,"b","atan2");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(yl,s)}});Hh().prototype.atan2=function(e){return this.throwIfDisposed(),nv(this,e)};const rv=xd({atanh_:function(e){const t={x:bd(e,"x","atanh")};return ud.runKernel(bl,t)}});Hh().prototype.atanh=function(){return this.throwIfDisposed(),rv(this)},Hh().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),nf(this,e,t,n,r)},Hh().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),jx(this,e,t)},Hh().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),sf(this,e,t,n,r,s)},Hh().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Hg(this,e)},Hh().prototype.cast=function(e){return this.throwIfDisposed(),ep(this,e)};const sv=xd({ceil_:function(e){const t={x:bd(e,"x","ceil")};return ud.runKernel(Sl,t)}});Hh().prototype.ceil=function(){return this.throwIfDisposed(),sv(this)},Hh().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),uf(this,e,t)},Hh().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Gh&&(e=[e]),cf([this,...e],t)},Hh().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),mf(this,e,t,n,r,s,a)},Hh().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),yf(this,e,t,n,r,s)},Hh().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),gf(this,e,t,n,r,s,a)},Hh().prototype.cos=function(){return this.throwIfDisposed(),Bx(this)},Hh().prototype.cosh=function(){return this.throwIfDisposed(),Wx(this)},Hh().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ty(this,e,t,n)};const av=xd({depthToSpace_:function(e,t,n="NHWC"){const r=bd(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];xo(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),xo(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),xo(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return ud.runKernel(Ul,o,l)}});Hh().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),av(this,e,t)},Hh().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),kf(this,e,t,n,r,s,a)};const iv=xd({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=bd(e,"x","dilation2d"),o=bd(t,"filter","dilation2d");xo(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),xo(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),xo("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=tf(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=ud.runKernel(Kl,c,h);return u?tf(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Hh().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),iv(this,e,t,n,r,s)};const ov=xd({divNoNan_:function(e,t){let n=bd(e,"a","div"),r=bd(t,"b","div");[n,r]=td(n,r);const s=$f(n,r),a=qg(s),i=Rf(r,a);return jg(i,a,s)}});Hh().prototype.divNoNan=function(e){return this.throwIfDisposed(),ov(this,e)},Hh().prototype.div=function(e){return this.throwIfDisposed(),$f(this,e)},Hh().prototype.dot=function(e){return this.throwIfDisposed(),Cf(this,e)},Hh().prototype.elu=function(){return this.throwIfDisposed(),Sf(this)},Hh().prototype.equal=function(e){return this.throwIfDisposed(),Rf(this,e)};const lv=xd({erf_:function(e){let t=bd(e,"x","erf");xo("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ep(t,"float32"));const n={x:t};return ud.runKernel(tu,n)}});Hh().prototype.erf=function(){return this.throwIfDisposed(),lv(this)},Hh().prototype.exp=function(){return this.throwIfDisposed(),Uf(this)},Hh().prototype.expandDims=function(e){return this.throwIfDisposed(),_f(this,e)};const uv=xd({expm1_:function(e){const t={x:bd(e,"x","expm1")};return ud.runKernel(au,t)}});Hh().prototype.expm1=function(){return this.throwIfDisposed(),uv(this)},Hh().prototype.fft=function(){return this.throwIfDisposed(),Jg(this)},Hh().prototype.flatten=function(){return this.throwIfDisposed(),tf(this,[this.size])},Hh().prototype.floor=function(){return this.throwIfDisposed(),Of(this)},Hh().prototype.floorDiv=function(e){return this.throwIfDisposed(),If(this,e)},Hh().prototype.gather=function(e,t){return this.throwIfDisposed(),Lf(this,e,t)},Hh().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Bf(this,e)},Hh().prototype.greater=function(e){return this.throwIfDisposed(),zf(this,e)},Hh().prototype.ifft=function(){return this.throwIfDisposed(),em(this)},Hh().prototype.irfft=function(){return this.throwIfDisposed(),tm(this)};const cv=xd({isFinite_:function(e){const t={x:bd(e,"x","isFinite")};return ud.runKernel(xu,t)}});Hh().prototype.isFinite=function(){return this.throwIfDisposed(),cv(this)};const hv=xd({isInf_:function(e){const t={x:bd(e,"x","isInf")};return ud.runKernel(vu,t)}});Hh().prototype.isInf=function(){return this.throwIfDisposed(),hv(this)};const dv=xd({isNaN_:function(e){const t={x:bd(e,"x","isNaN")};return ud.runKernel(wu,t)}});Hh().prototype.isNaN=function(){return this.throwIfDisposed(),dv(this)},Hh().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Pf(this,e)},Hh().prototype.lessEqual=function(e){return this.throwIfDisposed(),Am(this,e)},Hh().prototype.less=function(e){return this.throwIfDisposed(),ax(this,e)};const pv=xd({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=bd(e,"x","localResponseNormalization");xo(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),xo(No(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=tf(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=ud.runKernel(Ru,l,u);return o?tf(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Hh().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),pv(this,e,t,n,r)};const fv=xd({logSigmoid_:function(e){const t=bd(e,"x","logSigmoid");return Dp((e=>({value:pg(Mg(pg(e))),gradFunc:t=>Hf(t,Eg(pg(e)))})))(t)}});Hh().prototype.logSigmoid=function(){return this.throwIfDisposed(),fv(this)},Hh().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Kf(this,e)},Hh().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Hm(this,e,t)},Hh().prototype.log=function(){return this.throwIfDisposed(),Vf(this)},Hh().prototype.log1p=function(){return this.throwIfDisposed(),Gm(this)},Hh().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Xf(this,e)},Hh().prototype.logicalNot=function(){return this.throwIfDisposed(),Dx(this)};const gv=xd({logicalOr_:function(e,t){const n=bd(e,"a","logicalOr","bool"),r=bd(t,"b","logicalOr","bool");Af(n.shape,r.shape);const s={a:n,b:r};return ud.runKernel(Au,s)}});Hh().prototype.logicalOr=function(e){return this.throwIfDisposed(),gv(this,e)};const mv=xd({logicalXor_:function(e,t){const n=bd(e,"a","logicalXor","bool"),r=bd(t,"b","logicalXor","bool");return Af(n.shape,r.shape),Xf(gv(e,t),Dx(Xf(e,t)))}});Hh().prototype.logicalXor=function(e){return this.throwIfDisposed(),mv(this,e)},Hh().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Nf(this,e,t,n)},Hh().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Yf(this,e,t,n,r)},Hh().prototype.max=function(e,t){return this.throwIfDisposed(),Gf(this,e,t)},Hh().prototype.maximum=function(e){return this.throwIfDisposed(),Jf(this,e)},Hh().prototype.mean=function(e,t){return this.throwIfDisposed(),Qf(this,e,t)},Hh().prototype.min=function(e,t){return this.throwIfDisposed(),Dm(this,e,t)},Hh().prototype.minimum=function(e){return this.throwIfDisposed(),ng(this,e)};const bv=xd({mirrorPad_:function(e,t,n){xo("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=bd(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");xo(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)xo(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),xo(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return ud.runKernel(Uu,i,a)}});Hh().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),bv(this,e,t)};const yv=xd({mod_:function(e,t){let n=bd(e,"a","mod"),r=bd(t,"b","mod");[n,r]=td(n,r);const s={a:n,b:r};return ud.runKernel(Gu,s)}});Hh().prototype.mod=function(e){return this.throwIfDisposed(),yv(this,e)},Hh().prototype.mul=function(e){return this.throwIfDisposed(),Hf(this,e)},Hh().prototype.neg=function(){return this.throwIfDisposed(),pg(this)},Hh().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Lm(this,e,t,n)},Hh().prototype.notEqual=function(e){return this.throwIfDisposed(),fg(this,e)},Hh().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),gg(this,e,t,n)},Hh().prototype.onesLike=function(){return this.throwIfDisposed(),mg(this)},Hh().prototype.pad=function(e,t){return this.throwIfDisposed(),bg(this,e,t)};const xv=xd({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=bd(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=tf(i,[1,i.shape[0],i.shape[1],i.shape[2]])),xo(Qp(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=Up(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?o:py(o,c,p),b=("avg"===n?()=>nf(m,t,a,g):()=>Yf(m,t,a,g))(),y=d?b:jx(b,c,f);return l?tf(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});Hh().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),xv(this,e,t,n,r,s)},Hh().prototype.pow=function(e){return this.throwIfDisposed(),Mm(this,e)},Hh().prototype.prelu=function(e){return this.throwIfDisposed(),yg(this,e)};const vv=xd({prod_:function(e,t=null,n=!1){let r=bd(e,"x","prod");"bool"===r.dtype&&(r=ep(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return ud.runKernel(sc,s,a)}});Hh().prototype.prod=function(e,t){return this.throwIfDisposed(),vv(this,e,t)};const wv=xd({reciprocal_:function(e){const t={x:bd(e,"x","reciprocal")};return ud.runKernel(oc,t)}});Hh().prototype.reciprocal=function(){return this.throwIfDisposed(),wv(this)},Hh().prototype.relu=function(){return this.throwIfDisposed(),$g(this)},Hh().prototype.relu6=function(){return this.throwIfDisposed(),rm(this)},Hh().prototype.reshapeAs=function(e){return this.throwIfDisposed(),tf(this,e.shape)},Hh().prototype.reshape=function(e){return this.throwIfDisposed(),tf(this,e)},Hh().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Sm(this,e,t,n)},Hh().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Em(this,e,t,n)},Hh().prototype.reverse=function(e){return this.throwIfDisposed(),Ng(this,e)},Hh().prototype.rfft=function(){return this.throwIfDisposed(),Qg(this)},Hh().prototype.round=function(){return this.throwIfDisposed(),Rm(this)},Hh().prototype.rsqrt=function(){return this.throwIfDisposed(),Py(this)},Hh().prototype.selu=function(){return this.throwIfDisposed(),Cg(this)},Hh().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Sg(this,e,t,n,r,s,a)},Hh().prototype.sigmoid=function(){return this.throwIfDisposed(),Eg(this)};const kv=xd({sign_:function(e){const t={x:bd(e,"x","sign")};return ud.runKernel($c,t)}});Hh().prototype.sign=function(){return this.throwIfDisposed(),kv(this)},Hh().prototype.sin=function(){return this.throwIfDisposed(),Ny(this)},Hh().prototype.sinh=function(){return this.throwIfDisposed(),Sy(this)},Hh().prototype.slice=function(e,t){return this.throwIfDisposed(),Tg(this,e,t)},Hh().prototype.softmax=function(e){return this.throwIfDisposed(),Dg(this,e)},Hh().prototype.softplus=function(){return this.throwIfDisposed(),Mg(this)},Hh().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),py(this,e,t)},Hh().prototype.split=function(e,t){return this.throwIfDisposed(),Og(this,e,t)},Hh().prototype.sqrt=function(){return this.throwIfDisposed(),Lg(this)},Hh().prototype.square=function(){return this.throwIfDisposed(),hg(this)},Hh().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Um(this,e)},Hh().prototype.squeeze=function(e){return this.throwIfDisposed(),zg(this,e)},Hh().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Gh?[this,e]:[this,...e];return Bg(n,t)},Hh().prototype.step=function(e){return this.throwIfDisposed(),sm(this,e)};const Iv=xd({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:bd(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ud.runKernel(Bc,u,c)}});Hh().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Iv(this,e,t,n,r,s,a,i,o)},Hh().prototype.sub=function(e){return this.throwIfDisposed(),jf(this,e)},Hh().prototype.sum=function(e,t){return this.throwIfDisposed(),qf(this,e,t)};const $v=xd({tan_:function(e){const t={x:bd(e,"x","tan")};return ud.runKernel(Gc,t)}});Hh().prototype.tan=function(){return this.throwIfDisposed(),$v(this)},Hh().prototype.tanh=function(){return this.throwIfDisposed(),Pg(this)},Hh().prototype.tile=function(e){return this.throwIfDisposed(),Ff(this,e)},Hh().prototype.toBool=function(){return this.throwIfDisposed(),ep(this,"bool")},Hh().prototype.toFloat=function(){return this.throwIfDisposed(),ep(this,"float32")},Hh().prototype.toInt=function(){return this.throwIfDisposed(),ep(this,"int32")};const Nv=xd({topk_:function(e,t=1,n=!0){const r=bd(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=ud.runKernel(qc,a,i);return{values:o,indices:l}}});Hh().prototype.topk=function(e,t){return this.throwIfDisposed(),Nv(this,e,t)},Hh().prototype.transpose=function(e){return this.throwIfDisposed(),Kg(this,e)};const Cv=xd({unique_:function(e,t=0){const n=bd(e,"x","unique","string_or_numeric");xo(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=ud.runKernel(Yc,r,s);return{values:a,indices:i}}});let Sv;function Ev(){return null==Sv&&(Sv=ud.backend.epsilon()),Sv}Hh().prototype.unique=function(e){return this.throwIfDisposed(),Cv(this,e)},Hh().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Vy(this,e,t)},Hh().prototype.unstack=function(e){return this.throwIfDisposed(),Ug(this,e)},Hh().prototype.where=function(e,t){return this.throwIfDisposed(),jg(e,this,t)},Hh().prototype.zerosLike=function(){return this.throwIfDisposed(),qg(this)};class Tv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tv.prototype)}}class Av extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Av.prototype)}}class Rv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rv.prototype)}}class _v extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_v.prototype)}}class Fv extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Fv.prototype)}}function Dv(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Mv(e,t){if(!e)throw new Fv(t)}function Ov(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Lv(e){return 1===e.length?e[0]:e}function zv(e){return Array.isArray(e)?e:[e]}function Bv(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Pv(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Wv={};function Vv(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Uv(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Uv(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Uv(t):e[n]=t.value)}}}function Gv(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Wv)a=Wv[s];else if(a=t[s],null==a)throw new Rv(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Rv(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Wv?[o,l]=Wv.className:i in t&&([o,l]=t[i]),null==o)throw new Rv(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Wv))e[t]=Wv[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Wv);for(const e of Object.keys(n))Wv[e]=n[e];Uv(a.config);const r=l(o,a.config,n,s);return Wv=Object.assign({},t),r}{const e=Object.assign({},Wv);for(const e of Object.keys(n))Wv[e]=n[e];const t=new o(a.config);return Wv=Object.assign({},e),t}}}function Hv(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function jv(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function qv(e){if(null==e)throw new Rv(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Kv(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Rv(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Xv(e,t,n=0,r=1/0){return Mv(n>=0),Mv(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Yv(e,t){Array.isArray(e)?(xo(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Yv(e,`element ${n+1} of ${t}`)))):xo(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Zv(e)}.`))}function Zv(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Zv(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Jv(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Qv(e,t){return Ap((()=>Lg(qf(Hf(e,e),t,!0))))}class ew extends Np{getConfig(){return{}}}class tw extends ew{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ap((()=>{const t=Qv(e,this.axis),n=uf(t,0,this.maxValue);return Hf(e,$f(n,zp(Ev(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}tw.className="MaxNorm",Sp(tw);class nw extends ew{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ap((()=>$f(e,zp(Ev(),Qv(e,this.axis)))))}getConfig(){return{axis:this.axis}}}nw.className="UnitNorm",Sp(nw);class rw extends ew{apply(e){return $g(e)}}rw.className="NonNeg",Sp(rw);class sw extends ew{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ap((()=>{const t=Qv(e,this.axis),n=zp(Hf(this.rate,uf(t,this.minValue,this.maxValue)),Hf(1-this.rate,t));return Hf(e,$f(n,zp(Ev(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}sw.className="MinMaxNorm",Sp(sw);const aw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function iw(e){return Vv(e)}function ow(e,t={}){return Gv(e,Cp.getMap().classNameMap,t,"constraint")}function lw(e){return null==e?null:"string"==typeof e?ow({className:e in aw?aw[e]:e,config:{}}):e instanceof ew?e:ow(e)}const uw=["channelsFirst","channelsLast"],cw=["nearest","bilinear"],hw=["valid","same","causal"],dw=["max","avg"],pw=["sum","mul","concat","ave"],fw=new Map;function gw(e){Kv(uw,"DataFormat",e)}function mw(e){Kv(hw,"PaddingMode",e)}function bw(e){Kv(dw,"PoolMode",e)}const yw=[];function xw(e,t){yw.push(e);try{const e=t();return yw.pop(),e}catch(e){throw yw.pop(),e}}function vw(e){if(!Iw(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===yw.length?"":yw.join("/")+"/")+e}function ww(e){if(!Iw(e))throw new Error("Not a valid tensor name: '"+e+"'");fw.has(e)||fw.set(e,0);const t=fw.get(e);if(fw.set(e,fw.get(e)+1),t>0){const n=`${e}_${t}`;return fw.set(n,1),n}return e}const kw=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Iw(e){return!!e.match(kw)}function $w(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Nw(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Cw(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Sw(e,t){if(t<e)throw new Rv(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ew(e,t){return e.asType(t)}function Tw(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Aw(e,t,n){return Ap((()=>{switch(e.rank){case 1:return Ag(e,t,n);case 2:return Rg(e,[t,0],[n,e.shape[1]]);case 3:return _g(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Fg(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Tg(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Tg(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Rv(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Rw(e,t,n){return Ap((()=>{switch(e.rank){case 1:return Ag(e,t,n);case 2:return Rg(e,[0,t],[e.shape[0],n]);case 3:return _g(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Fg(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Rv(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function _w(e,t,n,r){return Ap((()=>{switch(e.rank){case 1:return Ag(e,t,n);case 2:switch(r){case 1:return Aw(e,t,n);case 2:return Rw(e,t,n);default:throw new Rv(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Aw(e,t,n);case 2:return _g(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Rw(e,t,n);default:throw new Rv(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Aw(e,t,n);case 2:return Fg(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Fg(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Rw(e,t,n);default:throw new Rv(`The axis is not within the rank of the tensor ${r}`)}default:throw new Rv(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Fw(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),cf(e,t)}function Dw(e,t){switch(e.rank){case 1:return hf([e,t]);case 2:return df([e,t],0);case 3:return pf([e,t],0);case 4:return ff([e,t],0);default:throw new Rv(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Mw(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Rv(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ff(e,t)}function Ow(e,t=0,n=1,r,s){return kg(e,t,n,r,s)}function Lw(e,t,n,r){if(e.rank<2||t.rank<2)throw new _v(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new _v(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return dm({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Pw(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return dm({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Pw(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function zw(e,t,n){return Ap((()=>(t=Array.isArray(t)?Wg(t,"int32"):t.toInt(),Lf(e,t,n))))}function Bw(e){return Hf(e,e)}function Pw(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Rv(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new Rv(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ww(e,t,n){return Ap((()=>(null==n&&(n="channelsLast"),gw(n),e.add(Pw(e.rank,t,n)))))}function Vw(e,t,n,r){return Ap((()=>Xg(e,t,n,r)))}function Uw(e,t,n=!1){return n?e():t()}const Gw=["fanIn","fanOut","fanAvg"],Hw=["normal","uniform","truncatedNormal"];class jw extends Np{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qw extends jw{apply(e,t){return eg(e,t)}}qw.className="Zeros",Sp(qw);class Kw extends jw{apply(e,t){return tg(e,t)}}Kw.className="Ones",Sp(Kw);class Xw extends jw{constructor(e){if(super(),"object"!=typeof e)throw new Rv(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Rv(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ap((()=>Hf(Mp(this.value),tg(e,t))))}getConfig(){return{value:this.value}}}Xw.className="Constant",Sp(Xw);class Yw extends jw{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ig(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Yw.className="RandomUniform",Sp(Yw);class Zw extends jw{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _v(`randomNormal does not support dType ${t}.`);return Ow(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zw.className="RandomNormal",Sp(Zw);class Jw extends jw{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _v(`truncatedNormal does not support dType ${t}.`);return Vg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Jw.className="TruncatedNormal",Sp(Jw);class Qw extends jw{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ap((()=>{if(2!==e.length||e[0]!==e[1])throw new Rv("Identity matrix initializer can only be used for 2D square matrices.");return Hf(this.gain,Df(e[0]))}))}getConfig(){return{gain:this.gain}}}Qw.className="Identity",Sp(Qw);class ek extends jw{constructor(e){if(super(),e.scale<0)throw new Rv(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){Kv(Gw,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Kv(Hw,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(gw(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=$w(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=$w(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=$w(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _v(`${this.getClassName()} does not support dType ${t}.`);return Vg(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Ig(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ek.className="VarianceScaling",Sp(ek);class tk extends ek{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ek.className}}tk.className="GlorotUniform",Sp(tk);class nk extends ek{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ek.className}}nk.className="GlorotNormal",Sp(nk);class rk extends ek{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ek.className}}rk.className="HeNormal",Sp(rk);class sk extends ek{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ek.className}}sk.className="HeUniform",Sp(sk);class ak extends ek{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ek.className}}ak.className="LeCunNormal",Sp(ak);class ik extends ek{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ek.className}}ik.className="LeCunNormal",Sp(ik);class ok extends jw{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new _v("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Ap((()=>{if(e.length<2)throw new _v("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Ow(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=jm.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Hf(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ok.className="Orthogonal",Sp(ok);const lk={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function uk(e,t={}){return Gv(e,Cp.getMap().classNameMap,t,"initializer")}function ck(e){return Vv(e)}function hk(e){if("string"==typeof e){const t=e in lk?lk[e]:e;if("GlorotNormal"===t)return new nk;if("GlorotUniform"===t)return new tk;if("HeNormal"===t)return new rk;if("HeUniform"===t)return new sk;if("LeCunNormal"===t)return new ak;if("LeCunUniform"===t)return new ik;{const e={};return e.className=t,e.config={},uk(e)}}return e instanceof jw?e:uk(e)}let dk=0;function pk(){return dk++}const fk={};function gk(e=""){return e in fk||(fk[e]=0),fk[e]+=1,e+fk[e].toString()}function mk(e){return Array.isArray(e)&&Array.isArray(e[0])}function bk(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function yk(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Rv(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function xk(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Rv(`Expected exactly 1 Shape; got ${e.length}`)}return e}function vk(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class wk{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=pk(),n=null==n?"Variable":n,this.originalName=vw(n),this.name=ww(this.originalName),this.trainable_=r,this.constraint=s,this.val=Gg(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function kk(e){return e.map((e=>e.read()))}function Ik(e){e.forEach((e=>{e[0].write(e[1])}))}class $k{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Nk{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=pk(),null!=a&&(this.originalName=vw(a),this.name=ww(this.originalName)),this.rank=t.length}}let Ck=0;class Sk{constructor(e,t){this.callArgs=t,this.id=Ck++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ek=0;class Tk extends Np{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ek++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Bv(e)+"_"+gk(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Av(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Rv(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Lv(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Lv(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Tv(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Tv(`Layer ${this.name} is not connected, no input to return.`);return Lv(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Tv(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Tv(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Lv(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=zv(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=zv(this.inputSpec);if(e.length!==t.length)throw new Rv(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Rv(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Rv(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Rv(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Rv(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Rv(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Rv(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=zv(e);let r=!0;for(const e of n)if(!(e instanceof Nk)){r=!1;break}let s=!0;for(const e of n)if(e instanceof Nk){s=!1;break}if(r===s)throw new Rv("Arguments to apply() must be all SymbolicTensors or all Tensors");return xw(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of zv(e))t.push(n.shape);this.build(Lv(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=zv(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Lv(a),null!=this.activityRegularizer)throw new _v("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=zv(e);const t=[];for(const n of e)t.push(n.shape);return Lv(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Nk(a,n,this,zv(e),t,this.name,r))):new Nk(a,r,this,zv(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new _v("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Tv(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Tv(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Av(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return vk(this.weights)}build(e){this.built=!0}getWeights(e=!1){return kk(e?this.trainableWeights:this.weights)}setWeights(e){Ap((()=>{const t=this.weights;if(t.length!==e.length)throw new Rv(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=kk(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!$o(a.shape,o.shape))throw new Rv(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ik(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Rv(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=hk("zeros"));const o=r.apply(t,n),l=new wk(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=zv(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=zv(e);t=zv(t),n=zv(n),r=zv(r),s=bk(s),a=bk(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Sk({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ak(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ak(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Rk extends Tk{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:gk("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Rv("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Rv("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Rv("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Nk(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Sk({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Rv(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function _k(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Rp(r)}}function Fk(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Dk;Rk.className="InputLayer",Sp(Rk),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Dk||(Dk={}));class Mk{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ok{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Lk extends Mk{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Ap((()=>zp(this.totals[e],Hf(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Ap((()=>{const n=Hf($f(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),_p(t[e])})))}}class zk extends Mk{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Bk extends Mk{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");zo(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Th();return(...s)=>{const a=Th();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await _k(n),r.push(this.yield(e,t,n))),r.push(rb()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await _k(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await _k(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(rb()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await _k(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await _k(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(rb()):zo(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await _k(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await _k(e),await this.trainEnd(e))}}function Pk(e,t){return null==e&&(e={}),e instanceof Mk?[e]:Array.isArray(e)&&e[0]instanceof Mk?e:zv(e).map((e=>new Bk(e,t)))}class Wk{constructor(){}static registerCallbackConstructor(e,t){xo(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Wk.checkForDuplicate(t),null==Wk.constructors[e]&&(Wk.constructors[e]=[]),Wk.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Wk.constructors)Wk.constructors[+t].forEach((t=>{if(t===e)throw new Rv("Duplicate callback constructor.")}))}static clear(){Wk.constructors={}}static createCallbacks(e){const t=[];for(const n in Wk.constructors){const r=+n;e>=r&&t.push(...Wk.constructors[r])}return t.map((e=>new e))}}function Vk(e,t,n,r,s,a,i,o,l){const u=new zk,c=[new Lk,...Wk.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Ok(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Uk(e,t={},n=!1){return Gv(e,Cp.getMap().classNameMap,t,"layer",n)}function Gk(e,t){return Ap((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=qf(Bw(e),t,!0),r=Mf(n.shape,Ev()),s=Lg(Jf(n,r));return $f(e,s)}))}function Hk(e,t){return Ap((()=>Qf(Bw(jf(t,e)),-1)))}function jk(e,t){return Ap((()=>Qf(Lp(jf(t,e)),-1)))}function qk(e,t){return Ap((()=>{const n=jf(e,t),r=uf(Lp(e),Ev(),Number.MAX_VALUE),s=Lp($f(n,r));return Hf(100,Qf(s,-1))}))}function Kk(e,t,n=!1){return Ap((()=>{if(n)t=Dg(t);else{const e=qf(t,t.shape.length-1,!0);t=$f(t,e)}return t=uf(t,Ev(),1-Ev()),pg(qf(Hf(e.toFloat(),Vf(t)),t.shape.length-1))}))}function Xk(e,t,n=!1){return Ap((()=>{const r=Of(function(e){const t=[$w(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=uf(t,Ev(),1-Ev())).shape;return Kk(gg(r,s[s.length-1]).reshape(s),t,n)}))}function Yk(e,t){return Ap((()=>{let n;return n=uf(t,Ev(),1-Ev()),n=Vf($f(n,jf(1,n))),Qf(function(e,t){if(!$o(e.shape,t.shape))throw new Rv(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ap((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Zk(e,t){return Ap((()=>{const n=Gk(e,-1),r=Gk(t,-1),s=Hf(n,r);return pg(qf(s,-1))}))}Wk.constructors={};const Jk={meanSquaredError:Hk,meanAbsoluteError:jk,meanAbsolutePercentageError:qk,meanSquaredLogarithmicError:function(e,t){return Ap((()=>{const n=uf(t,Ev(),Number.MAX_VALUE),r=Vf(zp(1,n)),s=uf(e,Ev(),Number.MAX_VALUE),a=Vf(zp(1,s));return Qf(Bw(jf(r,a)),-1)}))},squaredHinge:function(e,t){return Ap((()=>{const n=Jf(0,jf(1,Hf(e,t)));return Qf(Bw(n),-1)}))},hinge:function(e,t){return Ap((()=>{const n=Jf(0,jf(1,Hf(e,t)));return Qf(n,-1)}))},categoricalHinge:function(e,t){return Ap((()=>{const n=qf(Hf(e,t),-1),r=Gf(Hf(jf(1,e),t),-1);return Jf(0,zp(1,jf(r,n)))}))},logcosh:function(e,t){return Ap((()=>{const n=Math.log(2),r=jf(t,e),s=jf(zp(r,Mg(Hf(-2,r))),n);return Qf(s,-1)}))},categoricalCrossentropy:Kk,sparseCategoricalCrossentropy:Xk,binaryCrossentropy:Yk,kullbackLeiblerDivergence:function(e,t){return Ap((()=>{const n=uf(e,Ev(),1),r=uf(t,Ev(),1);return qf(Hf(e,Vf($f(n,r))),-1)}))},poisson:function(e,t){return Ap((()=>{const n=Vf(zp(Ev(),t));return Qf(jf(t,Hf(e,n)),-1)}))},cosineProximity:Zk};function Qk(e){if("string"==typeof e){if(e in Jk)return Jk[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Rv(t)}return e}function eI(e,t){return Ap((()=>{const n=Hf(.5,mg(t)),r=Ew(zf(t,n),e.dtype);return Qf(Rf(e,r),-1)}))}function tI(e,t){return Ap((()=>Ew(Rf(Wp(e,-1),Wp(t,-1)),"float32")))}function nI(e,t){return Yk(e,t)}function rI(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),Rf(e,t).asType("float32")}const sI=Kk,aI=Xk,iI={binaryAccuracy:eI,categoricalAccuracy:tI,precision:function(e,t){return Ap((()=>{const n=function(e,t){return Ap((()=>Xf(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return Ap((()=>Xf(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return jg(zf(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:sI,sparseCategoricalCrossentropy:aI,mse:Hk,MSE:Hk,mae:jk,MAE:jk,mape:qk,MAPE:qk,cosine:Zk};function oI(e){if("string"==typeof e&&e in iI)return iI[e];if("string"!=typeof e&&null!=e)return e;throw new Rv(`Unknown metric ${e}`)}function lI(e){if(Mv(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Jk))if(Jk[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(iI))if(iI[n]===e){t=n;break}return void 0!==t?t:e.name}}function uI(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!cI(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function cI(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!cI(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!cI(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function hI(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function dI(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}hI([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function pI(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];hI([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)hI(["","","",a[e]],t,r)}function fI(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function gI(e,t){if(null===e)return null;if("string"==typeof e)return Pv(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];fI(t,s,r)?n.push(r):n.push(gI(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Pv(n);t[e]=gI(r,e)}}return t}}function mI(e,t){if(null==e)return null;if("string"==typeof e)return Bv(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];fI(t,s,r)?n.push(r):n.push(mI(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Bv(n)]="name"!==n&&"className"!==n||"string"!=typeof r?mI(r,n):r}return t}}class bI{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bI)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Rv(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ep(t,e.dtype)}catch(n){throw new Rv(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Nk){if(null==this.id2Value[e.id])throw new Rv(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Rv(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Nk){if(null==this.id2Value[e.id])throw new Rv(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Rv(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Rp(this.id2Mask)}}const yI={},xI={};function vI(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==yI[c]){const e=function(e,t){xo(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=kI(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=kI(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:wI(r)}}(i,t);h=e.sorted,d=e.recipientCounts,yI[c]=h,xI[c]=d}h=yI[c],d={},s||Object.assign(d,xI[c]);const p=new bI(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Tp().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof Rk)continue;const u=[],c=[],f=[];let g=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=zv(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=II(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||Rp(f)}return p.disposeMasks(),a?l:l[0]}function wI(e){const t={};for(const n in e)t[n]=e[n].size;return t}function kI(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function II(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class $I extends Tk{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=gk(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],jv(this.inputs).length!==this.inputs.length)throw new Rv(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);jv(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Mv(0===n,"input layer has >1 nodes"),Mv(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Rk))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Av(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add($I.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Hv);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof $I&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Hv);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Av(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new Av(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new Sk({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Rv("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Rv(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Rv(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Rv(`${e.length} of ${r} weights are not set: ${e}`)}Ik(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.7.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=mI(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ap((()=>{e=zv(e);const n=new bI;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return vI(this.outputs,n,t)}))}computeMask(e,t){return Ap((()=>{let n;return e=zv(e),n=null==t?Dv(null,e.length):zv(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=bk(e);if(t.length!==this.inputLayers.length)throw new Rv(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Hv);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=bk(t.computeOutputShape(Lv(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Mv(t in n),s.push(n[t])}return Lv(s)}runInternalGraph(e,t){null==t&&(t=Dv(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Hv);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=zv(t.call(e,u)),l=zv(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=zv(t.call(r,u)),l=zv(t.computeMask(r,i));if(t.activityRegularizer)throw new _v("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Mv(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof $I?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=$I.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Rv(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Rv("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Rv(`No such layer: ${e}`)}calculateLosses(){return Ap((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=$I.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=$I.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[$I.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=$I.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=$I.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Lv(n),r)}function l(e){const n=e.name,a=Uk(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Rv(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!qv(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Mv(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Mv(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Rv("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ap((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function NI(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function CI(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ap((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Rp(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Wg(s,"float32")}return null}function SI(e,t){return Hf(e,t)}function EI(e,t){let n,r;const s=t;n=s.xs,r=s.ys,xo(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=TI("input",e.inputNames,n),i=TI("output",e.outputNames,r),o=a[0].shape[0];xo(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),xo(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)xo(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)xo(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function TI(e,t,n){if(n instanceof Gh)return[n];if(Array.isArray(n))return xo(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Rv(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function AI(e){return"function"==typeof e.iterator}function RI(e){xo(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function _I(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Aw(e,t,n-t))):Aw(e,t,n-t)}function FI(e,t){return Ap((()=>null==e?null:Array.isArray(e)?e.map((e=>FI(e,t))):zw(e,"int32"===t.dtype?t:t.toInt())))}function DI(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function MI(e){const t=[];e instanceof Gh&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Tw(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function OI(e,t){if(null==e)return;const n=[];if(t instanceof Gh)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Gh)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function LI(e){return Array.isArray(e)}function zI(e){return!function(e){return e instanceof Gh}(e)&&!LI(e)}function BI(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(LI(e)&&e.length>0)t=!0;else if(zI(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Rv(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(zI(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Rv(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(LI(e)){if((e=e).length!==t.length)throw new Rv(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Rv(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=MI(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Rv(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Rv(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function PI(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Rv(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Rv(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Rv(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Rv(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class WI extends $I{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Rv("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),hI(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?dI(o[e],n,r):pI(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?vk(e.collectedTrainableWeights):vk(e.trainableWeights),t}(e),u=vk(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>tb.adagrad(.01),Adadelta:()=>tb.adadelta(1,.95,Ev()),Adam:()=>tb.adam(.001,.9,.999,Ev()),Adamax:()=>tb.adamax(.002,.9,.999,Ev(),0),RMSProp:()=>tb.rmsprop(.001,.9,0,Ev()),SGD:()=>tb.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Rv(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Op))throw new Rv("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Rv(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Qk(e)))}else{const n=Qk(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Rv(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Qk(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xw("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};xw("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Yk?-1!==["accuracy","acc"].indexOf(i)?r=eI:-1!==["crossentropy","ce"].indexOf(i)&&(r=nI):this.lossFunctions[e]===Xk?-1!==["accuracy","acc"].indexOf(i)?r=rI:-1!==["crossentropy","ce"].indexOf(i)&&(r=aI):-1!==["accuracy","acc"].indexOf(i)?r=tI:-1!==["crossentropy","ce"].indexOf(i)&&(r=sI),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=oI(i);a=e,n=""+lI(i)}let t;xw(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;RI(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return Lv(this.testLoop(i,a,r,n.verbose,n.steps))}finally{OI(s[0],e),OI(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new _v("Verbose mode is not implemented yet.");xo(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Ap((()=>{if(t.value){const{xs:n,ys:r}=EI(e,t.value),i=n.concat(r),u=Ap((()=>s(i)));if(Rp(i),0===l)for(let e=0;e<u.length;++e)a.push(Mp(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Ap((()=>zp(a[e],Hf(c,t)))),l>0&&Rp(n)}Rp(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=$f(a[e],o),Rp(t)}return Lv(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Rv(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Rv(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Rv("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new bI;if(e instanceof Gh&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Rv(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Rv(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=vI(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Dv(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Rv(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ap((()=>{const r=this.checkNumSamples(e);if(n)throw new _v("Verbose predictLoop() is not implemented yet.");const s=DI(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Ap((()=>{const n=s[t][0],r=s[t][1],a=_I(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new bI(i);return vI(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Lv(a.map((e=>cf(e,0))))}))}predict(e,t={}){const n=MI(e);PI(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return RI(r),this.predictLoop(n,r)}finally{OI(n,e)}}predictOnBatch(e){PI(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Av("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Xk?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=jv(e.map((e=>e.shape[0])));r.sort();const s=jv(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Rv(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Rv(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!$o(r,s))throw new Rv(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=BI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=BI(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Hk,Yk,Kk];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Kk&&1===a.shape[a.shape.length-1])throw new Rv(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Rv(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Rv(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=NI(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await CI(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Ap((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new _v("Verbose mode is not implemented yet.");if(null!=s)throw new _v("steps mode in testLoop() is not implemented yet");{const r=DI(a,n),s=Wg(Sw(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=Aw(s,a,o-a),u=FI(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Mp(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=zp(i[e],Hf(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=$f(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Ov(e,r)>1&&(s+=`_${Ov(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new bI(e),o=vI(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=SI(n,s[e]));const a=Qf(n);t.push(a),l=0===e?n:zp(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Qf(t(r[s],o[s]))}_p(n),a.push(n)}return l=Qf(l),this.calculateLosses().forEach((e=>{l=zp(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Ap((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new bI(a),o=vI(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Qf(r(s[e],o[e]));n=0===e?a:zp(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Qf(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;RI(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);s=p[0],a=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new _v("validationData including sample weights is not supported yet."):new Rv(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=_I(s,e,t),s=_I(s,0,e),u=_I(a,e,t),a=_I(a,0,e),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let x,v;g?(e.makeTestFunction(),x=e.testFunction,v=y.slice().concat(y.map((e=>"val_"+e)))):(x=null,f=[],v=y.slice());const w=Pk(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,i,o,l,u,c,h,d,p,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=e.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=m&&(b=Sw(0,m)),null==i&&(i=1);const{callbackList:y,history:x}=Vk(o,i,a,d,m,p,s,g,h);y.setModel(e),e.history=x,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};{if("batch"===c)throw new _v("batch shuffling is not implemneted yet");c&&mo(b);const i=Wg(b),o=DI(m,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),Ap((()=>{const d=o[c][0],p=o[c][1],f=Aw(i,d,p-d);h.batch=c,h.size=p-d;const m=FI(n,f),b=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,_p(n)}if(c===o.length-1&&g){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];_p(s),a["val_"+n]=s}}})),await y.onBatchEnd(c,h),Fk(h),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,b,m,y,h,r.epochs,r.verbose,w,x,f,r.shuffle,v,r.initialEpoch,null)}finally{e.isTraining=!1,OI(s,t),OI(a,n),OI(l,i),OI(u,o),null!=c&&Rp(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(xo(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),xo(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),xo(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),xo(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),xo(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(AI(n.validationData))xo(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new _v("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Pk(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Vk(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=EI(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=NI(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await CI(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);Rp(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,_p(n)}await d.onBatchEnd(h,a),Fk(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=AI(n.validationData)?zv(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):zv(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Rp(a),Lv(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Tp().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Tp().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Bv(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Bv(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Bv(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Bv(lI(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Bv(lI(e))));{const e={};for(const t in this.metrics)e[t]=Bv(lI(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Uk(gI(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Pv(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Pv(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Pv(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Pv(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Pv(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Td.getSaveHandlers(n));if(0===t.length)throw new Rv(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Rv(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Rv("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Id(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.7.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Id(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Sd([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;uI(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){uI(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}WI.className="Model",Sp(WI);class VI extends WI{}VI.className="Functional",Sp(VI);class UI extends WI{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:gk("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Rv(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof UI||e instanceof WI;let n;if(t){if(n=e,1!==n.outputs.length)throw new Rv("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Rv("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Rv("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Rv("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Rk({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Rv(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Rv("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ak(this.outputs[0])}this.inboundNodes=[],new Sk({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Dv(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(xk(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new WI({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Av("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Av("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Av("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Av("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Rv("Legacy serialization format not supported yet.");s=t}else xo(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof UI))throw new _v(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Uk(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Rv("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Rv("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}UI.className="Sequential",Sp(UI);class GI extends Np{getConfig(){return{}}}class HI extends GI{apply(e,t=1){return function(e,t=1){if(1!==t)throw new _v(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Sf(e)}(e,t)}}HI.className="elu",Sp(HI);class jI extends GI{apply(e){return Cg(e)}}jI.className="selu",Sp(jI);class qI extends GI{apply(e){return $g(e)}}qI.className="relu",Sp(qI);class KI extends GI{apply(e){return Ap((()=>ng(6,$g(e))))}}KI.className="relu6",Sp(KI);class XI extends GI{apply(e){return e}}XI.className="linear",Sp(XI);class YI extends GI{apply(e){return Eg(e)}}YI.className="sigmoid",Sp(YI);class ZI extends GI{apply(e){return function(e){return Ap((()=>{const t=zp(.5,Hf(.2,e));return uf(t,0,1)}))}(e)}}ZI.className="hardSigmoid",Sp(ZI);class JI extends GI{apply(e){return Mg(e)}}JI.className="softplus",Sp(JI);class QI extends GI{apply(e){return function(e){return Ap((()=>$f(e,Lp(e).add(1))))}(e)}}QI.className="softsign",Sp(QI);class e$ extends GI{apply(e){return Pg(e)}}e$.className="tanh",Sp(e$);class t$ extends GI{apply(e,t=-1){return Dg(e,t)}}t$.className="softmax",Sp(t$);class n$ extends GI{apply(e,t=-1){return Kf(e,t)}}n$.className="logSoftmax",Sp(n$);class r$ extends GI{apply(e,t=1){return Ap((()=>Eg(e.mul(t)).mul(e)))}}r$.className="swish",Sp(r$);class s$ extends GI{apply(e){return Ap((()=>Hf(e,Pg(Mg(e)))))}}function a$(e){return e.getClassName()}function i$(e,t={}){return Gv(e,Cp.getMap().classNameMap,t,"activation")}function o$(e){if(null==e){return i$({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},i$(t)}return e instanceof GI?e:i$(e)}s$.className="mish",Sp(s$);class l$ extends Np{}class u$ extends l${constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ap((()=>{let t=eg([1]);return this.hasL1&&(t=zp(t,qf(Hf(this.l1,Lp(e))))),this.hasL2&&(t=zp(t,qf(Hf(this.l2,Bw(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}u$.className="L1L2",Sp(u$);const c$={l1l2:"L1L2"};function h$(e){return Vv(e)}function d$(e,t={}){return Gv(e,Cp.getMap().classNameMap,t,"regularizer")}function p$(e){return null==e?null:"string"==typeof e?d$({className:e in c$?c$[e]:e,config:{}}):e instanceof l$?e:d$(e)}class f$ extends Tk{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=yk(e);let n=$g(e);return null!=this.maxValue&&(n=uf(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}f$.className="ReLU",Sp(f$);class g$ extends Tk{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=yk(e);return Pf(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}g$.className="LeakyReLU",Sp(g$);class m$ extends Tk{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=hk(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=p$(e.alphaRegularizer),this.alphaConstraint=lw(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Rv(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=xk(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new $k({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=yk(e),yg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ck(this.alphaInitializer),alphaRegularizer:h$(this.alphaRegularizer),alphaConstraint:iw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}m$.className="PReLU",Sp(m$);class b$ extends Tk{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new _v(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=yk(e);return Sf(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}b$.className="ELU",Sp(b$);class y$ extends Tk{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=yk(e);return n.mul(Ew(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}y$.className="ThresholdedReLU",Sp(y$);class x$ extends Tk{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new t$).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=yk(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function v$(e,t,n){if("number"==typeof e)return Dv(e,t);if(e.length!==t)throw new Rv(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Rv(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function w$(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function k$(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Cw([n-t,0]);else{if("same"!==r)throw new Rv(`Unsupport padding mode: ${r}.`);e*=t}return e}function I$(e,t){return Ap((()=>(gw(t),"channelsFirst"===t?Kg(e,[0,2,3,1]):e)))}function $$(e,t){return Ap((()=>(gw(t),"channelsFirst"===t?Kg(e,[0,2,3,4,1]):e)))}function N$(e,t,n,r=[1,1],s="valid",a,i,o=null){return Ap((()=>{if(null==a&&(a="channelsLast"),gw(a),3!==e.rank&&4!==e.rank)throw new Rv(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Rv(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=I$(e,a);if("causal"===s)throw new _v("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=um({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Kg(l,[0,3,1,2])),l}))}x$.className="Softmax",Sp(x$);class C$ extends Tk{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",C$.verifyArgs(t),this.rank=e,Yv(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new _v(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=v$(t.kernelSize,e,"kernelSize"),this.strides=v$(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mw(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,gw(this.dataFormat),this.activation=o$(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=hk(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=lw(t.biasConstraint),this.biasRegularizer=p$(t.biasRegularizer),this.activityRegularizer=p$(t.activityRegularizer),this.dilationRate=v$(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Rv(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Rv(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Rv(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Mv("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xv(e.kernelSize,"number",1,3))throw new Rv(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:a$(this.activation),useBias:this.useBias,biasInitializer:ck(this.biasInitializer),biasRegularizer:h$(this.biasRegularizer),activityRegularizer:h$(this.activityRegularizer),biasConstraint:iw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class S$ extends C${constructor(e,t){super(e,t),this.kernel=null,S$.verifyArgs(t),this.filters=t.filters,Yv(this.filters,"filters"),this.kernelInitializer=hk(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=lw(t.kernelConstraint),this.kernelRegularizer=p$(t.kernelRegularizer)}build(e){e=xk(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rv(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ap((()=>{let t;e=yk(e);const n=null==this.bias?null:this.bias.read(),r=Jv(this.activation.getClassName());if(null!=r&&2===this.rank)t=N$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Ap((()=>{if(null==a&&(a="channelsLast"),gw(a),3!==e.shape.length)throw new Rv(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Rv(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Rv(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Kg(e,[0,2,1])),"causal"===s)throw new _v("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=mf(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Ww(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=N$(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new _v("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Ap((()=>{if(null==a&&(a="channelsLast"),gw(a),4!==e.rank&&5!==e.rank)throw new Rv(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Rv(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=$$(e,a);if("causal"===s)throw new _v("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=xf(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Ww(o,n)),"channelsFirst"===a&&(o=Kg(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=xk(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=w$(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ck(this.kernelInitializer),kernelRegularizer:h$(this.kernelRegularizer),kernelConstraint:iw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Rv(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class E$ extends S${constructor(e){super(2,e),E$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xv(e.kernelSize,"number",1,2))throw new Rv(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}E$.className="Conv2D",Sp(E$);class T$ extends S${constructor(e){super(3,e),T$.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Rv(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}T$.className="Conv3D",Sp(T$);class A$ extends E${constructor(e){if(super(e),this.inputSpec=[new $k({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Rv(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=xk(e)).length)throw new Rv("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rv("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $k({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ap((()=>{let t=yk(e);if(4!==t.shape.length)throw new Rv(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,k$(i,c,l,this.padding),k$(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Kg(t,[0,2,3,1]));let p=yf(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Kg(p,[0,3,1,2])),null!=this.bias&&(p=Ww(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=xk(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=k$(t[r],o,a,this.padding),t[s]=k$(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}A$.className="Conv2DTranspose",Sp(A$);class R$ extends T${constructor(e){if(super(e),this.inputSpec=[new $k({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Rv(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=xk(e)).length)throw new Rv("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Rv("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $k({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ap((()=>{let t=yk(e);if(5!==t.shape.length)throw new Rv(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,k$(o,p,c,this.padding),k$(l,f,h,this.padding),k$(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Kg(t,[0,2,3,4,1]));let b=wf(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Kg(b,[0,4,1,2,3])),null!==this.bias&&(b=Ww(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=xk(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=k$(t[r],u,i,this.padding),t[s]=k$(t[s],c,o,this.padding),t[a]=k$(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}R$.className="Conv3DTranspose",Sp(R$);class _$ extends S${constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Rv("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Rv("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Rv(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=hk(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=p$(t.depthwiseRegularizer),this.depthwiseConstraint=lw(t.depthwiseConstraint),this.pointwiseInitializer=hk(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=p$(t.pointwiseRegularizer),this.pointwiseConstraint=lw(t.pointwiseConstraint)}build(e){if((e=xk(e)).length<this.rank+2)throw new Rv(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Rv(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new $k({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ap((()=>{let t;if(e=yk(e),1===this.rank)throw new _v("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Kg(e,[0,2,3,1])),t=Sg(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Ww(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Kg(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ck(this.depthwiseInitializer),e.pointwiseInitializer=ck(this.pointwiseInitializer),e.depthwiseRegularizer=h$(this.depthwiseRegularizer),e.pointwiseRegularizer=h$(this.pointwiseRegularizer),e.depthwiseConstraint=iw(this.depthwiseConstraint),e.pointwiseConstraint=iw(this.pointwiseConstraint),e}}_$.className="SeparableConv";class F$ extends _${constructor(e){super(2,e)}}F$.className="SeparableConv2D",Sp(F$);class D$ extends S${constructor(e){super(1,e),D$.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xv(e.kernelSize,"number",1,1))throw new Rv(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}D$.className="Conv1D",Sp(D$);class M$ extends Tk{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ap((()=>{if(e=yk(e),"channelsLast"===this.dataFormat){const t=_w(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return _w(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=_w(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return _w(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}M$.className="Cropping2D",Sp(M$);class O$ extends Tk{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,gw(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){Kv(cw,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ap((()=>{let t=yk(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Kg(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return Kg(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}O$.className="UpSampling2D",Sp(O$);class L$ extends C${constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=hk(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=lw(e.depthwiseConstraint),this.depthwiseRegularizer=p$(e.depthwiseRegularizer)}build(e){if((e=xk(e)).length<4)throw new Rv(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Rv(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ap((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Ap((()=>{null==s&&(s="channelsLast"),gw(s);let i=I$(e,s);if(4!==e.rank)throw new Rv(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Rv(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=kf(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Kg(i,[0,3,1,2])),i}))}(e=yk(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Ww(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=xk(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=w$(t,this.kernelSize[0],this.padding,this.strides[0]),a=w$(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ck(this.depthwiseInitializer),e.depthwiseRegularizer=h$(this.depthwiseRegularizer),e.depthwiseConstraint=iw(this.depthwiseRegularizer),e}}function z$(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Rv("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function B$(e,t,n,r=!1,s,a,i=!1,o=!1){return Ap((()=>{const l=t.shape.length;if(l<3)throw new Rv(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Sw(2,l));if(t=Kg(t,u),null!=a)throw new _v("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=_f(s,-1)),s=Kg(s,u)),r&&(t=Ng(t,0),null!=s&&(s=Ng(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Ug(t);let g,m;null!=s&&(g=Ug(s));for(let t=0;t<p;++t){const n=f[t],r=Ap((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Ap((()=>{const e=g[t],n=mg(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=Bg(c,1)),[h,m,d]}))}L$.className="DepthwiseConv2D",Sp(L$);class P$ extends Tk{constructor(e){let t;if(super(e),null==e.cell)throw new Rv("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new K$({cells:e.cell}):e.cell,null==t.stateSize)throw new Rv("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new $k({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Sw(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){mk(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Ap((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new _v("Constants support is not implemented in RNN yet.");mk(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new $k({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!$o(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Rv(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new $k({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ap((()=>{if(!this.stateful)throw new Tv("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Rv("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>eg([n,e]))):this.states_=[eg([n,this.cell.stateSize])];else if(null==e)Rp(this.states_),null!=this.keptStates&&(Rp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>eg([n,e]))):this.states_[0]=eg([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Rv(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Rp(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!$o(r.shape,a))throw new Rv(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>_p(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=z$(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new $k({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Nk){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ap((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=yk(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Rv(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=B$(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Ap((()=>{let t=eg(e.shape);return t=qf(t,[1,2]),t=Tw(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Mw(t,[1,e]):t)):this.cell.stateSize>1?[Mw(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===P$.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Uk(t.cell,n);return new e(Object.assign(t,{cell:r}))}}P$.className="RNN",Sp(P$);class W$ extends Tk{}class V$ extends W${constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yv(this.units,"units"),this.activation=o$(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hk(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hk(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hk(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=p$(e.kernelRegularizer),this.recurrentRegularizer=p$(e.recurrentRegularizer),this.biasRegularizer=p$(e.biasRegularizer),this.kernelConstraint=lw(e.kernelConstraint),this.recurrentConstraint=lw(e.recurrentConstraint),this.biasConstraint=lw(e.biasConstraint),this.dropout=Nw([1,Cw([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Nw([1,Cw([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=xk(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ap((()=>{if(2!==(e=e).length)throw new Rv(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=X$({ones:()=>mg(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=X$({ones:()=>mg(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Lw(null!=a?Hf(e,a):e,this.kernel.read()),null!=this.bias&&(s=Ww(s,this.bias.read())),null!=i&&(n=Hf(n,i));let o=zp(s,Lw(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:a$(this.activation),useBias:this.useBias,kernelInitializer:ck(this.kernelInitializer),recurrentInitializer:ck(this.recurrentInitializer),biasInitializer:ck(this.biasInitializer),kernelRegularizer:h$(this.kernelRegularizer),recurrentRegularizer:h$(this.recurrentRegularizer),biasRegularizer:h$(this.biasRegularizer),activityRegularizer:h$(this.activityRegularizer),kernelConstraint:iw(this.kernelConstraint),recurrentConstraint:iw(this.recurrentConstraint),biasConstraint:iw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}V$.className="SimpleRNNCell",Sp(V$);class U$ extends P${constructor(e){e.cell=new V$(e),super(e)}call(e,t){return Ap((()=>{null!=this.cell.dropoutMask&&(Rp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Rp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}U$.className="SimpleRNN",Sp(U$);class G$ extends W${constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Rv("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Yv(this.units,"units"),this.activation=o$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=o$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hk(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hk(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hk(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=p$(e.kernelRegularizer),this.recurrentRegularizer=p$(e.recurrentRegularizer),this.biasRegularizer=p$(e.biasRegularizer),this.kernelConstraint=lw(e.kernelConstraint),this.recurrentConstraint=lw(e.recurrentConstraint),this.biasConstraint=lw(e.biasConstraint),this.dropout=Nw([1,Cw([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Nw([1,Cw([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=xk(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ap((()=>{if(2!==(e=e).length)throw new Rv(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=X$({ones:()=>mg(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=X$({ones:()=>mg(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Hf(e,s[0]));let u=Lw(e,this.kernel.read());this.useBias&&(u=Ww(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Hf(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Og(c,[2*this.units,this.units],c.rank-1),p=Lw(r,h),[f,g,m]=Og(u,3,u.rank-1),[b,y]=Og(p,2,p.rank-1);i=this.recurrentActivation.apply(zp(f,b)),o=this.recurrentActivation.apply(zp(g,y));const x=Lw(Hf(o,r),d);l=this.activation.apply(zp(m,x));const v=zp(Hf(i,r),Hf(zp(1,pg(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:a$(this.activation),recurrentActivation:a$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ck(this.kernelInitializer),recurrentInitializer:ck(this.recurrentInitializer),biasInitializer:ck(this.biasInitializer),kernelRegularizer:h$(this.kernelRegularizer),recurrentRegularizer:h$(this.recurrentRegularizer),biasRegularizer:h$(this.biasRegularizer),activityRegularizer:h$(this.activityRegularizer),kernelConstraint:iw(this.kernelConstraint),recurrentConstraint:iw(this.recurrentConstraint),biasConstraint:iw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}G$.className="GRUCell",Sp(G$);class H$ extends P${constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new G$(e),super(e)}call(e,t){return Ap((()=>{null!=this.cell.dropoutMask&&(Rp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Rp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}H$.className="GRU",Sp(H$);class j$ extends W${constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yv(this.units,"units"),this.activation=o$(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=o$(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hk(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hk(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hk(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=p$(e.kernelRegularizer),this.recurrentRegularizer=p$(e.recurrentRegularizer),this.biasRegularizer=p$(e.biasRegularizer),this.kernelConstraint=lw(e.kernelConstraint),this.recurrentConstraint=lw(e.recurrentConstraint),this.biasConstraint=lw(e.biasConstraint),this.dropout=Nw([1,Cw([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Nw([1,Cw([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=xk(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends jw{apply(t,r){const s=e.apply([n]),a=(new Kw).apply([n]),i=e.apply([2*n]);return Dw(Dw(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ap((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Rv(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=X$({ones:()=>mg(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=X$({ones:()=>mg(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Hf(e,a[0]));let h=Lw(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Hf(r,i[0])),h=zp(h,Lw(r,this.recurrentKernel.read())),this.useBias&&(h=Ww(h,this.bias.read()));const[d,p,f,g]=Og(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=zp(Hf(l,s),Hf(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Hf(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:a$(this.activation),recurrentActivation:a$(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ck(this.kernelInitializer),recurrentInitializer:ck(this.recurrentInitializer),biasInitializer:ck(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:h$(this.kernelRegularizer),recurrentRegularizer:h$(this.recurrentRegularizer),biasRegularizer:h$(this.biasRegularizer),activityRegularizer:h$(this.activityRegularizer),kernelConstraint:iw(this.kernelConstraint),recurrentConstraint:iw(this.recurrentConstraint),biasConstraint:iw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}j$.className="LSTMCell",Sp(j$);class q$ extends P${constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new j$(e),super(e)}call(e,t){return Ap((()=>{null!=this.cell.dropoutMask&&(Rp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Rp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}q$.className="LSTM",Sp(q$);class K$ extends W${constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ap((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;mk(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{xw(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Uk(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return kk(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Ik(t)}}function X$(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>Vw(t(),n),i=()=>Uw(a,t,r);return!s||s<=1?_p(i().clone()):Array(s).fill(void 0).map(i).map((e=>_p(e.clone())))}K$.className="StackedRNNCells",Sp(K$);var Y$,Z$,J$,Q$;class eN extends P${constructor(e){if(e.unroll)throw new _v("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _v("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new $k({ndim:5})]}call(e,t){return Ap((()=>{if(null!=this.cell.dropoutMask&&(Rp(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Rp(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Rv("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ap((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=eg([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Ap((()=>{if(!this.stateful)throw new Tv("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Rv("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>eg(s))):this.states_=[eg(s)];else if(null==e)Rp(this.states_),null!=this.keptStates&&(Rp(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>eg(s))):this.states_[0]=eg(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Rv(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Rp(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!$o(n.shape,r))throw new Rv(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>_p(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=w$(l,r[0],s,a[0],i[0]),h=w$(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}eN.className="ConvRNN2D";class tN extends j${constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Yv(this.filters,"filters"),this.kernelSize=v$(n,2,"kernelSize"),this.kernelSize.forEach((e=>Yv(e,"kernelSize"))),this.strides=v$(r||1,2,"strides"),this.strides.forEach((e=>Yv(e,"strides"))),this.padding=s||"valid",mw(this.padding),this.dataFormat=a||"channelsLast",gw(this.dataFormat),this.dilationRate=v$(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Yv(e,"dilationRate")))}build(e){var t;e=xk(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Rv(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends jw{apply(e,t){return Fw([n.apply([r]),tg([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ap((()=>{if(3!==e.length)throw new Rv(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=X$({ones:()=>mg(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Hf(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=X$({ones:()=>mg(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,x,v]=Og(this.kernel.read(),4,3),[w,k,I,$]=this.useBias?Og(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,$,this.padding);const[N,C,S,E]=Og(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,C),g=this.recurrentConv(g,S),m=this.recurrentConv(m,E);const T=this.recurrentActivation.apply(zp(l,p)),A=this.recurrentActivation.apply(zp(u,f)),R=zp(Hf(A,a),Hf(T,this.activation.apply(zp(c,g)))),_=Hf(this.recurrentActivation.apply(zp(h,m)),this.activation.apply(R));return[_,_,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=gf(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ww(s,n,this.dataFormat):s}recurrentConv(e,t){return gf(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}tN.className="ConvLSTM2DCell",Sp(tN);class nN extends eN{constructor(e){const t=new tN(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}nN.className="ConvLSTM2D",Sp(nN);class rN extends Tk{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Uw((()=>Vw(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}rN.className="Dropout",Sp(rN);class sN extends rN{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}sN.className="SpatialDropout1D",Sp(sN);class aN extends Tk{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Yv(this.units,"units"),this.activation=o$(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=hk(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=hk(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=lw(e.kernelConstraint),this.biasConstraint=lw(e.biasConstraint),this.kernelRegularizer=p$(e.kernelRegularizer),this.biasRegularizer=p$(e.biasRegularizer),this.activityRegularizer=p$(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=xk(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=xk(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e),r=Jv(this.activation.getClassName());let s;return null!=r?s=Lw(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Lw(n,this.kernel.read()),null!=this.bias&&(s=Ww(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:a$(this.activation),useBias:this.useBias,kernelInitializer:ck(this.kernelInitializer),biasInitializer:ck(this.biasInitializer),kernelRegularizer:h$(this.kernelRegularizer),biasRegularizer:h$(this.biasRegularizer),activityRegularizer:h$(this.activityRegularizer),kernelConstraint:iw(this.kernelConstraint),biasConstraint:iw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}aN.className="Dense",Sp(aN);class iN extends Tk{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=xk(e);for(const t of e.slice(1))if(null==t)throw new Rv(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$w(e,1)]}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);let n=yk(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Rv(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],$w(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}iN.className="Flatten",Sp(iN);class oN extends Tk{constructor(e){super(e),this.supportsMasking=!0,this.activation=o$(e.activation)}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e);return this.activation.apply(n)}))}getConfig(){const e={activation:a$(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}oN.className="Activation",Sp(oN);class lN extends Tk{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ap((()=>{return e=yk(e),t=e,n=this.n,Ap((()=>{if(2!==t.shape.length)throw new Rv(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Mw(Tw(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}lN.className="RepeatVector",Sp(lN);class uN extends Tk{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Rv("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=$w(e);if(null!==a){if(0===s||i%s!=0)throw new Rv(n);r[a]=i/s}else if(i!==s)throw new Rv(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}uN.className="Reshape",Sp(uN);class cN extends Tk{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Sw(1,e.dims.length+1);if(!$o(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new $k({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=xk(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Kg(yk(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}cN.className="Permute",Sp(cN);class hN extends Tk{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=yk(e);return Pp(fg(n,this.maskValue),-1)}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e),r=Pp(fg(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}hN.className="Masking",Sp(hN);class dN extends Tk{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(zv(e.inputLength))}this.inputDim=e.inputDim,Yv(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Yv(this.outputDim,"outputDim"),this.embeddingsInitializer=hk(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=p$(e.embeddingsRegularizer),this.activityRegularizer=p$(e.activityRegularizer),this.embeddingsConstraint=lw(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ap((()=>this.maskZero?(e=yk(e),fg(e,qg(e))):null))}computeOutputShape(e){if(e=xk(e),null==this.inputLength)return[...e,this.outputDim];const t=zv(this.inputLength);if(t.length!==e.length-1)throw new Rv(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Rv(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);let n=yk(e);return"int32"!==n.dtype&&(n=Ew(n,"int32")),zw(this.embeddings.read(),n.as1D()).reshape(xk(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ck(this.embeddingsInitializer),embeddingsRegularizer:h$(this.embeddingsRegularizer),activityRegularizer:h$(this.activityRegularizer),embeddingsConstraint:iw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}dN.className="Embedding",Sp(dN);class pN extends Tk{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _v}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Rv("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[xk(e)]),(e=e).length<2)throw new Rv(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=jv(t),t.length>1)throw new Rv(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===jv(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ap((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Cw(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Tw(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat($w(e.slice(1))));i=Kg(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=Sw(1,e).concat([0]);t.push(Kg(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Kg(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(Sw(0,s-1));r=Kg(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=jv(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ap((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Rv("`mask` should be an Array");if(!Array.isArray(e))throw new Rv("`inputs` should be an Array");if(t.length!==e.length)throw new Rv(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:_f(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Xf(n,t[e]);return n}))}}class fN extends pN{constructor(e){super(e)}mergeFunction(e){return Ap((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=zp(t,e[n]);return t}))}}fN.className="Add",Sp(fN);class gN extends pN{constructor(e){super(e)}mergeFunction(e){return Ap((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Hf(t,e[n]);return t}))}}gN.className="Multiply",Sp(gN);class mN extends pN{constructor(e){super(e)}mergeFunction(e){return Ap((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=zp(t,e[n]);return Hf(1/e.length,t)}))}}mN.className="Average",Sp(mN);class bN extends pN{constructor(e){super(e)}mergeFunction(e){return Ap((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Jf(t,e[n]);return t}))}}bN.className="Maximum",Sp(bN);class yN extends pN{constructor(e){super(e)}mergeFunction(e){return Ap((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ng(t,e[n]);return t}))}}yN.className="Minimum",Sp(yN);class xN extends pN{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Rv("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if($o(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Rv("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ap((()=>Fw(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Rv("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Rv("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Rv("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Rv(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ap((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(mg(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(_f(t[n],-1)):r.push(t[n]);const s=cf(r,this.axis);return Bp(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function vN(e,t){for(;e<0;)e+=t;return e}xN.className="Concatenate",Sp(xN);class wN extends pN{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){xo(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new _v("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Rv(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Rv(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>vN(t,e[n].shape.length))):[vN(this.axes,n.shape.length),vN(this.axes,r.shape.length)],this.normalize&&(n=Gk(n,t[0]),r=Gk(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new _v("batchDot is not implemented for tensors of 4D or higher rank yet");if(xo(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),xo(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new _v("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Ap((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[vN(this.axes,e.length),vN(this.axes,t.length)],n}computeOutputShape(e){xo(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new _v("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wN.className="Dot",Sp(wN);class kN extends Tk{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e);return Uw((()=>Ow(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}kN.className="GaussianNoise",Sp(kN);class IN extends Tk{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ap((()=>{this.invokeCallHook(e,t);const n=yk(e);return this.rate>0&&this.rate<1?Uw((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Ow(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}IN.className="GaussianDropout",Sp(IN);class $N extends Tk{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||yk(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ap((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Uw((()=>{const t=yk(e),r=-1.7580993408473766;let s=Bf(Ig(n),this.rate);s=Ew(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>yk(e)),t.training||!1)}return e}))}}function NN(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=af(e,t,n,r,s,a);else if(3===e.rank)i=of(e,t,n,r,s,a);else{if(4!==e.rank)throw new _v(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=lf(e,t,n,r,s,a)}return i}$N.className="AlphaDropout",Sp($N);class CN extends Tk{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hk(e.betaInitializer||"zeros"),this.gammaInitializer=hk(e.gammaInitializer||"ones"),this.movingMeanInitializer=hk(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=hk(e.movingVarianceInitializer||"ones"),this.betaConstraint=lw(e.betaConstraint),this.gammaConstraint=lw(e.gammaConstraint),this.betaRegularizer=p$(e.betaRegularizer),this.gammaRegularizer=p$(e.gammaRegularizer)}build(e){e=xk(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Rv(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new $k({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ap((()=>{const n=null!=t.training&&t.training,r=yk(e),s=r.shape,a=s.length,i=Sw(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Dv(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!$o(u,Sw(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return NN(r,e,t,n,s,this.epsilon)}return NN(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return $o(r.slice().sort(),Sw(0,e.rank-1))?function(e,t,n,r,s=.001){return Ap((()=>{const a=dg(e,r),i=a.mean,o=a.variance;return[NN(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Ap((()=>{const a=dg(e,r),i=a.mean,o=a.variance,l=[];for(const t of Sw(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[NN(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Ap((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ck(this.betaInitializer),gammaInitializer:ck(this.gammaInitializer),movingMeanInitializer:ck(this.movingMeanInitializer),movingVarianceInitializer:ck(this.movingVarianceInitializer),betaRegularizer:h$(this.betaRegularizer),gammaRegularizer:h$(this.gammaRegularizer),betaConstraint:iw(this.betaConstraint),gammaConstraint:iw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}CN.className="BatchNormalization",Sp(CN);class SN extends Tk{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hk(e.betaInitializer||"zeros"),this.gammaInitializer=hk(e.gammaInitializer||"ones"),this.betaRegularizer=p$(e.betaRegularizer),this.gammaRegularizer=p$(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=xk(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==jv(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=yk(e),r=n.shape,s=r.length;return Ap((()=>{let{mean:e,variance:t}=dg(n,this.axis,!0);const a=Dv(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),NN(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ck(this.betaInitializer),gammaInitializer:ck(this.gammaInitializer),betaRegularizer:h$(this.betaRegularizer),gammaRegularizer:h$(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}SN.className="LayerNormalization",Sp(SN);class EN extends Tk{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Rv(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Rv(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Rv(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new $k({ndim:4})]}computeOutputShape(e){let t,n;return e=xk(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ap((()=>{return t=yk(e),n=this.padding,r=this.dataFormat,Ap((()=>{if(4!==t.rank)throw new Rv(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Rv("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Rv(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],bg(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function TN(e,t,n,r,s,a){return Ap((()=>{let i;gw(s),bw(a),mw(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=I$(e,s);const o="same"===r?"same":"valid";return i="max"===a?Yf(e,t,n,o):nf(e,t,n,o),"channelsFirst"===s&&(i=Kg(i,[0,3,1,2])),i}))}function AN(e,t,n,r,s,a){return Ap((()=>{let i;gw(s),bw(a),mw(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=$$(e,s);const o="same"===r?"same":"valid";return i="max"===a?Zf(e,t,n,o):rf(e,t,n,o),"channelsFirst"===s&&(i=Kg(i,[0,4,1,2,3])),i}))}EN.className="ZeroPadding2D",Sp(EN);class RN extends Tk{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Rv(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Yv(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Rv(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Yv(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mw(this.padding),this.inputSpec=[new $k({ndim:3})]}computeOutputShape(e){const t=w$((e=xk(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ap((()=>{this.invokeCallHook(e,t),e=Tw(yk(e),2);const n=this.poolingFunction(yk(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zg(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _N extends RN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),TN(e,t,n,r,s,"max")}}_N.className="MaxPooling1D",Sp(_N);class FN extends RN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),TN(e,t,n,r,s,"avg")}}FN.className="AveragePooling1D",Sp(FN);class DN extends Tk{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Rv(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Yv(this.poolSize,"poolSize"),Yv(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,gw(this.dataFormat),mw(this.padding),this.inputSpec=[new $k({ndim:4})]}computeOutputShape(e){e=xk(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=w$(t,this.poolSize[0],this.padding,this.strides[0]),n=w$(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ap((()=>(this.invokeCallHook(e,t),this.poolingFunction(yk(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MN extends DN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),TN(e,t,n,r,s,"max")}}MN.className="MaxPooling2D",Sp(MN);class ON extends DN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),TN(e,t,n,r,s,"avg")}}ON.className="AveragePooling2D",Sp(ON);class LN extends Tk{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Rv(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Yv(this.poolSize,"poolSize"),Yv(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,gw(this.dataFormat),mw(this.padding),this.inputSpec=[new $k({ndim:5})]}computeOutputShape(e){e=xk(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=w$(t,this.poolSize[0],this.padding,this.strides[0]),n=w$(n,this.poolSize[1],this.padding,this.strides[1]),r=w$(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ap((()=>(this.invokeCallHook(e,t),this.poolingFunction(yk(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zN extends LN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),AN(e,t,n,r,s,"max")}}zN.className="MaxPooling3D",Sp(zN);class BN extends LN{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return gw(s),mw(r),AN(e,t,n,r,s,"avg")}}BN.className="AveragePooling3D",Sp(BN);class PN extends Tk{constructor(e){super(e),this.inputSpec=[new $k({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _v}}class WN extends PN{constructor(e){super(e||{})}call(e,t){return Ap((()=>{const t=yk(e);return Qf(t,1)}))}}WN.className="GlobalAveragePooling1D",Sp(WN);class VN extends PN{constructor(e){super(e||{})}call(e,t){return Ap((()=>{const t=yk(e);return Gf(t,1)}))}}VN.className="GlobalMaxPooling1D",Sp(VN);class UN extends Tk{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,gw(this.dataFormat),this.inputSpec=[new $k({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _v}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class GN extends UN{call(e,t){return Ap((()=>{const t=yk(e);return"channelsLast"===this.dataFormat?Qf(t,[1,2]):Qf(t,[2,3])}))}}GN.className="GlobalAveragePooling2D",Sp(GN);class HN extends UN{call(e,t){return Ap((()=>{const t=yk(e);return"channelsLast"===this.dataFormat?Gf(t,[1,2]):Gf(t,[2,3])}))}}HN.className="GlobalMaxPooling2D",Sp(HN);class jN extends Tk{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Uk(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class qN extends jN{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=xk(e)).length<3)throw new Rv(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=xk(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ap((()=>B$(((e,n)=>[yk(this.layer.call(e,t)),[]]),e=yk(e),[],!1,null,null,!1,!0)[1]))}}qN.className="TimeDistributed",Sp(qN);class KN extends jN{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Uk(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Uk(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){Kv(pw,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new _v("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Lv(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=z$(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Rv("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new $k({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new _v("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Nk;for(const e of a)if(e instanceof Nk!==o)throw new Rv("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ap((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ng(s,1)),"concat"===this.mergeMode?i=Fw([r,s]):"sum"===this.mergeMode?i=zp(r,s):"ave"===this.mergeMode?i=Hf(.5,zp(r,s)):"mul"===this.mergeMode?i=Hf(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){xw(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),xw(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Uk(t.layer);if(delete t.layer,null!=t.numConstants)throw new _v("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function XN(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(QN(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=XN(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function YN(e,t=JN){return ZN(e,t)}function ZN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(QN(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=ZN(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function JN(e){return null===e?null:QN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function QN(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Gh))}function eC(e){return XN(e,tC)}function tC(e){return e instanceof Gh?{value:e.clone(),recurse:!1}:QN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}KN.className="Bidirectional",Sp(KN),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Y$||(Y$={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Z$||(Z$={}));class nC{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class rC extends nC{constructor(){super(rC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}rC.INITIAL_CAPACITY=32;class sC{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new pC(this,e)}filter(e){return new hC(this,e)}map(e){return new dC(this,e)}mapAsync(e){return new fC(this,e)}serialMapAsync(e){return new fC(this,e).serial()}flatmap(e){return new mC(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new cC(this,e,t)}columnMajorBatch(e,t=!0,n=JN){return this.rowMajorBatch(e,t).map((e=>YN(e,n)))}concatenate(e,t){return new bC(new aC([this,e]),t)}take(e){return e<0||null==e?this:new uC(this,e)}skip(e){return e<0||null==e?this:new lC(this,e)}prefetch(e){return new yC(this,e)}shuffle(e,t){return new xC(this,e,t)}serial(){return new oC(this)}}class aC extends sC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:eC(e),done:!1}}}class iC extends sC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class oC extends sC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class lC extends sC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Rp(e.value)}return this.upstream.next()}}class uC extends sC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class cC extends sC{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class hC extends sC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Rp(e.value)}}}class dC extends sC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=rd(e.value),n=this.transform(e.value),r=rd(n);for(const e of t)nd(e,r)||e.dispose();return{value:n,done:!1}}}class pC extends sC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class fC extends sC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=rd(e.value),n=await this.transform(e.value),r=rd(n);for(const e of t)nd(e,r)||e.dispose();return{value:n,done:!1}}}class gC extends sC{constructor(){super(),this.outputQueue=new rC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class mC extends gC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=rd(e.value),n=this.transform(e.value),r=rd(n);this.outputQueue.pushAll(n);for(const e of t)nd(e,r)||e.dispose();return!0}}class bC extends sC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Q$=J$||(J$={}))[Q$.FAIL=0]="FAIL",Q$[Q$.SHORTEST=1]="SHORTEST",Q$[Q$.LONGEST=2]="LONGEST";class yC extends sC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new nC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class xC extends yC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xg.alea(n||Th().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class vC{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return xo(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),wC((async()=>(await n.iterator()).columnMajorBatch(e,t,kC)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,wC((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,wC((async()=>(await t.iterator()).filter((t=>Ap((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return wC((async()=>(await t.iterator()).map((t=>Ap((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return wC((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return wC((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,wC((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new iC(s)).take(e),new bC(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,wC((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=xg.alea(t||Th().toString());return wC((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,wC((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function wC(e,t=null){return new class extends vC{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function kC(e){if(null===e)return null;return null==(t=e[0])||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(t)||Array.isArray(t)||"object"==typeof t&&t instanceof Gh||Mo(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Gh?Bg(e):kd(e)}(e),recurse:!1}:{value:null,recurse:!0};var t}function IC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&xo("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}vC.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const $C=Xb;class NC extends fo{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new po(this,Ep())}nextDataId(){return NC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,el().get("IS_NODE")&&Cb("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Lo(n[0])){const s=n.map((e=>Ah(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Eb(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Rh(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qd(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Ep().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Th();return e(),{kernelMs:Th()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){IC([e],"where");const t=this.readSync(e.dataId);return $C(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function CC(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(IC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=Io(i.shape),c=n||i.dtype,h=Fo(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(i.shape,c,h)}}function SC(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(IC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}NC.nextDataId=0,Fp("cpu",(()=>new NC),1);const EC=CC(Ql,(e=>e>=0?e:Math.exp(e)-1)),TC={kernelName:Ql,backendName:"cpu",kernelFunc:EC};function AC(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const RC={kernelName:mu,backendName:"cpu",kernelFunc:AC};function _C(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;IC([s],"leakyRelu");const i=Io(s.shape),o=n.data.get(s.dataId).values,l=_o("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const FC={kernelName:ku,backendName:"cpu",kernelFunc:_C};function DC(e){return(t,n,r,s,a)=>{const i=Af(t,n),o=i.length,l=Vo(i),u=_o(a,Io(i)),c=t.length,h=n.length,d=Vo(t),p=Vo(n),f=Ef(t,i),g=Ef(n,i);if(f.length+g.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Yo(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Xo(a,c,d),m=n.slice(-h);g.forEach((e=>m[e]=0));const b=Xo(m,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const MC=DC(((e,t)=>e<0?t*e:e));function OC(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;IC([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=MC(r.shape,s.shape,a,i,r.dtype);return n.makeTensorInfo(l,r.dtype,o)}const LC={kernelName:rc,backendName:"cpu",kernelFunc:OC},zC=CC(lc,(e=>Math.max(0,e))),BC={kernelName:lc,backendName:"cpu",kernelFunc:zC},PC=CC(fc,(e=>Math.min(Math.max(0,e),6))),WC={kernelName:fc,backendName:"cpu",kernelFunc:PC},VC=CC(Nc,(e=>1/(1+Math.exp(-e)))),UC={kernelName:Nc,backendName:"cpu",kernelFunc:VC};function GC(e,t,n,r,s){if("linear"===n)return AC({inputs:{x:t},backend:e});if("relu"===n)return zC({inputs:{x:t},backend:e});if("elu"===n)return EC({inputs:{x:t},backend:e});if("relu6"===n)return PC({inputs:{x:t},backend:e});if("prelu"===n)return OC({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return _C({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return VC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function HC(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const jC={kernelName:Tl,backendName:"cpu",kernelFunc:HC};function qC(e,t,n="float32"){if("complex64"===n)return HC({inputs:{real:qC(e,t,"float32"),imag:qC(e,t,"float32")},backend:e});const r=jo(Io(t),n);return e.makeTensorInfo(t,n,r)}function KC(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const XC={kernelName:ic,backendName:"cpu",kernelFunc:KC};function YC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return AC({inputs:{x:s},backend:n});const e=qC(n,s.shape,s.dtype),t=YC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=HC({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=KC({inputs:{input:s},backend:n}),t=YC({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Do(s.dtype,a)){const e=AC({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=Eh([0],s.dtype),[r,a]=DC(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const ZC={kernelName:Cl,backendName:"cpu",kernelFunc:YC};function JC(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;IC([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?qb(l):l,h="string"===a.dtype?qb(u):u,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=YC({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=YC({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,l,u,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=HC({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function QC(e){return(t,n,r,s,a,i)=>{const o=Af(t,n),l=Io(o),u=o.length,c=Vo(o),h=_o("float32",l),d=_o("float32",l),p=Ef(t,o),f=Ef(n,o),g=Eb(r,s),m=Eb(a,i),b=t.length,y=Vo(t),x=n.length,v=Vo(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%m.length,s=e(g[2*n],g[2*n+1],m[2*r],m[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Yo(t,u,c),r=n.slice(-b);p.forEach((e=>r[e]=0));const s=Xo(r,b,y),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Xo(a,x,v),o=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const eS=DC(((e,t)=>e+t)),tS=QC(((e,t,n,r)=>({real:e+n,imag:t+r}))),nS=JC(ll,eS,tS),rS={kernelName:ll,backendName:"cpu",kernelFunc:nS};function sS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=Io(s.shape),o=To(a,i),l=Io(o);xo(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const aS={kernelName:uc,backendName:"cpu",kernelFunc:sS};function iS(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;IC([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],d=i?s.shape[l-1]:s.shape[l-2],p=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),g=a.shape.slice(0,-2),m=Io(f),b=Io(g);xo(l>=2&&u>=2&&(m===b||1===m||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${g}).`));const y=(m>b?s.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,p]);xo(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[b,p,h]:[b,h,p],v=sS({inputs:{x:s},backend:n,attrs:{shape:i?[m,c,d]:[m,d,c]}}),w=sS({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],I=i?v.shape[2]:v.shape[1],$=o?w.shape[1]:w.shape[2],N=Math.max(m,b),C=n.data.get(v.dataId).values,S=n.data.get(w.dataId).values,E=Vo(v.shape),T=Vo(w.shape),[A,R,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,D,M]=o?[1,T[1],T[0]]:[T[1],1,T[0]],O=I*$,L=Qd([N,I,$],v.dtype),z=L.values,B=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=B)for(let n=0;n<$;n+=B)for(let r=0;r<k;r+=B){const s=Math.min(t+B,I),a=Math.min(n+B,$),i=Math.min(r+B,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,m-1)*A,a=Math.min(e,b-1)*M;n+=C[r+o*R+s*_]*S[s*F+t*D+a]}z[e*O+(o*$+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(y,L.dtype,L.values)}const oS={kernelName:Il,backendName:"cpu",kernelFunc:iS},lS={kernelName:nh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=iS({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=nS({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=GC(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function uS(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const cS={kernelName:al,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;IC(t,"abs");let r=new Float32Array(Io(t.shape));return r=uS(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},hS=CC(il,(e=>Math.acos(e))),dS={kernelName:il,backendName:"cpu",kernelFunc:hS},pS=CC(ol,(e=>Math.acosh(e))),fS={kernelName:ol,backendName:"cpu",kernelFunc:pS},gS={kernelName:ul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;IC(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=Qd(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function mS(e,t,n,r,s){const a=t.length,i=Io(t),o=Vo(t),l=Vo(s),u=_o(n,Io(s));for(let t=0;t<i;++t){const n=Yo(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Xo(s,a,l)]=e[t]}return u}function bS(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;IC(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=mS(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const yS={kernelName:Xc,backendName:"cpu",kernelFunc:bS},xS={kernelName:cl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;IC(s,"all");const o=Ao(a,s.shape);let l=o;const u=lg(l,s.shape.length);let c=s;null!=u&&(c=bS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=cg(l.length,s.shape.length)),og("all",l,c.shape.length);const[h,d]=ag(c.shape,l),p=Io(d),f=jo(Io(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sS({inputs:{x:m},backend:n,attrs:{shape:ig(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},vS={kernelName:hl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;IC(s,"any");const o=Ao(a,s.shape);let l=o;const u=lg(l,s.shape.length);let c=s;null!=u&&(c=bS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=cg(l.length,s.shape.length)),og("any",l,c.shape.length);const[h,d]=ag(c.shape,l),p=Io(d),f=jo(Io(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sS({inputs:{x:m},backend:n,attrs:{shape:ig(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},wS={kernelName:dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;IC(s,"argMax");let i=Ao(a,s.shape);const o=lg(i,s.shape.length);let l=s;const u=[];null!=o&&(l=bS({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=cg(i.length,l.shape.length)),i=[i[0]],og("argMax",i,l.shape.length);const[c,h]=ag(l.shape,i),d=jo(Io(c),"int32"),p=Io(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},kS={kernelName:pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;IC(s,"argMin");let i=Ao(a,s.shape);const o=lg(i,s.shape.length);let l=s;const u=[];null!=o&&(l=bS({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=cg(i.length,l.shape.length)),i=[i[0]],og("argMin",i,l.shape.length);const[c,h]=ag(l.shape,i),d=jo(Io(c),"int32"),p=Io(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},IS=CC(fl,(e=>Math.asin(e))),$S={kernelName:fl,backendName:"cpu",kernelFunc:IS},NS=CC(gl,(e=>Math.asinh(e))),CS={kernelName:gl,backendName:"cpu",kernelFunc:NS},SS=CC(ml,(e=>Math.atan(e))),ES={kernelName:ml,backendName:"cpu",kernelFunc:SS},TS=DC(((e,t)=>Math.atan2(e,t))),AS=JC(yl,TS),RS={kernelName:yl,backendName:"cpu",kernelFunc:AS},_S=CC(bl,(e=>Math.atanh(e))),FS={kernelName:bl,backendName:"cpu",kernelFunc:_S};function DS(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Qd(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}m[I+n*x+t]="avg"===a?y/v:b}}}return g}function MS(e,t,n,r,s=!1,a=!1){const i=Qd(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=Qd(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function OS(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Qd(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],$=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const N=w*i-g;let C=N;for(;C<0;)C+=u;const S=Math.min(s.inDepth,d+N),E=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*$;let k=y,I=0,N=0;for(let n=C;n<S;n+=u){const s=x+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/N:k}}}}return x}const LS={kernelName:xl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;IC(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;xo(Qp(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Up(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&$o(u.inShape,u.outShape))c=AC({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Vo(s.shape),r=DS(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},zS={kernelName:wl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;IC(s,"avgPool3d");const c=Gp(s.shape,a,i,1,o,l,u),h=OS(n.data.get(s.dataId).values,s.shape,s.dtype,Vo(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},BS={kernelName:kl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;IC([s,a],"avgPool3DGrad");const c=Gp(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,$=k-1-c.padInfo.left,N=w-1-c.padInfo.top,C=Qd(a.shape,"float32"),S=1/(f*g*m),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-N,o=s-$;let l=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}C.set(l*S,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},PS={kernelName:vl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;IC([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Up(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=Qd(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,$=Qd(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=$.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},WS={kernelName:hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;xo(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),xo(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),xo(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),IC([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,y=d.length,x=h.length;let v=0,w=0,k=0,I=0;for(let e=0;e<c.length;++e)g[e]=f[v++]+(c[e]-h[w++])*p[k++]/Math.sqrt(d[I++]+u),v>=m&&(v=0),w>=x&&(w=0),k>=b&&(k=0),I>=y&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};function VS(e,t,n,r,s){const a=wp(r,t,n),i=Io(n),o=Vo(r);if(a){const n=kp(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=Qd(r,s,"string"===s?qb(e):e),u=Qd(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?Kb(u.values):u.values}function US(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;IC(s,"slice");const[o,l]=Ip(s,a,i);up(s,o,l);const u=VS(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const GS={kernelName:wc,backendName:"cpu",kernelFunc:US},HS={kernelName:$l,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;IC([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=ub(s.shape,a,o),u=cb(l.length,a.length),c=hb(s.shape,a,o),h=db(i,a.length),d=pb(c,i,a.length),p=sS({inputs:{x:s},backend:n,attrs:{shape:l}}),f=bS({inputs:{x:p},backend:n,attrs:{perm:u}}),g=sS({inputs:{x:f},backend:n,attrs:{shape:c}}),m=US({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function jS(e,t,n,r,s){const a=Io(r),i=jo(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function qS(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=Qd([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const KS={kernelName:Nl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=jS(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}};function XS(e){return(t,n,r)=>{const s=_o(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const YS=XS((e=>Math.ceil(e))),ZS=SC(Sl,YS),JS={kernelName:Sl,backendName:"cpu",kernelFunc:ZS},QS=CC(El,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),eE={kernelName:El,backendName:"cpu",kernelFunc:QS},tE={kernelName:Al,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Io(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function nE(e,t,n,r){const s=Fo(n,Io(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Io(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?qb(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function rE(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const sE={kernelName:yu,backendName:"cpu",kernelFunc:rE};function aE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=Ao(s,t[0].shape)[0];let i=ab(t.map((e=>e.shape)),a);if(0===Io(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Io(e.shape)>0));if(1===o.length)return AC({inputs:{x:o[0]},backend:n});if(sb(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>KC({inputs:{input:e},backend:n}))),t=o.map((e=>rE({inputs:{input:e},backend:n}))),r=aE({inputs:e,backend:n,attrs:{axis:a}}),s=aE({inputs:t,backend:n,attrs:{axis:a}}),i=HC({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=Io(e.shape.slice(a));return sS({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=ab(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=nE(u,i,t[0].dtype,c),d=ab(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const iE={kernelName:Rl,backendName:"cpu",kernelFunc:aE};function oE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;IC([s,a],"conv2d");const h=ef(l),d=Hp(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Ph(d.outShape,s.dtype),w=Vo(s.shape),k=Vo(a.shape),I=w[0],$=x?w[1]:w[2],N=x?w[2]:1,C=x?1:w[1],S=v.strides[0],E=x?v.strides[1]:v.strides[2],T=x?v.strides[2]:1,A=x?1:v.strides[1],R=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*S;for(let e=0;e<d.outHeight;++e){const r=n+e*E,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*$;for(let e=0;e<d.outWidth;++e){const t=r+e*T,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*N;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=R[s+e*C];for(let e=0;e<d.outChannels;++e)F[t+e*A]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const lE={kernelName:_l,backendName:"cpu",kernelFunc:oE},uE={kernelName:Fl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;IC([s,a],"conv2dBackpropFilter");const h=ef(l),d=Hp(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new Ph(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Ph(s.shape,s.dtype,w),$=new Ph(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=b?I.get(u,t,n,i)*$.get(u,c,e,o):I.get(u,i,t,n)*$.get(u,o,c,e)}}y.set(l,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},cE={kernelName:Dl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;IC([s,a],"conv2dBackpropInput");const h=Vo(a.shape),d=Vo(s.shape);let p=ef(u);const f=Hp(i,a.shape,o,1,l,c,!1,p),g=new Ph(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:$,inChannels:N,inHeight:C,inWidth:S,outChannels:E,outHeight:T,outWidth:A,strideHeight:R,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=$-1-f.padInfo.left,M="channelsLast"===p,O=g.strides[0],L=M?g.strides[1]:g.strides[2],z=M?g.strides[2]:1,B=M?1:g.strides[1],P=d[0],W=M?d[1]:d[2],V=M?d[2]:1,U=M?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<C;++n){const r=n-F,s=Math.max(0,Math.ceil(r/R)),a=Math.min(T,(I+r)/R);for(let i=0;i<S;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(A,($+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*R-r;for(let r=l;r<u;++r){const a=P*e+W*n+V*r,i=x*(I-1-s)+v*($-1-(r*_-o))+w*t;for(let e=0;e<E;++e)c+=b[a+U*e]*y[i+e]}}m[O*e+L*n+z*i+B*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},hE={kernelName:Ml,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;IC([s,a],"conv3d");const u=jp(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,y=m.left,x=m.top,v=new Ph(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,$=Vo(s.shape),N=Vo(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*$[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*N[0],i=t+n*$[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*N[1],o=i+r*$[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const a=s+e*N[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},dE={kernelName:Ol,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;IC([s,a],"conv3dBackpropFilterV2");const u=Vo(s.shape),c=Vo(a.shape),h=jp(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new Ph(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,$=n.data.get(a.dataId).values,[N,C,S,E]=c,T=n.data.get(s.dataId).values,[A,R,_,F]=u,D=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/d)),n=Math.min(h.outDepth,(h.inDepth+D-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((O-s)/p)),i=Math.min(h.outHeight,(h.inHeight+O-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((M-r)/f)),u=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*A,b=g*N;for(let g=t;g<n;++g){const t=(e+g*d-D)*R+h,n=g*C+b;for(let e=a;e<i;++e){const a=(s+e*p-O)*_+t,i=e*S+n;for(let e=l;e<u;++e){const t=e*E+i;m+=T[(r+e*f-M)*F+a+o]*$[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},pE={kernelName:Ll,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;IC([s],"conv3dBackpropInputV2");const u=Vo(s.shape),c=Vo(a.shape),h=jp(l,a.shape,o,1,i),d=new Ph(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[$,N,C,S]=c,{batchSize:E,filterDepth:T,filterHeight:A,filterWidth:R,inChannels:_,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:B,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=T-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,(T+r)/P);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<M;++c){const h=c-H,d=Math.max(0,Math.ceil(h/V)),E=Math.min(B,(R+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=l;r<u;++r){const a=r*W-o;for(let i=d;i<E;++i){const o=x*e+v*n+w*r+k*i,l=$*(T-1-s)+N*(A-1-a)+C*(R-1-(i*V-h))+S*t;for(let e=0;e<O;++e)_+=y[o+e]*I[l+e]}}}p[f*e+g*n+m*i+b*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},fE=CC(zl,(e=>Math.cos(e))),gE={kernelName:zl,backendName:"cpu",kernelFunc:fE},mE=CC(Bl,(e=>Math.cosh(e))),bE={kernelName:Bl,backendName:"cpu",kernelFunc:mE},yE={kernelName:Wl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=Qd([f,g,m,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=Vo(s.shape),k=Vo(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},xE={kernelName:Pl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;IC(s,"cumsum");const l=lg([a],s.shape.length);let u=s;null!=l&&(u=bS({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=cg(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Qh(u.dtype,"int32"),d=jo(Io(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=g(e,t);if(0===t)d[n]=i?0:p[n];else{const r=g(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=bS({inputs:{x:m},backend:n,attrs:{perm:ug(l)}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),e}return m}},vE={kernelName:Vl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=jS(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=qS(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},wE={kernelName:Ul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;xo("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),xo(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,d=u*a,p=c/(a*a),f=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<d;++t){const s=Math.floor(t/a),i=(r*a+t%a)*p;for(let t=0;t<p;++t){const r=t+i+c*(s+u*(n+l*e));g[m++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}};function kE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;IC([s,a],"depthwiseConv2DNative");const c=Vo(s.shape),h=Vo(a.shape);let d=l;null==d&&(d=[1,1]),xo(Qp(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=Hp(s.shape,a.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:y}=p,x=y.left,v=y.top,w=p.outChannels/p.inChannels,k=new Ph(p.outShape,s.dtype),I=n.data.get(s.dataId).values,$=n.data.get(a.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],s=e*p.strideHeight-v;for(let e=0;e<f;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=p.inWidth)continue;const s=a+e*h[1],o=i+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<w;++e)N[l+e]+=t*$[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const IE={kernelName:Gl,backendName:"cpu",kernelFunc:kE},$E={kernelName:Hl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;IC([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Hp(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Ph(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Ph(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new Ph(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}m.set(u,e,r,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},NE={kernelName:jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;IC([s,a],"depthwiseConv2DNativeBackpropInput");const h=Vo(s.shape),d=Vo(a.shape),p=Hp(c,a.shape,i,o,l,u,!0),f=new Ph(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[$,N,C]=d,{batchSize:S,filterHeight:E,filterWidth:T,inChannels:A,inHeight:R,inWidth:_,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=E-1-p.padInfo.top,B=T-1-p.padInfo.left,P=F/A;for(let e=0;e<S;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(D,(E+r)/O);for(let i=0;i<_;++i){const o=i-B,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(T+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=$*(E-1-s)+N*(T-1-(r*L-o))+C*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}g[m*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},CE={kernelName:ql,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=Io(r.shape),a=n.data.get(r.dataId).values,i=Qd([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},SE={kernelName:Kl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:$,dilationWidth:N,outShape:C}=Vp(r.shape,s.shape,a,i,"NHWC",o),S=Io(C),E=C.length,T=Fo(r.dtype,S);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let a=0;a<y;++a){const i=a*w-x.left;for(let o=0;o<m;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*$;if(a>=0&&a<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<g){const i=Xo([e,a,p,o],c,Vo(r.shape)),f=Xo([t,n,o],d,Vo(s.shape)),g=u[i]+h[f];g>l&&(l=g)}}}T[Xo([e,t,a,o],E,Vo(C))]=l}}}return{dataId:l.write(Eh(T,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},EE={kernelName:Yl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Go(r.shape,u.data.get(r.dataId).values),h=Go(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=Vp(r.shape,s.shape,i,o,"NHWC",l);xo(a.rank===N.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Go(N,u.data.get(a.dataId).values),S=qo(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}S[o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Eh(S,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},TE={kernelName:Xl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Go(r.shape,u.data.get(r.dataId).values),h=Go(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:$,outShape:N}=Vp(r.shape,s.shape,i,o,"NHWC",l);xo(a.rank===N.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${N.length}, but got ${a.rank}`));const C=Go(N,u.data.get(a.dataId).values),S=qo(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<m;++t){const n=t*x-y.top;for(let r=0;r<b;++r){const s=r*v-y.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<w;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const u=s+n*$;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}S[e][o][l][a]+=C[e][t][r][a]}}}return{dataId:u.write(Eh(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},AE=DC(((e,t)=>e*t)),RE=QC(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),_E=JC(ju,AE,RE),FE={kernelName:ju,backendName:"cpu",kernelFunc:_E};function DE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;IC(s,"sum"),o="bool"===s.dtype?YC({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):AC({inputs:{x:s},backend:n});const l=o.shape.length,u=Ao(a,o.shape),c=lg(u,l);let h=u,d=o;null!=c&&(d=bS({inputs:{x:o},backend:n,attrs:{perm:c}}),h=cg(h.length,l)),og("sum",h,d.shape.length);const[p,f]=ag(d.shape,h);let g=qC(n,p,Qh(d.dtype,"int32"));const m=Io(f),b=n.data.get(g.dataId).values,y=n.data.get(d.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=0;for(let e=0;e<m;++e)n+=y[t+e];b[e]=n}if(i){const e=g;g=sS({inputs:{x:g},backend:n,attrs:{shape:ig(g.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),g}const ME={kernelName:Ec,backendName:"cpu",kernelFunc:DE},OE={kernelName:Jl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Lb(s,a.length);Bb(i.length,l,a);const{path:u,steps:c}=Pb(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=zb(p,l[t]);let s;Wb(e)?s=a[t]:(s=bS({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$o(s.shape,i)||(s=sS({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=_E({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=DE({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},LE={kernelName:eu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;IC([r,s],"eluGrad");const a=new Float32Array(Io(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},zE=DC(((e,t)=>e===t?1:0)),BE=JC(nu,zE,null,"bool"),PE={kernelName:nu,backendName:"cpu",kernelFunc:BE},WE=vb,VE=wb,UE=kb,GE=Ib,HE=$b,jE=Nb,qE=CC(tu,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+WE*n);return t*(1-((((jE*r+HE)*r+GE)*r+UE)*r+VE)*r*Math.exp(-n*n))})),KE={kernelName:tu,backendName:"cpu",kernelFunc:qE},XE=XS((e=>Math.exp(e))),YE=SC(ru,XE),ZE={kernelName:ru,backendName:"cpu",kernelFunc:YE};function JE(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(xo(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),sS({inputs:{x:s},backend:n,attrs:{shape:o}})}const QE={kernelName:su,backendName:"cpu",kernelFunc:JE},eT=XS((e=>Math.expm1(e))),tT=SC(au,eT),nT={kernelName:au,backendName:"cpu",kernelFunc:tT},rT=DC(((e,t)=>e/t)),sT=JC(Zl,rT),aT={kernelName:Zl,backendName:"cpu",kernelFunc:sT},iT=DC(((e,t)=>e-t)),oT=QC(((e,t,n,r)=>({real:e-n,imag:t-r}))),lT=JC(Uc,iT,oT),uT={kernelName:Uc,backendName:"cpu",kernelFunc:lT};function cT(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=Io(u),h=_o("float32",c),d=_o("float32",c);for(let e=0;e<s;e++){const r=US({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=US({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=HC({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=hT(i,t,n),p=Eb(u,c);for(let t=0;t<a;t++){const n=_b(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=HC({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function hT(e,t,n){const r=Io(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=dT(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Sh(r,"float32")),i=AC({inputs:{x:a},backend:n}),l=aT.kernelFunc({inputs:{a:e,b:a},backend:n}),u=aT.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o;return Tb(function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Mb(s*r,t,n),l=_b(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Fb(r,a,i,s)}return r}(Eb(a,i),r,t))}function dT(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Eb(e,t),i=n/2,o=Ab(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=HC({inputs:{real:h,imag:d},backend:s}),f=Rb(a),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=HC({inputs:{real:y,imag:x},backend:s}),w=dT(l,u,i,r,s),k=w.real,I=w.imag,$=[k.length],N=s.makeTensorInfo($,"float32",k),C=s.makeTensorInfo($,"float32",I),S=HC({inputs:{real:N,imag:C},backend:s}),E=dT(g,m,i,r,s),T=E.real,A=E.imag,R=[T.length],_=s.makeTensorInfo(R,"float32",T),F=s.makeTensorInfo(R,"float32",A),D=HC({inputs:{real:_,imag:F},backend:s}),M=Db(n,r),O=[M.real.length],L=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),B=HC({inputs:{real:L,imag:z},backend:s}),P=_E({inputs:{a:B,b:D},backend:s}),W=nS({inputs:{a:S,b:P},backend:s}),V=lT({inputs:{a:S,b:P},backend:s}),U=KC({inputs:{input:W},backend:s}),G=KC({inputs:{input:V},backend:s}),H=rE({inputs:{input:W},backend:s}),j=rE({inputs:{input:V},backend:s}),q=aE({inputs:[U,G],backend:s,attrs:{axis:0}}),K=aE({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const pT={kernelName:iu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Io(r.shape),a=r.shape[r.shape.length-1],i=sS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=cT(i,!1,n),l=sS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function fT(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||Bo(s),o=Fo(i,Io(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const gT={kernelName:ou,backendName:"cpu",kernelFunc:fT},mT={kernelName:lu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=_o(r.dtype,Io(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let r=0;r<l;r++){const s=r*u;for(let o=0;o<u;o++){const h=[i,e,r,o][2],d=Math.round(l-h),p=t+n+s+o;let f=c[p];d>=0&&d<l&&(f=c[t+n+d*u+o]),a[p]=f}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},bT=XS((e=>Math.floor(e))),yT=SC(uu,bT),xT={kernelName:uu,backendName:"cpu",kernelFunc:yT},vT=DC(((e,t)=>Math.floor(e/t))),wT=JC(cu,vT,null,"int32"),kT={kernelName:cu,backendName:"cpu",kernelFunc:wT},IT={kernelName:rh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=oE({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=nS({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=GC(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}},$T={kernelName:sh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=kE({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=nS({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=GC(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function NT(e,t,n,r,s,a,i,o,l){const u=Qd([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const CT={kernelName:pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=Io(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=fb(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=NT(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,d.values)}};function ST(e,t,n){const r=Qd(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}const ET={kernelName:du,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;IC([s,a],"gatherV2");let l=o;null==o&&(l=0);const u=Io(a.shape),c=jb(s,a,Ao(i,s.shape)[0],l),h=sS({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=sS({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,u/c.batchSize]}}),p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize],f=n.bufferSync(d),g=ST(n.bufferSync(h),f,p);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(c.outputShape,g.dtype,g.values)}},TT=DC(((e,t)=>e>t?1:0)),AT=JC(fu,TT,null,"bool"),RT={kernelName:fu,backendName:"cpu",kernelFunc:AT},_T=DC(((e,t)=>e>=t?1:0)),FT=JC(gu,_T,null,"bool"),DT={kernelName:gu,backendName:"cpu",kernelFunc:FT},MT={kernelName:bu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Io(r.shape),a=r.shape[r.shape.length-1],i=sS({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=cT(i,!0,n),l=sS({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},OT=CC(xu,(e=>Number.isFinite(e)?1:0),"bool"),LT={kernelName:xu,backendName:"cpu",kernelFunc:OT},zT=CC(vu,(e=>Math.abs(e)===1/0?1:0),"bool"),BT={kernelName:vu,backendName:"cpu",kernelFunc:zT},PT=CC(wu,(e=>Number.isNaN(e)?1:0),"bool"),WT={kernelName:wu,backendName:"cpu",kernelFunc:PT},VT=DC(((e,t)=>e<t?1:0)),UT=JC(Iu,VT,null,"bool"),GT={kernelName:Iu,backendName:"cpu",kernelFunc:UT},HT=DC(((e,t)=>e<=t?1:0)),jT=JC($u,HT,null,"bool"),qT={kernelName:$u,backendName:"cpu",kernelFunc:jT};function KT(e,t,n){const r=(t-e)/(n-1),s=jo(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const XT={kernelName:Nu,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=KT(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},YT=XS((e=>Math.log(e))),ZT=SC(Cu,YT),JT={kernelName:Cu,backendName:"cpu",kernelFunc:ZT},QT=CC(Su,(e=>Math.log1p(e))),eA={kernelName:Su,backendName:"cpu",kernelFunc:QT},tA=DC(((e,t)=>e&&t)),nA=JC(Eu,tA,null,"bool"),rA={kernelName:Eu,backendName:"cpu",kernelFunc:nA},sA=CC(Tu,(e=>e?0:1),"bool"),aA={kernelName:Tu,backendName:"cpu",kernelFunc:sA},iA=DC(((e,t)=>e||t)),oA=JC(Au,iA,null,"bool"),lA={kernelName:Au,backendName:"cpu",kernelFunc:oA},uA={kernelName:Ru,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;IC(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=Io(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},cA={kernelName:_u,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;IC(i,"LRNGrad");const h=Io(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(a.dataId).values,m=new Float32Array(h),b=h;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*g[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],m[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,m)}};function hA(e,t,n,r){const s=_o(r,Io(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function dA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=Ao(a,l);let h=c;const d=lg(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=mS(p,l,s.dtype,d,e),h=cg(h.length,u),l=e}IC(s,"max"),og("max",h,u);const[f,g]=ag(l,h),m=hA(p,Io(g),f,s.dtype),b=o.write(m,f,s.dtype);let y=f;return i&&(y=ig(f,c)),{dataId:b,shape:y,dtype:s.dtype}}const pA={kernelName:Fu,backendName:"cpu",kernelFunc:dA},fA=DC(((e,t)=>Math.max(e,t))),gA=JC(Du,fA),mA={kernelName:Du,backendName:"cpu",kernelFunc:gA},bA={kernelName:Mu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;IC(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;xo(Qp(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Up(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&$o(u.inShape,u.outShape))c=AC({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Vo(s.shape),r=DS(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},yA={kernelName:Lu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;IC(s,"maxPool3d");const c=Gp(s.shape,a,i,1,o,l,u),h=OS(n.data.get(s.dataId).values,s.shape,s.dtype,Vo(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},xA={kernelName:zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;IC([s,a],"maxPool3DGrad");const c=Gp(a.shape,i,o,1,l,u),h=function(e,t){const n=Qd(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let $=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,r,a,m);o>=$&&($=o,N=n*c*h+s*c+i)}}}n.set(N,g,b,r,s,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,$=Qd(a.shape,"float32"),N=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let l=0;for(let n=0;n<y;n+=g){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=m){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*v-1-h.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;0!==d&&(l+=N.get(e,r,a,u,t)*d)}}}$.set(l,e,n,r,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},vA={kernelName:Ou,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;IC([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Up(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=Qd(d.outShape,o.dtype,MS(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=Qd(o.shape,"float32"),$=n.data.get(s.dataId).values,N=Qd(s.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=N.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},wA={kernelName:Bu,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;IC(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Up(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=DS(e,0,n,Vo(t),s,"max"),i=MS(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},kA={kernelName:Pu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=Ao(a,s.shape),l=Io(ag(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=YC({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=sT({inputs:{a:h,b:c},backend:n});u.push(d);const p=DE({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},IA={kernelName:Wu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;IC(s,"min");const o=Ao(a,s.shape);let l=o;const u=lg(l,s.shape.length);let c=s;null!=u&&(c=bS({inputs:{x:s},backend:n,attrs:{perm:u}}),l=cg(l.length,s.shape.length)),og("min",l,c.shape.length);const[h,d]=ag(c.shape,l),p=Io(d),f=jo(Io(h),c.dtype),g=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=g[t];for(let e=0;e<p;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(i){const e=sS({inputs:{x:m},backend:n,attrs:{shape:ig(h,o)}});return n.disposeIntermediateTensorInfo(m),e}return m}},$A=DC(((e,t)=>Math.min(e,t))),NA=JC(Vu,$A),CA={kernelName:Vu,backendName:"cpu",kernelFunc:NA},SA={kernelName:Uu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;IC(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=Vo(s.shape),f=Io(o),g=o.length,m=Vo(o),b=_o(s.dtype,f);for(let e=0;e<f;e++){let t=Yo(e,g,m);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Xo(t,d,p);b[e]=h[n]}return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},EA=DC(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),TA=JC(Gu,EA),AA={kernelName:Gu,backendName:"cpu",kernelFunc:TA};function RA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=Ao([o],s.shape),u=dA({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=ig(u.shape,l),h=sS({inputs:{x:u},backend:n,attrs:{shape:c}}),d=lT({inputs:{a:s,b:h},backend:n}),p=YE({inputs:{x:d},backend:n}),f=DE({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=sS({inputs:{x:f},backend:n,attrs:{shape:c}}),m=sT({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const _A={kernelName:Rc,backendName:"cpu",kernelFunc:RA},FA={kernelName:Hu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;IC(s,"multinomial");const l=o?s:RA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=jo(Io(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=xg.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function DA(e,t,n){const r=Sh(-1,n);return AE([],t,r,e,n)}const MA={kernelName:qu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;IC(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=DA(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},OA=vm,LA={kernelName:Xu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;IC(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=OA(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},zA=wm,BA={kernelName:Yu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;IC(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=zA(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},PA=km,WA={kernelName:Zu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;IC(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=PA(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},VA=DC(((e,t)=>e!==t?1:0)),UA=JC(Ku,VA,null,"bool"),GA={kernelName:Ku,backendName:"cpu",kernelFunc:UA},HA={kernelName:Qu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;IC(s,"oneHot");const l=Io(s.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",u)}};function jA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=KC({inputs:{input:r},backend:n}),t=jA({inputs:{x:e},backend:n}),s=rE({inputs:{input:r},backend:n}),a=jA({inputs:{x:s},backend:n}),i=HC({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return fT({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const qA={kernelName:Qc,backendName:"cpu",kernelFunc:jA},KA={kernelName:Ju,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=KC({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=rE({inputs:{input:s},backend:r}),i=jA({inputs:{x:a},backend:r}),o=HC({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return fT({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function XA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return JE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{vo(a,e.shape,"All tensors passed to stack must have matching shapes"),xo(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=aE({inputs:t.map((e=>{const t=JE({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const YA={kernelName:ec,backendName:"cpu",kernelFunc:XA},ZA={kernelName:tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;IC(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=Io(s.shape),h=s.shape.length,d=Vo(s.shape),p=Io(o),f=o.length,g=Vo(o),m=_o(s.dtype,p);0!==i&&m.fill(i);for(let e=0;e<c;e++)m[Xo(Yo(e,h,d).map(((e,t)=>e+l[t])),f,g)]=u[e];return{dataId:n.write(m,o,s.dtype),shape:o,dtype:s.dtype}}},JA=DC(((e,t)=>Math.pow(e,t))),QA=JC(nc,JA),eR={kernelName:nc,backendName:"cpu",kernelFunc:QA};function tR(e,t,n,r){const[s,a]=ag(e,r),i=Qh(t,"int32"),o=jo(Io(s),i),l=Io(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const nR={kernelName:sc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;IC(s,"prod");const o=s.shape.length,l=Ao(a,s.shape),u=lg(l,o);let c=l,h=s;const d=[];null!=u&&(h=bS({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=cg(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=tR(h.shape,h.dtype,p,c);let b=g;return i&&(b=ig(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function rR(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return jo(0,r);const s=jo(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const sR={kernelName:ac,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=rR(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},aR=CC(oc,(e=>1/e)),iR={kernelName:oc,backendName:"cpu",kernelFunc:aR},oR={kernelName:dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;IC(s,"resizeBilinear");const l=Vo(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(Io([h,u,c,f])),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const v=b[0]/y[0],w=b[1]/y[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],b=u+a*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],a=t+(g[d+e]-t)*r,i=a+(n+(g[b+e]-n)*r-a)*s;m[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}},lR={kernelName:pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;IC([a,s],"resizeBilinearGrad");const o=Vo(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,$=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*$}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},uR={kernelName:cc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;IC(s,"resizeNearestNeighbor");const l=Vo(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}},cR={kernelName:hc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;IC([a,s],"resizeNearestNeighborGrad");const o=Vo(s.shape),l=Vo(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,$=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-$/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<$;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},hR={kernelName:gc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;IC(s,"reverse");const i=s.shape.length,o=Ao(a,s.shape);if(0===i)return AC({inputs:{x:s},backend:n});const l=new Ph(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},dR={kernelName:th,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=_o(r.dtype,Io(r.shape)),[u,c,h,d]=r.shape,[p,f]=lb(i,c,h),g=Math.sin(s),m=Math.cos(s),b=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],y=o[2],x=o[1];let v=(y-p)*m-(x-f)*g,w=(y-p)*g+(x-f)*m;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=b[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},pR=CC(mc,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),fR={kernelName:mc,backendName:"cpu",kernelFunc:pR},gR=XS((e=>1/Math.sqrt(e))),mR=SC(bc,gR),bR={kernelName:bc,backendName:"cpu",kernelFunc:mR};function yR(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return Qd(n,t.dtype);const p=Qd(c,t.dtype);p.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const xR={kernelName:yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=bb(0,s,i),d=yR(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},vR={kernelName:xc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;IC([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Qh(s.dtype,a.dtype),h=jo(Io(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:Io(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},wR=yb,kR=xb,IR=CC(vc,(e=>e>=0?kR*e:wR*(Math.exp(e)-1))),$R={kernelName:vc,backendName:"cpu",kernelFunc:IR},NR=CC($c,(e=>e<0?-1:e>0?1:0)),CR={kernelName:$c,backendName:"cpu",kernelFunc:NR},SR=CC(kc,(e=>Math.sin(e))),ER={kernelName:kc,backendName:"cpu",kernelFunc:SR},TR=CC(Ic,(e=>Math.sinh(e))),AR={kernelName:Ic,backendName:"cpu",kernelFunc:TR},RR=Math.log(1.1920928955078125e-7)+2,_R=CC(Cc,(e=>{const t=e>-RR,n=e<RR,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),FR={kernelName:Cc,backendName:"cpu",kernelFunc:_R},DR={kernelName:Tc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;IC([s],"spaceToBatchND");const o=Io(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=ZA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=ub(u.shape,a,o,!1),h=cb(c.length,a.length,!1),d=hb(u.shape,a,o,!1),p=sS({inputs:{x:u},backend:n,attrs:{shape:c}}),f=bS({inputs:{x:p},backend:n,attrs:{perm:h}}),g=sS({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}};function MR(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[Fo(n,0),[0,h],Fo(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=Fo(n,t*h),d=Fo(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const OR={kernelName:_c,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=MR(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function LR(e,t,n,r,s){const a=Io(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(`Input to reshape is a SparseTensor with ${a}\n          dense values, but the requested shape requires a multiple of ${u}. inputShape=${r} outputShape= ${l}`);l[c]=e}const h=Io(l);if(h!==a)throw new Error(`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${l}`);const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=Fo(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*p[r];for(let e=0;e<o;++e)g[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[g,[i,o],l]}const zR={kernelName:Fc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=LR(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function BR(e,t,n,r,s,a=!1,i=0){const o=r.length;if(o!==s.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=Fo(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=s[p];for(;;){let t=0;if(f<o){if(t=s[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(`Segment id ${m} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);m>g&&d.fill(i,g*u,m*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${l[0]})`);for(let t=0;t<u;t++)d[m*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(i,g*u,c*u),[d,h]}const PR={kernelName:Dc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=BR(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},WR={kernelName:Mc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=BR(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},VR={kernelName:Oc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=bb(0,s,o),p=yR(n.bufferSync(s),n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},UR={kernelName:Ac,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=Ao(i,s.shape)[0],l=Ub(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=US({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},GR=CC(Sc,(e=>Math.sqrt(e))),HR={kernelName:Sc,backendName:"cpu",kernelFunc:GR},jR={kernelName:zc,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;IC(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},qR=DC(((e,t)=>{const n=e-t;return n*n})),KR=JC(Lc,qR),XR={kernelName:Lc,backendName:"cpu",kernelFunc:KR},YR=CC(eh,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ZR={kernelName:eh,backendName:"cpu",kernelFunc:YR};function JR(e,t,n,r){const s=Qd(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const QR={kernelName:Bc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;IC(s,"stridedSlice");const{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=$p(s.shape,a,i,o,l,u,c,h,d),x=sS({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=US({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=sS({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else{const e=JR(y,n.bufferSync(x),g,f);v=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=sS({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}};class e_{constructor(e,t,n,r,s,a){this.separator=Ah(e),this.nGramWidths=t,this.leftPad=Ah(n),this.rightPad=Ah(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=Fo("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function t_(e,t,n,r,s,a,i,o){return new e_(n,r,s,a,i,o).compute(e,t)}const n_={kernelName:Pc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=t_(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function r_(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],s=[];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return n&&0===e.length||s.push(e),s}const r=[];let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}return r}function s_(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=r_(e[l],t,n),u=r.length;o[l]=u,a+=u,i=Math.max(i,u),s.push(...r)}const l=Fo("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const a_={kernelName:Wc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=s_(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function i_(e,t){const n=Fo("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ch(e[r]).modulo(t).getLowBitsUnsigned();return n}const o_={kernelName:Vc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=i_(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},l_=CC(Gc,(e=>Math.tan(e))),u_={kernelName:Gc,backendName:"cpu",kernelFunc:l_},c_=CC(Hc,(e=>Math.tanh(e)));function h_(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Qd(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function d_(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=_o(n,i*r),u=_o("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,c=l.subarray(i,i+r),h=u.subarray(i,i+r);for(let e=0;e<r;e++)c[e]=a[e].value,h[e]=a[e].index}const c=t.slice();return c[c.length-1]=r,[Qd(c,n,l),Qd(c,"int32",u)]}function p_(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return bo(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return bo(0,n,t-1)}(e,t);case"nearest":return function(e,t){return bo(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function f_(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function g_(e,t,n,r,s,a,i,o,l,u,c){return f_(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function m_(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*f_(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*f_(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*f_(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*f_(e,t,n,r,s,a,i,p,f,u,c))}function b_(e,t,n,r){const s=Ao(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),l=new Ph(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const d=new Ph(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const y_=[lS,cS,dS,fS,rS,gS,xS,vS,wS,kS,$S,CS,ES,RS,FS,LS,zS,BS,PS,oS,WS,HS,KS,ZC,JS,eE,jC,tE,iE,uE,cE,lE,dE,pE,hE,gE,bE,yE,xE,vE,wE,IE,$E,NE,CE,SE,TE,EE,aT,OE,TC,LE,PE,KE,ZE,QE,nT,pT,gT,mT,xT,kT,IT,$T,CT,ET,RT,DT,RC,MT,sE,LT,BT,WT,FC,GT,qT,XT,JT,eA,rA,aA,lA,uA,cA,mA,bA,yA,xA,vA,wA,pA,kA,IA,CA,SA,AA,FA,FE,MA,LA,BA,WA,GA,HA,KA,YA,ZA,eR,LC,nR,sR,XC,iR,BC,WC,aS,oR,lR,uR,cR,hR,dR,fR,bR,xR,vR,$R,UC,CR,ER,AR,GS,_A,FR,DR,OR,zR,PR,WR,VR,UR,HR,jR,XR,ZR,QR,n_,a_,o_,uT,ME,u_,{kernelName:Hc,backendName:"cpu",kernelFunc:c_},{kernelName:jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;IC(s,"tile");const i=h_(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:qc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;IC(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=d_(o,s.shape,s.dtype,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},yS,{kernelName:Kc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=Vo(s.shape),y=b[0],x=b[1],v=b[2],w=_o(s.dtype,Io(m));w.fill(l);const k=r.data.get(s.dataId).values,I=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<g;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=p_(c,d,o),g=p_(p,h,o);switch(i){case"nearest":a=g_(k,h,d,y,x,v,e,g,f,s,l);break;case"bilinear":a=m_(k,h,d,y,x,v,e,g,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*y+n*x+r*v+s]=a}return r.makeTensorInfo(m,s.dtype,w)}return{dataId:r.write(w,m,s.dtype),shape:s.shape,dtype:s.dtype}}},{kernelName:Yc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;IC(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=b_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Zc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=US({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=sS({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},{kernelName:Jc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;IC(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=JE({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Sh(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=BE({inputs:{a:r,b:c},backend:n}),i=YC({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=_E({inputs:{a:i,b:s},backend:n}),h=DE({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=XA({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},qA];for(const e of y_)ch(e);const x_={},v_={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function w_(e){if(!(e in x_)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete x_[e]}),!1),1===e?t.getContext("webgl",v_)||t.getContext("experimental-webgl",v_):t.getContext("webgl2",v_)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;x_[e]=t}const t=x_[e];return t.isContextLost()?(delete x_[e],w_(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),x_[e])}var k_,I_,$_;function N_(e,t){return[t,e]}function C_(e){const t=Io(e);return Co(Math.ceil(t/4))}function S_(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function E_(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===el().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function T_(e,t){const n=t();return el().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function A_(e){return!!(el().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function R_(e,t){return B_(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(k_||(k_={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(I_||(I_={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}($_||($_={}));const __=/ERROR: [0-9]+:([0-9]+):/g;function F_(e,t){if(T_(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function D_(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(T_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),T_(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),T_(e,(()=>e.enableVertexAttribArray(o))),!0)}function M_(e,t,n,r){T_(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),T_(e,(()=>e.activeTexture(e.TEXTURE0+n))),T_(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),T_(e,(()=>e.uniform1i(n,r)))}function O_(e,t,n){T_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),T_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function L_(e,t){T_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),T_(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function z_(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function B_(e,t,n){const r=T_(e,(()=>t()));if(null==r)throw new Error(n);return r}function P_(e,t=2){return Io(e.slice(0,e.length-t))}function W_(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function V_(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[P_(e),...W_(e)]),t}function U_(e){return e%2==0}function G_(e,t){if($o(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(U_(n)&&U_(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&U_(e[0])&&U_(t[0])}let H_,j_;function q_(e,t){return null!=e.getExtension(t)}function K_(e){try{if(null!=w_(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function X_(e){const t=E_(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function Y_(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&xo("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Z_=el();function J_(){let e,t,n,r,s,a,i,o,l,u;return 2===el().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Q_(e,t,n="index"){const r=Vo(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function eF(e){const t=Vo(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Z_.registerFlag("HAS_WEBGL",(()=>Z_.getNumber("WEBGL_VERSION")>0)),Z_.registerFlag("WEBGL_VERSION",(()=>K_(2)?2:K_(1)?1:0)),Z_.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Z_.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Z_.get("WEBGL_VERSION"))),Z_.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Z_.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Z_.registerFlag("WEBGL_PACK",(()=>Z_.getBool("HAS_WEBGL"))),Z_.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_CLIP",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_PACK_REDUCE",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_CONV_IM2COL",(()=>Z_.getBool("WEBGL_PACK"))),Z_.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==H_){const t=w_(e);H_=t.getParameter(t.MAX_TEXTURE_SIZE)}return H_}(Z_.getNumber("WEBGL_VERSION")))),Z_.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==j_){const t=w_(e);j_=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,j_)}(Z_.getNumber("WEBGL_VERSION")))),Z_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Z_.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=w_(e);return t=q_(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:q_(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Z_.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Z_.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!hd())),Z_.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=w_(e);if(1===e){if(!q_(t,"OES_texture_float"))return!1}else if(!q_(t,"EXT_color_buffer_float"))return!1;return X_(t)}(Z_.getNumber("WEBGL_VERSION")))),Z_.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Z_.getBool("WEBGL_FORCE_F16_TEXTURES")&&Z_.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Z_.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=w_(e);if(1!==e){if(q_(t,"EXT_color_buffer_float"))return X_(t);const e="EXT_color_buffer_half_float";if(q_(t,e)){const n=t.getExtension(e);return function(e,t){const n=E_(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!q_(t,"OES_texture_float")&&!!q_(t,"WEBGL_color_buffer_float")&&X_(t)}(Z_.getNumber("WEBGL_VERSION")))),Z_.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Z_.getNumber("WEBGL_VERSION"))&&null!=w_(e).fenceSync;var e})),Z_.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Z_.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Z_.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Z_.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>hd()&&Z_.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Z_.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128));const tF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class nF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=k_.DENSE;const t=C_(e),n=J_();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Q_(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class rF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=k_.DENSE;const t=C_(e),n=J_();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Q_(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class sF{constructor(e){this.variableNames=["A"],this.outTexUsage=I_.DOWNLOAD;const t=J_();this.outputShape=e,this.userCode=`\n      ${tF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class aF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=I_.DOWNLOAD;const t=J_();this.outputShape=e,this.userCode=`\n      ${tF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class iF{constructor(e,t,n=!1){this.variableNames=["A"];const r=J_(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${eF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class oF{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=J_(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${eF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function lF(e,t,n,r,s,a){!function(e,t){const n=el().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return B_(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return T_(e,(()=>e.bindTexture(o,i))),T_(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),T_(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),T_(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),T_(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),T_(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))),T_(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function uF(e){return e.internalFormatFloat}function cF(e){return e.internalFormatHalfFloat}function hF(e){return e.downloadTextureFormat}function dF(e){return e.internalFormatPackedFloat}function pF(e){return e.internalFormatPackedHalfFloat}class fF{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=el().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){x_[e]=t}(t,e)):this.gl=w_(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===el().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=R_(this.gl,e),q_(this.gl,t))this.textureHalfFloatExtension=R_(this.gl,t);else if(el().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),q_(this.gl,r))this.colorBufferHalfFloatExtension=R_(this.gl,r);else if(el().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",q_(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!q_(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=B_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return T_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),T_(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=B_(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return T_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),T_(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return B_(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=E_(this.gl,this.textureHalfFloatExtension)}get debug(){return el().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;T_(e,(()=>e.finish())),T_(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),T_(e,(()=>e.deleteFramebuffer(this.framebuffer))),T_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),T_(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),T_(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=N_(t,n);return lF(e,s,a,uF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=N_(t,n);return lF(e,s,a,cF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=N_(t,n);return lF(e,s,a,hF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){T_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?T_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):T_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),T_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;T_(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),T_(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),T_(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=S_(t,n);return lF(e,s,a,pF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=S_(t,n);return lF(e,s,a,dF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(L_(this.gl,this.framebuffer),this.outputTexture=null),T_(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=N_(t,n),i=new Uint8Array(t*n*4);return T_(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=S_(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();T_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return T_(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),T_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),T_(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(el().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return T_(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=B_(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(T_(e,(()=>e.shaderSource(n,t))),T_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=__.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>So((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${So(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=J_();return function(e,t){const n=B_(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(T_(e,(()=>e.shaderSource(n,t))),T_(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return B_(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return T_(t,(()=>t.attachShader(r,this.vertexShader))),T_(t,(()=>t.attachShader(r,n))),function(e,t){if(T_(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&F_(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return T_(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),D_(e,t,"clipSpacePos",n,3,20,0)&&D_(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&T_(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&F_(this.gl,this.program),T_(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return B_(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),T_(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),M_(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=S_(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&F_(this.gl,this.program),z_(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),T_(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),T_(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=R_(this.gl,2===el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Eo((()=>this.disposed||this.isQueryAvailable(e,el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||Eo((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),O_(this.gl,e,this.framebuffer),this.debug&&z_(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(O_(this.gl,this.outputTexture,this.framebuffer),this.debug&&z_(this.gl)):L_(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;O_(r,e,this.framebuffer),this.debug&&z_(r),this.outputTexture=e,T_(r,(()=>r.viewport(0,0,t,n))),T_(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),T_(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:gF}=r;function mF(e,t,n,r){const s=[];e.forEach((e=>{const t=Io(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`))}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?yF(e):bF(e);const s=e.shapeInfo.logicalShape,a=t.logicalShape;return s.length<=a.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=gF(e.shapeInfo.logicalShape,t.logicalShape),l=NF(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===Io(e.shapeInfo.logicalShape),g=1===Io(t.logicalShape);if(1!==a||f||g){if(f&&!g)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&$o(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=NF(l),c=gF(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),o=t.texShape,l=J_(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,h,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${xF}\n    ${vF}\n    ${wF}\n  `}(l);return t.isPacked?(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if($o(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return $o(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=Q_(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=Q_(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=Q_(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Q_(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,o),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(d+=kF),[d,u,h,a,c,i,n].join("\n")}function bF(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${IF(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${$F(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=IF(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(null!=s&&$o(t,s)){const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:i}=Ro(t),o=a;if(o.length<t.length){const t=["row","col"];return`\n      ${bF(CF(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${SF(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${$F(e)}\n      }\n    `;const l=s[0],u=s[1],c=IF(n);return 1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${l}, ${u}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[1]*t[2],a=t[2],{newShape:i,keptDims:o}=Ro(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${bF(CF(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${SF(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${a}, 1)));\n        ${$F(e)}\n      }\n    `;const u=e.shapeInfo.texShape,c=u[0],h=u[1],d=e.shapeInfo.flatOffset;if(h===s&&null==d)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${c}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===a&&null==d)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${a} + depth + ${IF(n)};\n        vec2 uv = uvFromFlat(${c}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[3],a=t[2]*s,i=t[1]*a,{newShape:o,keptDims:l}=Ro(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${bF(CF(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${SF(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${a}, ${s}, 1)));\n        ${$F(e)}\n      }\n    `;const u=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],d=c[1];if(d===i&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==u)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${a} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${d}, index + ${IF(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=Ro(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${bF(CF(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${SF(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${$F(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${IF(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=Ro(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${bF(CF(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${SF(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${$F(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${IF(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function yF(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${J_().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=J_();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=s[0],i=s[1],o=J_();if(null!=s&&$o(t,s))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${yF(CF(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${SF(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${J_().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${J_().texture2D}(${r}, uv);\n    }\n  `}(e)}}const xF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function IF(e){return`offset${e}`}function $F(e){const t=e.name,n=Io(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function NF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function CF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function SF(e,t){return t.map((t=>e[t])).join(", ")}function EF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!$o(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!$o(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:TF,bincountImpl:AF,bincountReduceImpl:RF,ceilImpl:_F,concatImpl:FF,equalImpl:DF,expImpl:MF,expm1Impl:OF,floorImpl:LF,gatherNdImpl:zF,gatherV2Impl:BF,greaterImpl:PF,greaterEqualImpl:WF,lessImpl:VF,lessEqualImpl:UF,linSpaceImpl:GF,logImpl:HF,maxImpl:jF,maximumImpl:qF,minimumImpl:KF,multiplyImpl:XF,negImpl:YF,notEqualImpl:ZF,prodImpl:JF,rangeImpl:QF,rsqrtImpl:eD,simpleAbsImpl:tD,sliceImpl:nD,sparseFillEmptyRowsImpl:rD,sparseReshapeImpl:sD,sparseSegmentReductionImpl:aD,stridedSliceImpl:iD,stringNGramsImpl:oD,stringSplitImpl:lD,stringToHashBucketFastImpl:uD,subImpl:cD,tileImpl:hD,topKImpl:dD,transposeImpl:pD,uniqueImpl:fD}=s;function gD(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function mD(e,t){return 1===t?[e]:gD(e,t)}class bD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=mD("rc",t),r=NF(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class yD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Q_(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${eF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xD{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=wD(t,n),s=kD(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=vD(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===$_.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===$_.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===$_.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===$_.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===$_.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=wD(n,r),a=kD(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=vD(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=el().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function vD(e,t,n,r,s){const a=function(e,t){switch(e){case $_.PACKED_2X2_FLOAT32:return dF(t);case $_.PACKED_2X2_FLOAT16:return pF(t);case $_.UNPACKED_FLOAT32:return uF(t);case $_.UNPACKED_FLOAT16:return cF(t);case $_.PACKED_4X1_UNSIGNED_BYTE:return hF(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=S_(e[0],e[1]);i=t*n}else{const[t,n]=N_(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function wD(e,t){if(e===I_.UPLOAD)return $_.PACKED_2X2_FLOAT32;if(e===I_.RENDER||null==e)return function(e){return el().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?$_.PACKED_2X2_FLOAT32:$_.UNPACKED_FLOAT32:e?$_.PACKED_2X2_FLOAT16:$_.UNPACKED_FLOAT16}(t);if(e===I_.DOWNLOAD||e===I_.PIXELS)return $_.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function kD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class ID{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const $D="return abs(x);",ND="return x;";class CD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class SD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=mD("rc",t),r=NF(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const ED=Xb,TD={},AD=el().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class RD extends fo{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!el().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=w_(el().getNumber("WEBGL_VERSION"));this.binaryCache=((t=el().getNumber("WEBGL_VERSION"))in TD||(TD[t]={}),TD[t]),this.gpgpu=new fF(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new xD(this.gpgpu),this.numMBBeforeWarning=null==el().global.screen?1024:el().global.screen.height*el().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new po(this,Ep())}nextDataId(){return RD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((el().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||el().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:I_.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(el().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:I_.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new CD(i,ND):new ID(i,ND);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Th()),c="complex64"===r?Eb(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Th()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new CD(r,ND):new ID(r,ND);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!el().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===el().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&el().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...C_(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Eb(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=Io(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ep().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Rh(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qd(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!A_(n)){if(el().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=Io(t);if(el().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...C_(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=el().getBool("WEBGL_PACK")&&!0===r,i=a?V_(t):t,o=a?new aF(i):new sF(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ko(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ko(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Th(),endMs:null}}endTimer(e){return el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Th(),e)}async getQueryTime(e){if(el().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=AD){return el().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Io(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Cb("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return ED(e.shape,t)}packedUnaryOp(e,t,n){const r=new CD(e.shape,t),s=this.compileAndRun(r,[e],n);return Ep().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=tD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(el().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$D,e.dtype);const t=new ID(e.shape,$D),n=this.compileAndRun(t,[e]);return Ep().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Lo(n[0])){const s=n.map((e=>Ah(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Ep().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new SD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new bD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[P_(e.shape),...W_(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[P_(t),...W_(t)],a=new yD(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=V_(r);let i;return i=n?new rF(a):new nF(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,s=!1){const a=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(a.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===k_.DENSE){const t=C_(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===Io(a.shape))return i.values=_o(a.dtype,0),a;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Io(t.shape)<=el().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!G_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,l,u),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const s=t.userCode,a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=mF(a,o,s,t.packedInputs),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===el().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;d[r]=e.getUniformLocation(u,r,s),d[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,s)}return{program:t,source:l,webGLProgram:u,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:c,nanLoc:h}}(this.gpgpu,e,l,u))),d=null!=this.activeTimers;let p;d&&(p=this.startTimer()),function(e,t,n,r,s){EF(t.inShapeInfos,n),EF([t.outShapeInfo],[r]);const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a,i[0],i[1]):e.setOutputMatrixTexture(a,i[0],i[1]),e.setProgram(t.webGLProgram),1===el().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`];if(null!=a)if(n.isUniform)if(Io(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,r)})),null!=s&&s(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,u,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=el().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Th();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!el().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(el().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ap((()=>{if(!el().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=el().getBool("DEBUG");el().set("DEBUG",!1);const t=this.abs(Mp(1e-8)).dataSync()[0];if(el().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Th());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=el().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?yo(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Ro(e);e=t.newShape}let r=Io(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=P_(e);let n=2,s=2;return e.length&&([n,s]=W_(e)),r=t*(n/2)*(s/2),Co(r).map((e=>2*e))}return Co(r)}(n,o),t.texShape=c),null!=s){const e=V_(n);let a,i=c[1],h=c[0];const d=s instanceof Uint8Array;o?([i,h]=S_(c[0],c[1]),a=new oF(e,[h,i],d)):a=new iF(e,[h,i],d);const p=this.makeTensorInfo([h,i],r);this.texData.get(p.dataId).usage=d?I_.PIXELS:I_.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,h,s);const f=!0,g=this.runWebGLProgram(a,[p],r,null,f),m=this.texData.get(g.dataId);t.texture=m.texture,t.texShape=m.texShape,t.isPacked=m.isPacked,t.usage=m.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),t.values=null,l&&(this.uploadWaitMs+=Th()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Oo(t)}}RD.nextDataId=0,dd()&&Fp("webgl",(()=>new RD),2);class _D{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Af(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class FD{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Af(t,n);const s=this.outputShape.length;let a="";if(r)if(0===s||1===Io(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${NF(s)} coords = getOutputCoords();\n        `,1===s)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=mD("coords",s);a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function DD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const MD={kernelName:mu,backendName:"webgl",kernelFunc:DD};function OD(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=DD({inputs:{x:r},backend:n}),l=DD({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const LD={kernelName:Tl,backendName:"webgl",kernelFunc:OD},zD="return (a < 0.) ? b * a : a;",BD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",PD={kernelName:ku,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Sh(a,"float32")),o=el().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new FD(BD,s.shape,i.shape):new _D(zD,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],s.dtype);return n.disposeIntermediateTensorInfo(i),l}},WD="return (a < 0.) ? b * a : a;",VD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",UD={kernelName:rc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=el().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new FD(VD,r.shape,s.shape):new _D(WD,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}};function GD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=el().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new CD(i.shape,t):new ID(i.shape,e),o.runWebGLProgram(u,[i],l)}}function HD({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new _D(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],Qh(n.dtype,r.dtype))})),a=OD({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Qh(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?qb(e):e,r="string"===l.dtype?qb(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=el().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new FD(t,l.shape,u.shape,n):new _D(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function jD(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?VD:WD;if("leakyrelu"===e)return t?BD:zD;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class qD{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class KD{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Af(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const XD="return a * b;";function YD(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Qh(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new KD("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new KD("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=OD({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=XF(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=el().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new FD(XD,r.shape,s.shape):new _D(XD,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const ZD={kernelName:ju,backendName:"webgl",kernelFunc:YD};function JD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=Io(s.shape),l=To(a,o),u=Io(l);xo(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||G_(s.shape,l)||null!==c.texture&&G_(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[P_(e.shape),...W_(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[P_(t),...W_(t)],i=new yD(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(s,l,i)}const QD={kernelName:uc,backendName:"webgl",kernelFunc:JD};class eM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${No(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class tM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function nM(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=ob(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new eM({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new eM({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new tM({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class rM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=NF(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class sM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=NF(this.rank),s=gD("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function aM(e,t,n){const r=el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sM(e.shape,t):new rM(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function iM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=Ao(s,e.shape);let o=i;const l=lg(o,a),u=null!=l;let c=e;u&&(c=aM(e,l,r),o=cg(o.length,a)),og("sum",o,a);const[h,d]=ag(c.shape,o);let p=h;n&&(p=ig(h,i));const f=Io(d),g=JD({inputs:{x:c},attrs:{shape:[Io(e.shape)/f,f]},backend:r}),m=nM(g,ed(e.dtype),"sum",r),b=JD({inputs:{x:m},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),u&&r.disposeIntermediateTensorInfo(c),b}(s,a,i,n)}const oM={kernelName:Ec,backendName:"webgl",kernelFunc:iM};function lM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=pD(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=aM(s,a,i);return u}const uM={kernelName:Xc,backendName:"webgl",kernelFunc:lM};function cM({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=Io(g),y=Io(m);xo(u>=2&&c>=2&&(b===y||1===b||1===y),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${m}).`));const x=(b>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);xo(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[b,h,p]:[b,p,h],w=r?[y,f,d]:[y,d,f],k=JD({inputs:{x:e},backend:s,attrs:{shape:v}}),I=JD({inputs:{x:t},backend:s,attrs:{shape:w}}),$=[k,I],N=Math.max(b,y),C=n?k.shape[1]:k.shape[2],S=null!=a,E=null!=i,T="leakyrelu"===l,A=null!=l?jD(l,!0):null;let R;if((1===p||1===f)&&C>1e3&&!1===(S||E||T||null!=A)){let e=k,t=I;n&&(e=lM({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=lM({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===f;let i=e;1!==f&&(i=JD({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),$.push(i));const o=1===f?2:1;let l=t;a&&(l=JD({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),$.push(l));const u=YD({inputs:{a:i,b:l},backend:s});R=iM({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=Qh(e.dtype,t.dtype),u=new qD(v,w,[N,p,f],n,r,S,A,E,T),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),T){const e=s.makeTensorInfo([],"float32",Sh(o,"float32"));c.push(e),$.push(e)}R=s.runWebGLProgram(u,c,l)}const _=JD({inputs:{x:R},backend:s,attrs:{shape:x}});$.push(R);for(const e of $)s.disposeIntermediateTensorInfo(e);return _}const hM={kernelName:nh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return cM({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},dM="return abs(x);",pM={kernelName:al,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=tD(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=el().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CD(r.shape,dM):new ID(r.shape,dM),n.runWebGLProgram(s,[r],r.dtype)}},fM=GD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gM={kernelName:il,backendName:"webgl",kernelFunc:fM},mM=GD({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bM={kernelName:ol,backendName:"webgl",kernelFunc:mM},yM="return a + b;",xM=HD({opSnippet:yM,packedOpSnippet:yM,supportsComplex:!0,cpuKernelImpl:TF}),vM={kernelName:ll,backendName:"webgl",kernelFunc:xM};class wM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class kM{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const IM={kernelName:ul,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return DD({inputs:{x:s[0]},backend:r});if(s.length>el().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Qh(e,t))),i=s.map((e=>e.shape)),o=el().getBool("WEBGL_PACK")?new kM(s[0].shape,i):new wM(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},$M={kernelName:cl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Ao(a,s.shape);let u=l;const c=lg(u,o);let h=s;null!=c&&(h=lM({inputs:{x:s},backend:n,attrs:{perm:c}}),u=cg(u.length,o)),og("all",u,o);const[d,p]=ag(h.shape,u),f=JD({inputs:{x:h},backend:n,attrs:{shape:[-1,Io(p)]}}),g=nM(f,f.dtype,"all",n);let m;return m=JD(i?{inputs:{x:g},backend:n,attrs:{shape:ig(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},NM={kernelName:hl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Ao(a,s.shape);let u=l;const c=lg(u,o);let h=s;null!=c&&(h=lM({inputs:{x:s},backend:n,attrs:{perm:c}}),u=cg(u.length,o)),og("any",u,o);const[d,p]=ag(h.shape,u),f=JD({inputs:{x:h},backend:n,attrs:{shape:[-1,Io(p)]}}),g=nM(f,f.dtype,"any",n);let m;return m=JD(i?{inputs:{x:g},backend:n,attrs:{shape:ig(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}};class CM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class SM{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,xo(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=NF(o),u=mD("coords",o);let c,h;if(1===a){h=o+1;const e=NF(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=mD("sourceLocR",h-1).concat("inIdx.r"),m=mD("sourceLocG",h-1).concat("inIdx.g"),b=mD("sourceLocB",h-1).concat("inIdx.b"),y=mD("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function EM(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=ob(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new CM(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=EM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function TM(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=ob(s[s.length-1]),i=new SM(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=TM(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function AM(e,t,n,r){const s=[n];if(og("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!el().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,i]=ag(t.shape,s),o=Io(i),l=JD({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(l);const u=EM(e,l,r);n.push(u);const c=JD({inputs:{x:u},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),c}return TM(e,t,r)}const RM={kernelName:dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=Ao(a,s.shape);const o=lg(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lM({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=cg(i.length,l.shape.length)),og("argMax",[i[0]],l.shape.length);const c=AM(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},_M={kernelName:pl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=Ao(a,s.shape);const o=lg(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lM({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=cg(i.length,l.shape.length)),og("argMin",[i[0]],l.shape.length);const c=AM(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},FM=GD({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),DM={kernelName:fl,backendName:"webgl",kernelFunc:FM},MM=GD({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),OM={kernelName:gl,backendName:"webgl",kernelFunc:MM},LM=GD({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),zM={kernelName:ml,backendName:"webgl",kernelFunc:LM},BM=HD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),PM={kernelName:yl,backendName:"webgl",kernelFunc:BM},WM=GD({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),VM={kernelName:bl,backendName:"webgl",kernelFunc:WM};class UM{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class GM{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const HM={kernelName:xl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Y_(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;xo(Qp(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Up(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$o(u.inShape,u.outShape))return DD({inputs:{x:s},backend:n});const c=new UM(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},jM={kernelName:wl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Gp(s.shape,a,i,[1,1,1],o,l,u),h=new GM(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class qM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XM={kernelName:kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Gp(i.shape,o,l,[1,1,1],u,c),d=new KM(h);return n.runWebGLProgram(d,[s],i.dtype)}},YM={kernelName:vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;Y_([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Up(i.shape,o,l,1,u),h=new qM(c);return n.runWebGLProgram(h,[s],i.dtype)}},ZM={kernelName:Il,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return cM({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class JM{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Af(e,t),Af(e,n);let i="0.0";null!=r&&(Af(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Af(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class QM{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Af(e,t),Af(e,n);let i="vec4(0.0)";null!=r&&(Af(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Af(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const eO={kernelName:hu,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;xo(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),xo(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),xo(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const d=el().getBool("WEBGL_PACK_NORMALIZATION")?new QM(r.shape,s.shape,a.shape,c,h,l):new JM(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(d,u,u[0].dtype)}};class tO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=NF(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return nO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${nO[t]} = start[${t}] + coords.${nO[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const nO=["x","y","z","w","u","v"];class rO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=NF(this.rank),n=mD("coords",this.rank),r=mD("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function sO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Ip(s,a,i);if(up(s,o,l),0===Io(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=nD(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=wp(s.shape,o,l);if(u||!c){const e=el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rO(l):new tO(l),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=kp(t,Vo(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const aO={kernelName:wc,backendName:"webgl",kernelFunc:sO},iO={kernelName:$l,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;xo(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=ub(s.shape,a,o),u=cb(l.length,a.length),c=hb(s.shape,a,o),h=db(i,a.length),d=pb(c,i,a.length),p=[],f=JD({inputs:{x:s},backend:n,attrs:{shape:l}}),g=lM({inputs:{x:f},backend:n,attrs:{perm:u}}),m=JD({inputs:{x:g},backend:n,attrs:{shape:c}}),b=sO({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},oO={kernelName:Nl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=AF(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},lO=HD({opSnippet:"return float(a != b);",cpuKernelImpl:ZF,dtype:"bool"}),uO={kernelName:Ku,backendName:"webgl",kernelFunc:lO};function cO(e){const{inputs:t,backend:n}=e,{input:r}=t;return DD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const hO={kernelName:ic,backendName:"webgl",kernelFunc:cO},dO={kernelName:Cl,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return DD({inputs:{x:a},backend:r});const t=eg(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=OD({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=cO({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Do(a.dtype,i)){const e=DD({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new ID(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",_o("bool",1)),t=lO({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},pO="return ceil(x);",fO=GD({opSnippet:pO,packedOpSnippet:pO,cpuKernelImpl:_F}),gO={kernelName:Sl,backendName:"webgl",kernelFunc:fO};class mO{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class bO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const yO={kernelName:El,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=el().getBool("WEBGL_PACK_CLIP")?new bO(s.shape):new mO(s.shape);const l=o.getCustomSetupFunc(a,i);return n.runWebGLProgram(o,[s],s.dtype,l)}};class xO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function vO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const wO={kernelName:Al,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new xO(r.shape),i=[vO(r,s.complexTensorInfos.real),vO(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class kO{constructor(e){this.outputShape=[],this.outputShape=ab(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class IO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ab(e,t);const n=this.outputShape,r=n.length,s=NF(r),a=mD("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${$O(i,l,t)}),\n            vec2(${$O(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${$O(i,l,p)}),\n          vec2(${$O(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function $O(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function NO(e){const{inputs:t,backend:n}=e,{input:r}=t;return DD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const CO={kernelName:yu,backendName:"webgl",kernelFunc:NO};function SO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>cO({inputs:{input:e},backend:n}))),s=e.map((e=>NO({inputs:{input:e},backend:n}))),a=SO(r,t,n),i=SO(s,t,n),o=OD({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=Io(e.shape.slice(t));return JD({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=ab(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=FF(a,i,r,o),u=ab(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>el().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=SO(e.slice(0,r),t,n),a=SO(e.slice(r),t,n),i=SO([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new IO(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:i}=function(e,t,n){const r=ab(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>JD({inputs:{x:e},attrs:{shape:[-1,Io(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new kO(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=JD({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function EO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=Ao(s,t[0].shape)[0],i=ab(t.map((e=>e.shape)),a);if(0===Io(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Io(e.shape)>0));return 1===o.length?DD({inputs:{x:o[0]},backend:n}):(sb(o.map((e=>e.shape)),a),SO(o,a,n))}const TO={kernelName:Rl,backendName:"webgl",kernelFunc:EO};class AO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class RO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _O{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=J_(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${g.output} = result;\n      }\n    `}}function FO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat;let f;const g=[],m=(1===h||1===d)&&c>1e3,b=l[2]%2!=0&&!!u.isPacked;if(!m&&el().getBool("WEBGL_LAZILY_UNPACK")&&el().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const c=p?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,xo(G_(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const m=JD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(m);const b=cM({a:h,b:m,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(b.dataId);xo(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,y.shape=n.outShape,f=DD({inputs:{x:b},backend:r}),f.shape=n.outShape,g.push(b)}else{const u=JD({inputs:{x:e},backend:r,attrs:{shape:[1,p?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=JD({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=cM({a:u,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=JD({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return f}function DO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[g,m],y=[],x=JD({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=JD({inputs:{x:t},backend:r,attrs:{shape:[1,g,Io(t.shape)/g]}});y.push(x),y.push(v);const w=new _O(b,x.shape,n),k=r.runWebGLProgram(w,[x],"float32"),I=JD({inputs:{x:k},backend:r,attrs:{shape:[1,b[0],b[1]]}});y.push(k),y.push(I);const $=null!=s,N=null!=a,C="leakyrelu"===o,S=o?jD(o,!0):null,E=new qD(I.shape,v.shape,[1,m,n.outChannels],!0,!1,$,S,N,C),T=[I,v];if(s&&T.push(s),N&&T.push(a),C){const e=r.makeTensorInfo([],"float32",Sh(i,"float32"));T.push(e),y.push(e)}const A=r.runWebGLProgram(E,T,"float32"),R=JD({inputs:{x:A},backend:r,attrs:{shape:f?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return R}const MO={kernelName:_l,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=ef(l),d=Hp(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(el().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])p=DO({x:s,filter:a,convInfo:d,backend:n});else{const e=new AO(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=FO({x:s,filter:a,convInfo:d,backend:n});const f=JD({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class OO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class LO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const PO={kernelName:Fl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=ef(l),d=Hp(s.shape,c,i,1,o,u,!1,h),p=new OO(d);return n.runWebGLProgram(p,[s,a],"float32")}},WO={kernelName:Dl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=ef(u),d=Hp(i,a.shape,o,1,l,c,!1,h),p=new LO(d);return n.runWebGLProgram(p,[s,a],"float32")}},VO={kernelName:Ml,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=jp(s.shape,a.shape,i,l,o),c=new RO(u);return n.runWebGLProgram(c,[s,a],"float32")}},UO={kernelName:Ol,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=jp(s.shape,l,i,1,o),c=new zO(u);return n.runWebGLProgram(c,[s,a],"float32")}},GO={kernelName:Ll,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=jp(l,a.shape,o,1,i),c=new BO(u);return n.runWebGLProgram(c,[s,a],"float32")}},HO=GD({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),jO={kernelName:zl,backendName:"webgl",kernelFunc:HO},qO=GD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),KO={kernelName:Bl,backendName:"webgl",kernelFunc:qO};class XO{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const YO={kernelName:Wl,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new XO(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class ZO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${JO(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${NF(r)} coords = getOutputCoords();\n        int end = ${QO(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${QO(r,"coords")} = idx;\n          val += getX(${JO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function JO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function QO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const eL={kernelName:Pl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,l=s.shape.length,u=lg([a],l);let c=s;null!=u&&(c=lM({inputs:{x:s},backend:n,attrs:{perm:u}}));const h=cg(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const d=c.shape[h];let p=DD({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new ZO(c.shape,!1,o),r=t.getCustomSetupFunc(e),s=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new ZO(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=lM({inputs:{x:p},backend:n,attrs:{perm:ug(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},tL={kernelName:Vl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=AF(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=RF(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class nL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rL={kernelName:Ul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;xo(a>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${a}`));const o=s.shape[0],l="NHWC"===i?s.shape[1]:s.shape[2],u="NHWC"===i?s.shape[2]:s.shape[3],c="NHWC"===i?s.shape[3]:s.shape[1],h=l*a,d=u*a,p=c/(a*a),f=new nL("NHWC"===i?[o,h,d,p]:[o,p,h,d],a,i);return n.runWebGLProgram(f,[s],s.dtype)}};class sL{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,g=e.outChannels/e.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class aL{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.outChannels/e.inChannels,i=e.inHeight,o=e.inWidth,l=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,m=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<f;e++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<(m+1)/2;t++){const n=2*t,r=n*p;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<g&&(u%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,b+=1===p&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<g)){const e=u%2==0?yo(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,p>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<g&&(u%2==1?(b+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${o} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<g&&(b+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<g&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<g&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${l}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const iL={kernelName:Gl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),xo(Qp(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Hp(s.shape,a.shape,i,c,o,u,!0);let d;return d=el().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new aL(h):new sL(h),n.runWebGLProgram(d,[s,a],"float32")}};class oL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uL={kernelName:Hl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Hp(s.shape,c,i,o,l,u,!0),d=new oL(h);return n.runWebGLProgram(d,[s,a],"float32")}},cL={kernelName:jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Hp(c,a.shape,i,o,l,u,!0),d=new lL(h);return n.runWebGLProgram(d,[s,a],"float32")}};class hL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const dL={kernelName:ql,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=Io(r.shape),i=JD({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new hL(a),l=n.runWebGLProgram(o,[i],i.dtype),u=JD({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class pL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fL={kernelName:Kl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Vp(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new pL(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=JD({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},gL={kernelName:Jl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Lb(s,a.length);Bb(i.length,l,a);const{path:u,steps:c}=Pb(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=zb(p,l[t]);let s;Wb(e)?s=a[t]:(s=lM({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);$o(s.shape,i)||(s=JD({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=YD({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=iM({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},mL=GD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),bL={kernelName:Ql,backendName:"webgl",kernelFunc:mL},yL={kernelName:eu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=el().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new FD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new _D("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},xL=HD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:DF}),vL={kernelName:nu,backendName:"webgl",kernelFunc:xL},wL=GD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${vb};\n  float a1 = ${wb};\n  float a2 = ${kb};\n  float a3 = ${Ib};\n  float a4 = ${$b};\n  float a5 = ${Nb};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),kL={kernelName:tu,backendName:"webgl",kernelFunc:wL},IL="return exp(x);",$L=GD({opSnippet:IL,packedOpSnippet:IL,cpuKernelImpl:MF}),NL={kernelName:ru,backendName:"webgl",kernelFunc:$L};function CL(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(xo(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),JD({inputs:{x:a},backend:r,attrs:{shape:o}})}const SL={kernelName:su,backendName:"webgl",kernelFunc:CL},EL="return exp(x) - 1.0;",TL=GD({opSnippet:EL,packedOpSnippet:EL,cpuKernelImpl:OF}),AL={kernelName:au,backendName:"webgl",kernelFunc:TL};class RL{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function _L(e,t,n){const r=n.texData.get(e.dataId),s=Io(e.shape),a=e.shape[e.shape.length-1],i=JD({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new RL("real",o,t),u=new RL("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=OD({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=JD({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const FL={kernelName:iu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _L(r,!1,n)}};class DL{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function ML(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Bo(s),"string"===a){const e=Fo(a,Io(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new DL(r,s),n=e.getCustomSetupFunc(s);return t.runWebGLProgram(e,[],a,n)}}const OL={kernelName:ou,backendName:"webgl",kernelFunc:ML};class LL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const zL={kernelName:lu,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new LL(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},BL="return floor(x);",PL=GD({opSnippet:BL,packedOpSnippet:BL,cpuKernelImpl:LF}),WL={kernelName:uu,backendName:"webgl",kernelFunc:PL},VL=HD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),UL={kernelName:cu,backendName:"webgl",kernelFunc:VL};class GL{constructor(e){this.variableNames=["A"];const t=J_(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class HL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=J_(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const jL={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];(o||i)&&(null==qL&&(qL=document.createElement("canvas").getContext("2d")),qL.canvas.width=l,qL.canvas.height=u,qL.drawImage(s,0,0,l,u),s=qL.canvas);const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=I_.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=el().getBool("WEBGL_PACK")?new HL(h):new GL(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let qL;const KL={kernelName:rh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=ef(c),m=Hp(s.shape,a.shape,l,h,u,d,!1,g);let b;const y=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(el().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])b=DO({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,l=p?jD(p,!1):null,u=new AO(m,e,l,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Sh(f,"float32"));c.push(e),y.push(e)}b=n.runWebGLProgram(u,c,"float32")}else b=FO({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=JD({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},XL={kernelName:sh,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let g=c;null==g&&(g=[1,1]),xo(Qp(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=Hp(s.shape,a.shape,l,g,u,h,!0),b=el().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,y=d?jD(d,b):null,x=[s,a],v=null!=i,w=null!=o,k="leakyrelu"===d;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Sh(p,"float32"));x.push(e),f.push(e)}let I;I=b?new aL(m,v,y,w,k):new sL(m,v,y,w,k);const $=n.runWebGLProgram(I,x,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class YL{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=NF(t.length),s=NF(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const ZL={kernelName:pu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=Io(r.shape),[l,u,c,h]=fb(r,s),d=JD({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=JD({inputs:{x:r},backend:n,attrs:{shape:[Io(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=zF(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new YL(i,h,[u,c]),g=n.runWebGLProgram(f,[p,d],p.dtype),m=JD({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class JL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=NF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const QL={kernelName:du,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=jb(s,a,Ao(i,s.shape)[0],o),u=Io(a.shape),c=[],h=JD({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=JD({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});c.push(h),c.push(d);const p=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(h),r=BF(t,e,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const f=new JL(h.shape,p),g=n.runWebGLProgram(f,[h,d],h.dtype);c.push(g);const m=JD({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},ez=HD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:PF,dtype:"bool"}),tz={kernelName:fu,backendName:"webgl",kernelFunc:ez},nz=HD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:WF}),rz={kernelName:gu,backendName:"webgl",kernelFunc:nz},sz={kernelName:bu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return _L(r,!0,n)}},az=GD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),iz={kernelName:xu,backendName:"webgl",kernelFunc:az},oz=GD({opSnippet:"return float(isinf(x));",dtype:"bool"}),lz={kernelName:vu,backendName:"webgl",kernelFunc:oz},uz=GD({opSnippet:"return float(isnan(x));",dtype:"bool"}),cz={kernelName:wu,backendName:"webgl",kernelFunc:uz},hz=HD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:VF,dtype:"bool"}),dz={kernelName:Iu,backendName:"webgl",kernelFunc:hz},pz=HD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:UF,dtype:"bool"}),fz={kernelName:$u,backendName:"webgl",kernelFunc:pz},gz={kernelName:Nu,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=GF(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},mz=GD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:HF}),bz={kernelName:Cu,backendName:"webgl",kernelFunc:mz},yz=GD({opSnippet:"return log(1.0 + x);"}),xz={kernelName:Su,backendName:"webgl",kernelFunc:yz},vz=HD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),wz={kernelName:Eu,backendName:"webgl",kernelFunc:vz},kz=GD({opSnippet:"return float(!(x >= 1.0));"}),Iz={kernelName:Tu,backendName:"webgl",kernelFunc:kz},$z=HD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Nz={kernelName:Au,backendName:"webgl",kernelFunc:$z};class Cz{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Sz{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ez={kernelName:Ru,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=el().getBool("WEBGL_PACK_NORMALIZATION")?new Sz(s.shape,a,i,o,l):new Cz(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class Tz{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Az={kernelName:_u,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new Tz(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function Rz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=Ao(a,s.shape);let u=l;const c=lg(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=pD(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=aM(s,c,n);u=cg(u.length,o)}og("max",u,o);const[f,g]=ag(p.shape,u);let m,b=f;if(i&&(b=ig(f,l)),d){const e=n.texData.get(p.dataId).values,t=jF(e,Io(g),b,s.dtype);m=n.makeTensorInfo(b,s.dtype),n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const s=Io(t),a=JD({inputs:{x:e},attrs:{shape:[Io(e.shape)/s,s]},backend:r}),i=nM(a,e.dtype,"max",r),o=JD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const _z={kernelName:Fu,backendName:"webgl",kernelFunc:Rz},Fz=HD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qF}),Dz={kernelName:Du,backendName:"webgl",kernelFunc:Fz},Mz={kernelName:Mu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;Y_(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;xo(Qp(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Up(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&$o(u.inShape,u.outShape))return DD({inputs:{x:s},backend:n});const c=new UM(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},Oz={kernelName:Lu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Gp(s.shape,a,i,[1,1,1],o,u,l),h=new GM(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class Lz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Bz={kernelName:zu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Gp(i.shape,o,l,[1,1,1],u,c),d=new GM(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new zz(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},Pz={kernelName:Ou,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;Y_([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Up(o.shape,l,u,1,c,h),p=new UM(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new Lz(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},Wz={kernelName:Bu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;xo(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];xo(Qp(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Up(r.shape,s,a,u,i),[h,d]=function(e,t,n,r){let s=new UM(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new UM(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,d]}},Vz={kernelName:Pu,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=Ao(a,r.shape);let u=l;const c=lg(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=pD(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=aM(r,c,i);p.push(f),u=cg(u.length,o)}og("sum",u,o);const[g,m]=ag(f.shape,u);let b=g;s&&(b=ig(g,l));const y=function(e,t,n,r){const s=Io(t),a=JD({inputs:{x:e},attrs:{shape:[Io(e.shape)/s,s]},backend:r}),i=nM(a,"float32","mean",r),o=JD({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,m,b,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}},Uz={kernelName:Wu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=Ao(a,s.shape);let u=l;const c=lg(u,o);let h=s;null!=c&&(h=lM({inputs:{x:s},backend:n,attrs:{perm:c}}),u=cg(u.length,s.shape.length)),og("min",u,o);const[d,p]=ag(h.shape,u),f=JD({inputs:{x:h},backend:n,attrs:{shape:[-1,Io(p)]}}),g=nM(f,f.dtype,"min",n);let m;return m=JD(i?{inputs:{x:g},backend:n,attrs:{shape:ig(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(h),m}},Gz=HD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:KF}),Hz={kernelName:Vu,backendName:"webgl",kernelFunc:Gz};class jz{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=NF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class qz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=NF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=mD("rc",r),l=mD("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Kz={kernelName:Uu,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qz(r.shape,s,a):new jz(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},Xz=HD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Yz={kernelName:Gu,backendName:"webgl",kernelFunc:Xz};class Zz{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const Jz=HD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Qz={kernelName:Zl,backendName:"webgl",kernelFunc:Jz},eB="return a - b;",tB=HD({opSnippet:eB,packedOpSnippet:eB,supportsComplex:!0,cpuKernelImpl:cD}),nB={kernelName:Uc,backendName:"webgl",kernelFunc:tB};function rB(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=Ao([a],s.shape),o=Rz({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=ig(o.shape,i),u=JD({inputs:{x:o},backend:n,attrs:{shape:l}}),c=tB({inputs:{a:s,b:u},backend:n}),h=$L({inputs:{x:c},backend:n}),d=iM({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=JD({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Jz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const sB={kernelName:Rc,backendName:"webgl",kernelFunc:rB},aB={kernelName:Hu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:rB({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Zz(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},iB="return -x;",oB={kernelName:qu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=YF(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=el().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new CD(r.shape,iB):new ID(r.shape,iB),n.runWebGLProgram(s,[r],r.dtype)}},lB=vm,uB={kernelName:Xu,backendName:"webgl",kernelFunc:function(e){Cb("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=lB(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},cB=wm,hB={kernelName:Yu,backendName:"webgl",kernelFunc:function(e){Cb("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=cB(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},dB=km,pB={kernelName:Zu,backendName:"webgl",kernelFunc:function(e){Cb("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=dB(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class fB{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const gB={kernelName:Qu,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,l=Io(s.shape),u=new fB(l,a,i,o),c=JD({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const d=JD({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),d}};function mB(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=cO({inputs:{input:r},backend:n}),t=mB({inputs:{x:e},backend:n}),s=NO({inputs:{input:r},backend:n}),a=mB({inputs:{x:s},backend:n}),i=OD({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return ML({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const bB={kernelName:Qc,backendName:"webgl",kernelFunc:mB},yB={kernelName:Ju,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=cO({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=NO({inputs:{input:s},backend:r}),i=mB({inputs:{x:a},backend:r}),o=OD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return ML({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},xB={kernelName:ec,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return CL({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{vo(a,e.shape,"All tensors passed to stack must have matching shapes"),xo(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=EO({inputs:t.map((e=>{const t=CL({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class vB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=NF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class wB{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=NF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=mD("rc",r),l=mD("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const kB=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r,o=el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wB(s.shape,a,i):new vB(s.shape,a,i),l=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[s],s.dtype,l)},IB={kernelName:tc,backendName:"webgl",kernelFunc:kB},$B=HD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),NB={kernelName:nc,backendName:"webgl",kernelFunc:$B},CB={kernelName:sc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=Ao(a,s.shape);let c=u;const h=lg(c,o);let d,p=s;if(null!=h&&(p=lM({inputs:{x:s},backend:n,attrs:{perm:h}}),c=cg(c.length,o),l.push(p)),og("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=JF(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=ag(p.shape,c),r=Io(t),a=JD({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=nM(a,ed(s.dtype),"prod",n);d=JD({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=ig(d.shape,u);d=JD({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},SB=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=QF(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},EB={kernelName:ac,backendName:"webgl",kernelFunc:SB},TB=GD({opSnippet:"return 1.0 / x;"}),AB={kernelName:oc,backendName:"webgl",kernelFunc:TB},RB=GD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_B={kernelName:lc,backendName:"webgl",kernelFunc:RB},FB=GD({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),DB={kernelName:fc,backendName:"webgl",kernelFunc:FB};class MB{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class OB{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const LB={kernelName:dc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=el().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OB(s.shape,l,u,a,i):new MB(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class zB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const BB={kernelName:pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new zB(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class PB{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class WB{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const VB={kernelName:cc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=el().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new WB(s.shape,l,u,a,i):new PB(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class UB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const GB={kernelName:hc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new UB(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class HB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=NF(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class jB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=mD("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=NF(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const qB={kernelName:gc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=Ao(a,s.shape);if(0===i)return DD({inputs:{x:s},backend:n});const l=el().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jB(s.shape,o):new HB(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class KB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(s,a)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(a,"params")),s.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const XB={kernelName:th,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new KB(r.shape,a),[u,c]=lb(i,r.shape[1],r.shape[2]),h=l.getCustomSetupFunc(u,c,Math.sin(s),Math.cos(s));return o.runWebGLProgram(l,[r],r.dtype,h)}},YB=GD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ZB={kernelName:mc,backendName:"webgl",kernelFunc:YB},JB=GD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eD}),QB={kernelName:bc,backendName:"webgl",kernelFunc:JB};class eP{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=NF(s.length),l=NF(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const tP={kernelName:yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=bb(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=JD({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=JD({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new eP(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=JD({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class nP{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=NF(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const rP={kernelName:xc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new nP(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Qh(s.dtype,a.dtype))}},sP=GD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${yb};\n  float scale = ${xb};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),aP={kernelName:vc,backendName:"webgl",kernelFunc:sP},iP=GD({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),oP={kernelName:Nc,backendName:"webgl",kernelFunc:iP},lP=GD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),uP={kernelName:$c,backendName:"webgl",kernelFunc:lP},cP=GD({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),hP={kernelName:kc,backendName:"webgl",kernelFunc:cP},dP=GD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),pP={kernelName:Ic,backendName:"webgl",kernelFunc:dP},fP=GD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),gP={kernelName:Cc,backendName:"webgl",kernelFunc:fP},mP={kernelName:Tc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;xo(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=kB({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=ub(c.shape,a,o,!1),d=cb(h.length,a.length,!1),p=hb(c.shape,a,o,!1),f=JD({inputs:{x:c},backend:n,attrs:{shape:h}}),g=lM({inputs:{x:f},backend:n,attrs:{perm:d}}),m=JD({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},bP={kernelName:_c,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=rD(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},yP={kernelName:Fc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=sD(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},xP={kernelName:Dc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=aD(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},vP={kernelName:Mc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=aD(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},wP={kernelName:Oc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=bb(0,s,o),d=new eP(u,l,s.shape.length,a.shape.length,c,[h,1],!1),p=n.runWebGLProgram(d,[a,s,i],a.dtype),f=JD({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},kP={kernelName:Ac,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=Ao(i,s.shape)[0],l=Ub(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=sO({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},IP=GD({opSnippet:"return sqrt(x);"}),$P={kernelName:Sc,backendName:"webgl",kernelFunc:IP},NP={kernelName:zc,backendName:"webgl",kernelFunc:GD({opSnippet:"return x * x;"})},CP="return (a - b) * (a - b);",SP=HD({opSnippet:CP,packedOpSnippet:CP}),EP={kernelName:Lc,backendName:"webgl",kernelFunc:SP},TP={kernelName:eh,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new ID(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class AP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=NF(n.length),a=NF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const RP={kernelName:Bc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:p,$begin:f,$strides:g,size:m,newShape:b,outShape:y}=$p(s.shape,a,i,o,l,u,c,h,d),x=JD({inputs:{x:s},backend:n,attrs:{shape:b}});let v;if(p){const e=sO({inputs:{x},backend:n,attrs:{begin:f,size:m}});v=JD({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))v=n.makeTensorInfo(y,s.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=Qd(x.shape,x.dtype,e),r=iD(y,t,g,f);v=n.makeTensorInfo(y,x.dtype,r.values)}else{const e=new AP(f,g,y);v=n.runWebGLProgram(e,[x],x.dtype)}const w=JD({inputs:{x:v},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),w}},_P={kernelName:Pc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=oD(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},FP={kernelName:Wc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=lD(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},DP={kernelName:Vc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=uD(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},MP=GD({opSnippet:"return tan(x);"}),OP={kernelName:Gc,backendName:"webgl",kernelFunc:MP},LP=GD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zP={kernelName:Hc,backendName:"webgl",kernelFunc:LP};class BP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=NF(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function PP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>Rh(e))):e,r=Qd(s.shape,s.dtype,t),i=hD(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new BP(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const WP={kernelName:jc,backendName:"webgl",kernelFunc:PP},VP={kernelName:qc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=dD(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class UP{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const GP={kernelName:Kc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=new UP(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[s,a],"float32")}},HP={kernelName:Yc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;Y_(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=fD(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},jP={kernelName:Zc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=sO({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=JD({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class qP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const KP=[Ez,Az,hM,pM,gM,bM,vM,IM,$M,NM,RM,_M,DM,OM,PM,zM,VM,jM,HM,XM,YM,ZM,eO,iO,oO,dO,gO,yO,wO,LD,TO,PO,WO,MO,UO,GO,VO,jO,KO,YO,eL,tL,rL,uL,cL,iL,dL,fL,gL,bL,yL,vL,kL,NL,SL,AL,FL,OL,zL,WL,UL,jL,KL,XL,ZL,QL,tz,rz,MD,sz,CO,iz,lz,cz,PD,dz,fz,gz,xz,bz,wz,Iz,Nz,_z,Oz,Mz,Bz,Pz,Wz,Dz,Vz,Uz,Hz,Kz,Yz,aB,ZD,oB,uB,hB,pB,uO,gB,yB,xB,IB,NB,UD,CB,EB,hO,Qz,AB,DB,_B,QD,LB,BB,VB,GB,qB,XB,ZB,QB,tP,rP,aP,oP,uP,hP,pP,aO,sB,gP,mP,bP,yP,xP,vP,wP,kP,$P,NP,EP,TP,RP,_P,FP,DP,nB,oM,OP,zP,WP,VP,GP,uM,HP,jP,{kernelName:Jc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=lg([u],o);let h=s;null!=c&&(h=lM({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=cg(1,o)[0]);const d=Hb(h.shape,u,i),p=Io([h.shape[u]]),f=JD({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=ed(s.dtype),m=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Gb(o,a),c=new qP({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=SB({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=PP({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),m(h,t,p,s,a)},b=JD({inputs:{x:m(f,"unsortedSegmentSum",a,g,i)},backend:n,attrs:{shape:d}});let y=b;if(null!=c){l.push(b);const e=ug(c);y=lM({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},bB];for(const e of KP)ch(e);const XP=(e,t,n)=>{var r=((e,t,n)=>{var r=e.shape.slice(0,-1),s=t.shape.slice(0,-1);return r.forEach((()=>{t=t.expandDims(0)})),s.forEach((()=>{e=e.expandDims(-2)})),Eg(qf(e.sub(t).square(),-1).mul(-10)).mul(n)})(e,t,n);return qf(r,-1)},YP=e=>{var[t,n]=e.split(2,-1),t=t.mul(3.5).sub(1.5),n=n.mul(3.5).sub(.5);return Mp(1).sub(t).square().add(n.sub(t.square()).square().mul(100))},ZP=e=>{var[t,n]=e.split(2,-1),t=t.mul(9).sub(4.5),n=n.mul(9).sub(4.5),r=t.mul(n),s=Mp(1.5).sub(t).add(r).square();return r=r.mul(n),s.add(Mp(2.25).sub(t).add(r).square()).add(Mp(2.625).sub(t).add(r).mul(n).square())};function JP(e){let t,n,r,s,i,l=[{x1:n=e[3](e[0][0])},{y1:r=e[4](e[0][1])},{x2:s=e[3](e[1][0])},{y2:i=e[4](e[1][1])},e[2]],u={};for(let e=0;e<l.length;e+=1)u=o(u,l[e]);return{c(){t=A("line"),O(t,u)},m(e,n){C(e,t,n)},p(e,[a]){O(t,u=ke(l,[1&a&&n!==(n=e[3](e[0][0]))&&{x1:n},1&a&&r!==(r=e[4](e[0][1]))&&{y1:r},2&a&&s!==(s=e[3](e[1][0]))&&{x2:s},2&a&&i!==(i=e[4](e[1][1]))&&{y2:i},4&a&&e[2]]))},i:a,o:a,d(e){e&&S(t)}}}function QP(e,t,n){let r,s,a,[i,l]=Y("scales");return e.$$set=e=>{n(5,t=o(o({},t),b(e)))},e.$$.update=()=>{n(0,({origin:r,target:s,...a}=t),r,(n(1,s),n(5,t)),(n(2,a),n(5,t)))},t=b(t),[r,s,a,i,l]}const eW=class extends Ae{constructor(e){super(),Te(this,e,QP,JP,d,{})}},tW=(e,t)=>[e[0]+t[0],e[1]+t[1]],nW=(e,t)=>[e[0]-t[0],e[1]-t[1]],rW=(e,t)=>[e[0]*t,e[1]*t];function sW(e){let t,n;const r=[{origin:e[1]},{target:e[2]},e[0],{"marker-end":"url(#arrowhead)"}];let s={};for(let e=0;e<r.length;e+=1)s=o(s,r[e]);return t=new eW({props:s}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,[n]){const s=7&n?ke(r,[2&n&&{origin:e[1]},4&n&&{target:e[2]},1&n&&Ie(e[0]),r[3]]):{};t.$set(s)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function aW(e,t,n){const r=Y("addDef");let s,a,i,l,u,c,h;return K((()=>{r("arrowhead",(e=>{e.append("marker").attr("id","arrowhead").attr("fill","#fff").attr("markerWidth",10).attr("markerHeight",10).attr("refX",8.7).attr("refY",3).attr("orient","auto").attr("markerUnits","strokeWidth").append("path").attr("d","M0,0 L0,6 L9,3 z")}))})),e.$$set=e=>{n(8,t=o(o({},t),b(e)))},e.$$.update=()=>{n(3,({origin:s,target:a,trimStart:i,trimEnd:l,...u}=t),s,(n(4,a),n(8,t),n(5,i),n(3,s),n(6,l)),(n(5,i),n(8,t),n(3,s),n(4,a),n(6,l)),(n(6,l),n(8,t),n(5,i),n(3,s),n(4,a)),(n(0,u),n(8,t),n(5,i),n(3,s),n(4,a),n(6,l))),n(1,c=i?tW(s,rW(nW(a,s),i)):s),n(2,h=l?tW(a,rW(nW(s,a),l)):a)},t=b(t),[u,c,h,s,a,i,l]}const iW=class extends Ae{constructor(e){super(),Te(this,e,aW,sW,d,{})}};function oW(e){let t,n;const r=e[7].default,s=f(r,e,e[6],null);return{c(){t=A("g"),s&&s.c(),M(t,"transform",e[1])},m(r,a){C(r,t,a),s&&s.m(t,null),e[8](t),n=!0},p(e,[t]){s&&s.p&&(!n||64&t)&&m(s,r,e,e[6],t,null,null)},i(e){n||(me(s,e),n=!0)},o(e){be(s,e),n=!1},d(n){n&&S(t),s&&s.d(n),e[8](null)}}}function lW(e,t,n){let r,{$$slots:s={},$$scope:a}=t,[i,o]=Y("size"),{margin:l={top:20,right:30,bottom:30,left:40}}=t,{xDomain:u=[0,1]}=t,{yDomain:c=[0,1]}=t,h=`translate(${l.left}, ${l.top})`,d=i-l.left-l.right,p=o-l.top-l.bottom;X("size",[d,p]);let f=oo().domain(u).range([0,d]),g=oo().domain(c).range([p,0]);X("scales",[f,g]);const m=[f,g];return X("axisGroup",(()=>r)),K((()=>{let e=Us(r);e.append("g").attr("transform",`translate(0, ${p})`).call(ot(3,f)),e.append("g").call(function(e){return ot(4,e)}(g))})),e.$$set=e=>{"margin"in e&&n(2,l=e.margin),"xDomain"in e&&n(3,u=e.xDomain),"yDomain"in e&&n(4,c=e.yDomain),"$$scope"in e&&n(6,a=e.$$scope)},[r,h,l,u,c,m,a,s,function(e){J[e?"unshift":"push"]((()=>{r=e,n(0,r)}))}]}const uW=class extends Ae{constructor(e){super(),Te(this,e,lW,oW,d,{margin:2,xDomain:3,yDomain:4,scales:5})}get scales(){return this.$$.ctx[5]}};function cW(e){let t,n,r;const s=e[5].default,a=f(s,e,e[4],null);return{c(){t=A("svg"),n=A("defs"),a&&a.c(),M(t,"preserveAspectRatio","xMinYMin meet"),M(t,"viewBox",e[0]),M(t,"xmlns:svg","http://www.w3.org/2000/svg"),M(t,"xmlns:xlink","http://www.w3.org/1999/xlink"),M(t,"xmlns","http://www.w3.org/2000/svg")},m(s,i){C(s,t,i),N(t,n),e[6](n),a&&a.m(t,null),r=!0},p(e,[n]){a&&a.p&&(!r||16&n)&&m(a,s,e,e[4],n,null,null),(!r||1&n)&&M(t,"viewBox",e[0])},i(e){r||(me(a,e),r=!0)},o(e){be(a,e),r=!1},d(n){n&&S(t),e[6](null),a&&a.d(n)}}}function hW(e,t,n){let{$$slots:r={},$$scope:s}=t,{width:a=200}=t,{height:i=200}=t;X("size",[a,i]);let o,{viewBox:l}=t,u=[];return X("addDef",((e,t)=>{e in u||(t(Us(o)),u.push(e))})),e.$$set=e=>{"width"in e&&n(2,a=e.width),"height"in e&&n(3,i=e.height),"viewBox"in e&&n(0,l=e.viewBox),"$$scope"in e&&n(4,s=e.$$scope)},e.$$.update=()=>{12&e.$$.dirty&&n(0,l=`0 0 ${a} ${i}`)},[l,o,a,i,s,r,function(e){J[e?"unshift":"push"]((()=>{o=e,n(1,o)}))}]}const dW=class extends Ae{constructor(e){super(),Te(this,e,hW,cW,d,{width:2,height:3,viewBox:0})}},pW=e=>({isHovered:128&e}),fW=e=>({isHovered:e[7]});function gW(e){let t,n,r,s,a,i,o,l,u,c,h,d;return{c(){t=A("line"),o=A("line"),M(t,"class","handleLine svelte-pcj409"),M(t,"stroke","white"),M(t,"stroke-width","1"),M(t,"opacity",n=e[7]?e[4]:e[3]),M(t,"x1",r=e[15](e[10])),M(t,"x2",s=e[15](e[11])),M(t,"y1",a=e[16](e[6])),M(t,"y2",i=e[16](e[6])),M(o,"class","handleLine svelte-pcj409"),M(o,"stroke","white"),M(o,"stroke-width","1"),M(o,"opacity",l=e[7]?e[4]:e[3]),M(o,"x1",u=e[15](e[5])),M(o,"x2",c=e[15](e[5])),M(o,"y1",h=e[16](e[12])),M(o,"y2",d=e[16](e[13]))},m(e,n){C(e,t,n),C(e,o,n)},p(e,p){152&p&&n!==(n=e[7]?e[4]:e[3])&&M(t,"opacity",n),1024&p&&r!==(r=e[15](e[10]))&&M(t,"x1",r),2048&p&&s!==(s=e[15](e[11]))&&M(t,"x2",s),64&p&&a!==(a=e[16](e[6]))&&M(t,"y1",a),64&p&&i!==(i=e[16](e[6]))&&M(t,"y2",i),152&p&&l!==(l=e[7]?e[4]:e[3])&&M(o,"opacity",l),32&p&&u!==(u=e[15](e[5]))&&M(o,"x1",u),32&p&&c!==(c=e[15](e[5]))&&M(o,"x2",c),4096&p&&h!==(h=e[16](e[12]))&&M(o,"y1",h),8192&p&&d!==(d=e[16](e[13]))&&M(o,"y2",d)},d(e){e&&S(t),e&&S(o)}}}function mW(e){let t,n,r,s,a,i,o=e[0]&&gW(e);const l=e[22].default,u=f(l,e,e[21],fW),c=u||function(e){let t,n;return{c(){t=A("circle"),M(t,"stroke","none"),M(t,"fill","white"),M(t,"class","circleMarker svelte-pcj409"),M(t,"r",n=e[7]?e[2]:e[1]),M(t,"cx","0"),M(t,"cy","0")},m(e,n){C(e,t,n)},p(e,r){134&r&&n!==(n=e[7]?e[2]:e[1])&&M(t,"r",n)},d(e){e&&S(t)}}}(e);return{c(){t=A("g"),o&&o.c(),n=A("g"),c&&c.c(),r=A("circle"),M(n,"transform",e[14]),M(r,"class","handleInvisible svelte-pcj409"),M(r,"cx",s=e[15](e[5])),M(r,"cy",a=e[16](e[6])),M(r,"r","20")},m(s,a){C(s,t,a),o&&o.m(t,null),N(t,n),c&&c.m(n,null),N(t,r),e[23](r),e[24](t),i=!0},p(e,[h]){e[0]?o?o.p(e,h):(o=gW(e),o.c(),o.m(t,n)):o&&(o.d(1),o=null),u?u.p&&(!i||2097280&h)&&m(u,l,e,e[21],h,pW,fW):c&&c.p&&134&h&&c.p(e,h),(!i||16384&h)&&M(n,"transform",e[14]),(!i||32&h&&s!==(s=e[15](e[5])))&&M(r,"cx",s),(!i||64&h&&a!==(a=e[16](e[6])))&&M(r,"cy",a)},i(e){i||(me(c,e),i=!0)},o(e){be(c,e),i=!1},d(n){n&&S(t),o&&o.d(),c&&c.d(n),e[23](null),e[24](null)}}}function bW(e,t,n){let r,s,a,i,o,l,u,c,h,{$$slots:d={},$$scope:p}=t,{lines:f=!0}=t,{circleRadius:g=3}=t,{circleRadius_hover:m=5}=t,{lineOpacity:b=0}=t,{lineOpacity_hover:y=.5}=t,{onDragStart:x=null}=t,{onDrag:v=null}=t,{onDragEnd:w=null}=t,k=!1,[I,$]=Y("scales"),{position:N=[.5,.5]}=t,C=Y("axisGroup");return K((()=>{var e=Us(r),t=Us(s).raise();n(7,k=!1),e.call(function(){var e,t,n,r,s=Xs,a=Ys,i=Zs,o=Js,l={},u=Tn("start","drag","end"),c=0,h=0;function d(e){e.on("mousedown.drag",p).filter(o).on("touchstart.drag",m).on("touchmove.drag",b).on("touchend.drag touchcancel.drag",y).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(i,o){if(!r&&s.call(this,i,o)){var l=x(this,a.call(this,i,o),i,o,"mouse");l&&(Us(i.view).on("mousemove.drag",f,!0).on("mouseup.drag",g,!0),function(e){var t=e.document.documentElement,n=Us(e).on("dragstart.drag",js,!0);"onselectstart"in t?n.on("selectstart.drag",js,!0):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")}(i.view),Hs(i),n=!1,e=i.clientX,t=i.clientY,l("start",i))}}function f(r){if(js(r),!n){var s=r.clientX-e,a=r.clientY-t;n=s*s+a*a>h}l.mouse("drag",r)}function g(e){Us(e.view).on("mousemove.drag mouseup.drag",null),function(e,t){var n=e.document.documentElement,r=Us(e).on("dragstart.drag",null);t&&(r.on("click.drag",js,!0),setTimeout((function(){r.on("click.drag",null)}),0)),"onselectstart"in n?r.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}(e.view,n),js(e),l.mouse("end",e)}function m(e,t){if(s.call(this,e,t)){var n,r,i=e.changedTouches,o=a.call(this,e,t),l=i.length;for(n=0;n<l;++n)(r=x(this,o,e,t,i[n].identifier,i[n]))&&(Hs(e),r("start",e,i[n]))}}function b(e){var t,n,r=e.changedTouches,s=r.length;for(t=0;t<s;++t)(n=l[r[t].identifier])&&(js(e),n("drag",e,r[t]))}function y(e){var t,n,s=e.changedTouches,a=s.length;for(r&&clearTimeout(r),r=setTimeout((function(){r=null}),500),t=0;t<a;++t)(n=l[s[t].identifier])&&(Hs(e),n("end",e,s[t]))}function x(e,t,n,r,s,a){var o,h,p,f=u.copy(),g=Gs(a||n,t);if(null!=(p=i.call(e,new Ks("beforestart",{sourceEvent:n,target:d,identifier:s,active:c,x:g[0],y:g[1],dx:0,dy:0,dispatch:f}),r)))return o=p.x-g[0]||0,h=p.y-g[1]||0,function n(a,i,u){var m,b=g;switch(a){case"start":l[s]=n,m=c++;break;case"end":delete l[s],--c;case"drag":g=Gs(u||i,t),m=c}f.call(a,e,new Ks(a,{sourceEvent:i,subject:p,target:d,identifier:s,active:m,x:g[0]+o,y:g[1]+h,dx:g[0]-b[0],dy:g[1]-b[1],dispatch:f}),r)}}return d.filter=function(e){return arguments.length?(s="function"==typeof e?e:qs(!!e),d):s},d.container=function(e){return arguments.length?(a="function"==typeof e?e:qs(e),d):a},d.subject=function(e){return arguments.length?(i="function"==typeof e?e:qs(e),d):i},d.touchable=function(e){return arguments.length?(o="function"==typeof e?e:qs(!!e),d):o},d.on=function(){var e=u.on.apply(u,arguments);return e===u?d:e},d.clickDistance=function(e){return arguments.length?(h=(e=+e)*e,d):Math.sqrt(h)},d}().container(C()).on("start",(function(e){n(7,k=!0),t.raise(),"function"==typeof x&&x()})).on("drag",(function(e){n(17,N=[Math.max(Math.min(l,I.invert(e.x)),o),Math.max(Math.min(c,$.invert(e.y)),u)]),"function"==typeof v&&v()})).on("end",(function(e){"function"==typeof w&&w()}))),e.on("mouseover",(function(e){n(7,k=!0),t.raise()})),e.on("mouseout",(function(e){n(7,k=!1)}))})),e.$$set=e=>{"lines"in e&&n(0,f=e.lines),"circleRadius"in e&&n(1,g=e.circleRadius),"circleRadius_hover"in e&&n(2,m=e.circleRadius_hover),"lineOpacity"in e&&n(3,b=e.lineOpacity),"lineOpacity_hover"in e&&n(4,y=e.lineOpacity_hover),"onDragStart"in e&&n(18,x=e.onDragStart),"onDrag"in e&&n(19,v=e.onDrag),"onDragEnd"in e&&n(20,w=e.onDragEnd),"position"in e&&n(17,N=e.position),"$$scope"in e&&n(21,p=e.$$scope)},e.$$.update=()=>{131168&e.$$.dirty&&(n(5,[a,i]=N,a,(n(6,i),n(17,N),n(15,I),n(5,a),n(16,$))),n(14,h=`translate(${I(a)}, ${$(i)})`))},n(10,[o,l]=I.domain(),o,(n(11,l),n(15,I),n(16,$))),n(12,[u,c]=$.domain(),u,(n(13,c),n(15,I),n(16,$))),[f,g,m,b,y,a,i,k,r,s,o,l,u,c,h,I,$,N,x,v,w,p,d,function(e){J[e?"unshift":"push"]((()=>{r=e,n(8,r)}))},function(e){J[e?"unshift":"push"]((()=>{s=e,n(9,s)}))}]}const yW=class extends Ae{constructor(e){super(),Te(this,e,bW,mW,d,{lines:0,circleRadius:1,circleRadius_hover:2,lineOpacity:3,lineOpacity_hover:4,onDragStart:18,onDrag:19,onDragEnd:20,position:17})}};function xW(e){let t,n,r,s,i;return{c(){t=A("foreignObject"),n=document.createElementNS("http://www.w3.org/1999/xhtml","div"),r=R("$$"),i=R("$$"),s=new P(i),M(n,"xmlns","http://www.w3.org/1999/xhtml"),M(n,"style",e[1]),M(n,"class","latex-container svelte-ez2byx"),M(t,"x","-50"),M(t,"y","-50"),M(t,"width","100"),M(t,"height","100"),M(t,"class","svelte-ez2byx")},m(a,o){C(a,t,o),N(t,n),N(n,r),s.m(e[0],n),N(n,i)},p(e,[t]){1&t&&s.p(e[0]),2&t&&M(n,"style",e[1])},i:a,o:a,d(e){e&&S(t)}}}function vW(e,t,n){let{value:r}=t,{style:s=""}=t;return e.$$set=e=>{"value"in e&&n(0,r=e.value),"style"in e&&n(1,s=e.style)},[r,s]}const wW=class extends Ae{constructor(e){super(),Te(this,e,vW,xW,d,{value:0,style:1})}};function kW(e){let t,n,r,s,i,o,l,u;return{c(){t=T("input"),n=_(),r=T("br"),s=_(),i=T("label"),o=R(e[4]),M(t,"type","range"),M(t,"min",e[2]),M(t,"max",e[3]),M(t,"class","slider svelte-oskchv"),M(t,"id",e[1]),M(i,"for",e[1]),M(i,"class","svelte-oskchv")},m(a,c){C(a,t,c),z(t,e[0]),C(a,n,c),C(a,r,c),C(a,s,c),C(a,i,c),N(i,o),l||(u=[D(t,"change",e[5]),D(t,"input",e[5])],l=!0)},p(e,[n]){4&n&&M(t,"min",e[2]),8&n&&M(t,"max",e[3]),2&n&&M(t,"id",e[1]),1&n&&z(t,e[0]),16&n&&L(o,e[4]),2&n&&M(i,"for",e[1])},i:a,o:a,d(e){e&&S(t),e&&S(n),e&&S(r),e&&S(s),e&&S(i),l=!1,c(u)}}}function IW(e,t,n){let{id:r}=t,{min:s=0}=t,{max:a=10}=t,{value:i=0}=t,{label:o=""}=t;return e.$$set=e=>{"id"in e&&n(1,r=e.id),"min"in e&&n(2,s=e.min),"max"in e&&n(3,a=e.max),"value"in e&&n(0,i=e.value),"label"in e&&n(4,o=e.label)},[i,r,s,a,o,function(){i=function(e){return""===e?null:+e}(this.value),n(0,i)}]}const $W=class extends Ae{constructor(e){super(),Te(this,e,IW,kW,d,{id:1,min:2,max:3,value:0,label:4})}};function NW(e){let t,n,r;const s=e[4].default,a=f(s,e,e[3],null);return{c(){t=A("g"),a&&a.c(),M(t,"transform",n=`translate(${e[1](e[0][0])}, ${e[2](e[0][1])})`)},m(e,n){C(e,t,n),a&&a.m(t,null),r=!0},p(e,[i]){a&&a.p&&(!r||8&i)&&m(a,s,e,e[3],i,null,null),(!r||1&i&&n!==(n=`translate(${e[1](e[0][0])}, ${e[2](e[0][1])})`))&&M(t,"transform",n)},i(e){r||(me(a,e),r=!0)},o(e){be(a,e),r=!1},d(e){e&&S(t),a&&a.d(e)}}}function CW(e,t,n){let{$$slots:r={},$$scope:s}=t,[a,i]=Y("scales"),{position:o=[0,0]}=t;return e.$$set=e=>{"position"in e&&n(0,o=e.position),"$$scope"in e&&n(3,s=e.$$scope)},[o,a,i,s,r]}const SW=class extends Ae{constructor(e){super(),Te(this,e,CW,NW,d,{position:0})}};function EW(e){let t,n;return t=new wW({props:{value:e[1],style:"color: white; font-size: "+(e[8]?"1.2em":"1em")}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};2&n&&(r.value=e[1]),256&n&&(r.style="color: white; font-size: "+(e[8]?"1.2em":"1em")),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function TW(e){let t,n,r,s,a,i;return n=new wW({props:{value:e[1],style:"color: white; font-size: "+(e[8]?"1.2em":"1em")}}),{c(){t=A("g"),Ce(n.$$.fragment),r=_(),s=A("circle"),M(t,"transform",e[4]),M(s,"stroke","none"),M(s,"fill","white"),M(s,"class","circleMarker"),M(s,"r",a=e[8]?2:1),M(s,"cx","0"),M(s,"cy","0")},m(e,a){C(e,t,a),Se(n,t,null),C(e,r,a),C(e,s,a),i=!0},p(e,r){const o={};2&r&&(o.value=e[1]),256&r&&(o.style="color: white; font-size: "+(e[8]?"1.2em":"1em")),n.$set(o),(!i||16&r)&&M(t,"transform",e[4]),(!i||256&r&&a!==(a=e[8]?2:1))&&M(s,"r",a)},i(e){i||(me(n.$$.fragment,e),i=!0)},o(e){be(n.$$.fragment,e),i=!1},d(e){e&&S(t),Ee(n),e&&S(r),e&&S(s)}}}function AW(e){let t,n,r,s;const a=[TW,EW],i=[];function o(e,t){return e[2]?0:1}return t=o(e),n=i[t]=a[t](e),{c(){n.c(),r=F()},m(e,n){i[t].m(e,n),C(e,r,n),s=!0},p(e,s){let l=t;t=o(e),t===l?i[t].p(e,s):(fe(),be(i[l],1,1,(()=>{i[l]=null})),ge(),n=i[t],n?n.p(e,s):(n=i[t]=a[t](e),n.c()),me(n,1),n.m(r.parentNode,r))},i(e){s||(me(n),s=!0)},o(e){be(n),s=!1},d(e){i[t].d(e),e&&S(r)}}}function RW(e){let t,n,r;const s=[e[3]];function a(t){e[6](t)}let i={$$slots:{default:[AW,({isHovered:e})=>({8:e}),({isHovered:e})=>e?256:0]},$$scope:{ctx:e}};for(let e=0;e<s.length;e+=1)i=o(i,s[e]);return void 0!==e[0]&&(i.position=e[0]),t=new yW({props:i}),J.push((()=>Ne(t,"position",a))),{c(){Ce(t.$$.fragment)},m(e,n){Se(t,e,n),r=!0},p(e,[r]){const a=8&r?ke(s,[Ie(e[3])]):{};790&r&&(a.$$scope={dirty:r,ctx:e}),!n&&1&r&&(n=!0,a.position=e[0],se((()=>n=!1))),t.$set(a)},i(e){r||(me(t.$$.fragment,e),r=!0)},o(e){be(t.$$.fragment,e),r=!1},d(e){Ee(t,e)}}}function _W(e,t,n){let r,{value:s=""}=t,{position:a}=t,{withPoint:i=!0}=t,{offset:l=[-20,-10]}=t,u="";return e.$$set=e=>{n(7,t=o(o({},t),b(e))),"value"in e&&n(1,s=e.value),"position"in e&&n(0,a=e.position),"withPoint"in e&&n(2,i=e.withPoint),"offset"in e&&n(5,l=e.offset)},e.$$.update=()=>{n(3,({...r}=t),r),delete r.value,delete r.hovered,delete r.position,delete r.withPoint,32&e.$$.dirty&&n(4,u=`translate(${l[0]}, ${l[1]})`)},t=b(t),[a,s,i,r,u,l,function(e){a=e,n(0,a)}]}const FW=class extends Ae{constructor(e){super(),Te(this,e,_W,RW,d,{value:1,position:0,withPoint:2,offset:5})}};function DW(e){let t;return{c(){t=A("g"),M(t,"fill","none"),M(t,"stroke","#fff"),M(t,"stroke-opacity","0.3"),M(t,"opacity",e[0])},m(n,r){C(n,t,r),e[7](t)},p(e,[n]){1&n&&M(t,"opacity",e[0])},i:a,o:a,d(n){n&&S(t),e[7](null)}}}function MW(e,t,n){let r,{lossFunc:s}=t,{opacity:a=1}=t,{logScale:i=!1}=t,[o,l]=Y("size"),[u,c]=Y("scales"),{nx:h=256}=t,{ny:d=256}=t,{n_thresholds:p=20}=t;return K((()=>{let e=Bg(function(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=bd(e,"x","meshgrid",e instanceof Gh?e.dtype:"float32");if(void 0===t)return[r];let s=bd(t,"y","meshgrid",t instanceof Gh?t.dtype:"float32");const a=Io(r.shape),i=Io(s.shape);return"xy"===n?(r=tf(r,[1,-1]),s=tf(s,[-1,1]),[Nf(tg([i,1],r.dtype),r),Nf(s,tg([1,a],s.dtype))]):(r=tf(r,[-1,1]),s=tf(s,[1,-1]),[Nf(r,tg([1,i],r.dtype)),Nf(tg([a,1],s.dtype),s)])}(Wf(...u.domain(),h),Wf(...c.domain(),d)),-1),t=s(e);i&&(t=Vf(t));let n=Array.from(t.bufferSync().values),a=function(){var e=1,t=1,n=Ts,r=o;function s(e){var t=n(e);if(Array.isArray(t))t=t.slice().sort(Os);else{var r=Je(e),s=r[0],i=r[1];t=Ds(s,i,t),t=function(e,t,n){e=+e,t=+t,n=(s=arguments.length)<2?(t=e,e=0,1):s<3?1:+n;for(var r=-1,s=0|Math.max(0,Math.ceil((t-e)/n)),a=new Array(s);++r<s;)a[r]=e+r*n;return a}(Math.floor(s/t)*t,Math.floor(i/t)*t,t)}return t.map((function(t){return a(e,t)}))}function a(n,s){var a=[],o=[];return function(n,r,s){var a,o,l,u,c,h,d=new Array,p=new Array;for(a=o=-1,u=n[0]>=r,Vs[u<<1].forEach(f);++a<e-1;)l=u,u=n[a+1]>=r,Vs[l|u<<1].forEach(f);for(Vs[u<<0].forEach(f);++o<t-1;){for(a=-1,u=n[o*e+e]>=r,c=n[o*e]>=r,Vs[u<<1|c<<2].forEach(f);++a<e-1;)l=u,u=n[o*e+e+a+1]>=r,h=c,c=n[o*e+a+1]>=r,Vs[l|u<<1|c<<2|h<<3].forEach(f);Vs[u|c<<3].forEach(f)}for(a=-1,c=n[o*e]>=r,Vs[c<<2].forEach(f);++a<e-1;)h=c,c=n[o*e+a+1]>=r,Vs[c<<2|h<<3].forEach(f);function f(e){var t,n,r=[e[0][0]+a,e[0][1]+o],l=[e[1][0]+a,e[1][1]+o],u=i(r),c=i(l);(t=p[u])?(n=d[c])?(delete p[t.end],delete d[n.start],t===n?(t.ring.push(l),s(t.ring)):d[t.start]=p[n.end]={start:t.start,end:n.end,ring:t.ring.concat(n.ring)}):(delete p[t.end],t.ring.push(l),p[t.end=c]=t):(t=d[c])?(n=p[u])?(delete d[t.start],delete p[n.end],t===n?(t.ring.push(l),s(t.ring)):d[n.start]=p[t.end]={start:n.start,end:t.end,ring:n.ring.concat(t.ring)}):(delete d[t.start],t.ring.unshift(r),d[t.start=u]=t):d[u]=p[c]={start:u,end:c,ring:[r,l]}}Vs[c<<3].forEach(f)}(n,s,(function(e){r(e,n,s),function(e){for(var t=0,n=e.length,r=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)r+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return r}(e)>0?a.push([e]):o.push(e)})),o.forEach((function(e){for(var t,n=0,r=a.length;n<r;++n)if(-1!==zs((t=a[n])[0],e))return void t.push(e)})),{type:"MultiPolygon",value:s,coordinates:a}}function i(t){return 2*t[0]+t[1]*(e+1)*4}function o(n,r,s){n.forEach((function(n){var a,i=n[0],o=n[1],l=0|i,u=0|o,c=r[u*e+l];i>0&&i<e&&l===i&&(a=r[u*e+l-1],n[0]=i+(s-a)/(c-a)-.5),o>0&&o<t&&u===o&&(a=r[(u-1)*e+l],n[1]=o+(s-a)/(c-a)-.5)}))}return s.contour=a,s.size=function(n){if(!arguments.length)return[e,t];var r=Math.floor(n[0]),a=Math.floor(n[1]);if(!(r>=0&&a>=0))throw new Error("invalid size");return e=r,t=a,s},s.thresholds=function(e){return arguments.length?(n="function"==typeof e?e:Array.isArray(e)?Ls(Ms.call(e)):Ls(e),s):n},s.smooth=function(e){return arguments.length?(r=e?o:Ws,s):r===o},s}().size([h,d]).thresholds(p)(n),f=co,g=oo().domain(Je(n)).range([0,1]);Us(r).selectAll("path").data(a).enter().append("path").attr("fill",(e=>f(g(e.value)))).attr("stroke","#white").attr("transform",`translate(0,${l}), scale(${o/h}, ${-l/d})`).attr("d",function(e,t){var n,r,s=4.5;function a(e){return e&&("function"==typeof s&&r.pointRadius(+s.apply(this,arguments)),aa(e,n(r))),r.result()}return a.area=function(e){return aa(e,n(Ea)),Ea.result()},a.measure=function(e){return aa(e,n(fi)),fi.result()},a.bounds=function(e){return aa(e,n(Fa)),Fa.result()},a.centroid=function(e){return aa(e,n(ri)),ri.result()},a.projection=function(t){return arguments.length?(n=null==t?(e=null,Qs):(e=t).stream,a):e},a.context=function(e){return arguments.length?(r=null==e?(t=null,new gi):new si(t=e),"function"!=typeof s&&r.pointRadius(s),a):t},a.pointRadius=function(e){return arguments.length?(s="function"==typeof e?e:(r.pointRadius(+e),+e),a):s},a.projection(e).context(t)}(Ni()))})),e.$$set=e=>{"lossFunc"in e&&n(2,s=e.lossFunc),"opacity"in e&&n(0,a=e.opacity),"logScale"in e&&n(3,i=e.logScale),"nx"in e&&n(4,h=e.nx),"ny"in e&&n(5,d=e.ny),"n_thresholds"in e&&n(6,p=e.n_thresholds)},[a,r,s,i,h,d,p,function(e){J[e?"unshift":"push"]((()=>{r=e,n(1,r)}))}]}const OW=class extends Ae{constructor(e){super(),Te(this,e,MW,DW,d,{lossFunc:2,opacity:0,logScale:3,nx:4,ny:5,n_thresholds:6})}};var LW=n(3493),zW=n.n(LW);function BW(e,t,n){const r=e.slice();return r[6]=t[n],r}function PW(e){let t,n;return t=new iW({props:{origin:e[6].origin,target:e[6].target,trimStart:"0.1",trimEnd:"0.1",stroke:"#fff",fill:"#fff","stroke-width":"1"}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};8&n&&(r.origin=e[6].origin),8&n&&(r.target=e[6].target),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function WW(e){let t,n;return t=new wW({props:{value:"\\phi",style:"font-size: 0.8em; color:white"}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p:a,i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function VW(e){let t,n,r,s,a,i,o,l;function u(t){e[5](t)}t=new OW({props:{lossFunc:e[1],logScale:!1}});let c={value:"\\theta",withPoint:!1,onDragEnd:e[2],onDrag:e[4]};void 0!==e[0]&&(c.position=e[0]),r=new FW({props:c}),J.push((()=>Ne(r,"position",u)));let h=e[3],d=[];for(let t=0;t<h.length;t+=1)d[t]=PW(BW(e,h,t));const p=e=>be(d[e],1,1,(()=>{d[e]=null}));return o=new SW({props:{position:e[3][e[3].length-1].target,$$slots:{default:[WW]},$$scope:{ctx:e}}}),{c(){Ce(t.$$.fragment),n=_(),Ce(r.$$.fragment),a=_();for(let e=0;e<d.length;e+=1)d[e].c();i=_(),Ce(o.$$.fragment)},m(e,s){Se(t,e,s),C(e,n,s),Se(r,e,s),C(e,a,s);for(let t=0;t<d.length;t+=1)d[t].m(e,s);C(e,i,s),Se(o,e,s),l=!0},p(e,n){const a={};2&n&&(a.lossFunc=e[1]),t.$set(a);const l={};if(4&n&&(l.onDragEnd=e[2]),16&n&&(l.onDrag=e[4]),!s&&1&n&&(s=!0,l.position=e[0],se((()=>s=!1))),r.$set(l),8&n){let t;for(h=e[3],t=0;t<h.length;t+=1){const r=BW(e,h,t);d[t]?(d[t].p(r,n),me(d[t],1)):(d[t]=PW(r),d[t].c(),me(d[t],1),d[t].m(i.parentNode,i))}for(fe(),t=h.length;t<d.length;t+=1)p(t);ge()}const u={};8&n&&(u.position=e[3][e[3].length-1].target),512&n&&(u.$$scope={dirty:n,ctx:e}),o.$set(u)},i(e){if(!l){me(t.$$.fragment,e),me(r.$$.fragment,e);for(let e=0;e<h.length;e+=1)me(d[e]);me(o.$$.fragment,e),l=!0}},o(e){be(t.$$.fragment,e),be(r.$$.fragment,e),d=d.filter(Boolean);for(let e=0;e<d.length;e+=1)be(d[e]);be(o.$$.fragment,e),l=!1},d(e){Ee(t,e),e&&S(n),Ee(r,e),e&&S(a),E(d,e),e&&S(i),Ee(o,e)}}}function UW(e){let t,n;return t=new uW({props:{$$slots:{default:[VW]},$$scope:{ctx:e}}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};543&n&&(r.$$scope={dirty:n,ctx:e}),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function GW(e){let t,n;return t=new dW({props:{width:"300",height:"300",$$slots:{default:[UW]},$$scope:{ctx:e}}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,[n]){const r={};543&n&&(r.$$scope={dirty:n,ctx:e}),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function HW(e,t,n){let r,{loss:s}=t,{theta:a}=t,{calculateTrajectories:i}=t,{trajectory:o}=t;return e.$$set=e=>{"loss"in e&&n(1,s=e.loss),"theta"in e&&n(0,a=e.theta),"calculateTrajectories"in e&&n(2,i=e.calculateTrajectories),"trajectory"in e&&n(3,o=e.trajectory)},e.$$.update=()=>{4&e.$$.dirty&&n(4,r=zW()(i,120))},[a,s,i,o,r,function(e){a=e,n(0,a)}]}const jW=class extends Ae{constructor(e){super(),Te(this,e,HW,GW,d,{loss:1,theta:0,calculateTrajectories:2,trajectory:3})}};function qW(e){let t,n,r,s,a,i,o,l,u,c,h,d,p,f,g,m,b,y,x,v,w,k,I,$,E,A,R;function F(t){e[7](t)}let D={loss:e[5][0],trajectory:e[4][0],calculateTrajectories:e[6]};function O(t){e[8](t)}void 0!==e[0]&&(D.theta=e[0]),r=new jW({props:D}),J.push((()=>Ne(r,"theta",F)));let L={loss:e[5][1],trajectory:e[4][1],calculateTrajectories:e[6]};function z(t){e[9](t)}void 0!==e[0]&&(L.theta=e[0]),o=new jW({props:L}),J.push((()=>Ne(o,"theta",O)));let B={min:"-4",max:"0",id:"userOptimizedTheta_lr",label:`Learning Rate: ${e[3].toPrecision(2)}`};function P(t){e[10](t)}void 0!==e[1]&&(B.value=e[1]),d=new $W({props:B}),J.push((()=>Ne(d,"value",z)));let W={min:"1",max:"5",id:"userOptimizedTheta_steps",label:`Inner optimization steps: ${e[2]}`};function V(t){e[11](t)}void 0!==e[2]&&(W.value=e[2]),m=new $W({props:W}),J.push((()=>Ne(m,"value",P)));let U={loss:e[5][2],trajectory:e[4][2],calculateTrajectories:e[6]};function G(t){e[12](t)}void 0!==e[0]&&(U.theta=e[0]),w=new jW({props:U}),J.push((()=>Ne(w,"theta",V)));let H={loss:e[5][3],trajectory:e[4][3],calculateTrajectories:e[6]};return void 0!==e[0]&&(H.theta=e[0]),E=new jW({props:H}),J.push((()=>Ne(E,"theta",G))),{c(){t=T("div"),n=T("div"),Ce(r.$$.fragment),a=_(),i=T("div"),Ce(o.$$.fragment),u=_(),c=T("div"),h=T("div"),Ce(d.$$.fragment),f=_(),g=T("div"),Ce(m.$$.fragment),y=_(),x=T("div"),v=T("div"),Ce(w.$$.fragment),I=_(),$=T("div"),Ce(E.$$.fragment),M(n,"class","column is-half svelte-fdj7r8"),M(i,"class","column is-half svelte-fdj7r8"),M(t,"class","columns"),M(h,"class","column is-half svelte-fdj7r8"),M(g,"class","column is-half svelte-fdj7r8"),M(c,"class","columns"),M(v,"class","column is-half svelte-fdj7r8"),M($,"class","column is-half svelte-fdj7r8"),M(x,"class","columns")},m(e,s){C(e,t,s),N(t,n),Se(r,n,null),N(t,a),N(t,i),Se(o,i,null),C(e,u,s),C(e,c,s),N(c,h),Se(d,h,null),N(c,f),N(c,g),Se(m,g,null),C(e,y,s),C(e,x,s),N(x,v),Se(w,v,null),N(x,I),N(x,$),Se(E,$,null),R=!0},p(e,[t]){const n={};16&t&&(n.trajectory=e[4][0]),!s&&1&t&&(s=!0,n.theta=e[0],se((()=>s=!1))),r.$set(n);const a={};16&t&&(a.trajectory=e[4][1]),!l&&1&t&&(l=!0,a.theta=e[0],se((()=>l=!1))),o.$set(a);const i={};8&t&&(i.label=`Learning Rate: ${e[3].toPrecision(2)}`),!p&&2&t&&(p=!0,i.value=e[1],se((()=>p=!1))),d.$set(i);const u={};4&t&&(u.label=`Inner optimization steps: ${e[2]}`),!b&&4&t&&(b=!0,u.value=e[2],se((()=>b=!1))),m.$set(u);const c={};16&t&&(c.trajectory=e[4][2]),!k&&1&t&&(k=!0,c.theta=e[0],se((()=>k=!1))),w.$set(c);const h={};16&t&&(h.trajectory=e[4][3]),!A&&1&t&&(A=!0,h.theta=e[0],se((()=>A=!1))),E.$set(h)},i(e){R||(me(r.$$.fragment,e),me(o.$$.fragment,e),me(d.$$.fragment,e),me(m.$$.fragment,e),me(w.$$.fragment,e),me(E.$$.fragment,e),R=!0)},o(e){be(r.$$.fragment,e),be(o.$$.fragment,e),be(d.$$.fragment,e),be(m.$$.fragment,e),be(w.$$.fragment,e),be(E.$$.fragment,e),R=!1},d(e){e&&S(t),Ee(r),Ee(o),e&&S(u),e&&S(c),Ee(d),Ee(m),e&&S(y),e&&S(x),Ee(w),Ee(E)}}}function KW(e,t,n){let r,s,{theta:a=[.5,.5]}=t,i=-2,o=1,l=[e=>XP(e,kd([[.5,.7],[.4,.2],[.6,.2],[.9,.3]]),kd([-1,-1.5,2,-1.5])),e=>XP(e,kd([[.6,.8],[.2,.3],[.7,.1],[.8,.3]]),kd([-1,-1.5,2,-1.5])),e=>XP(e,kd([[.4,.7],[.3,.2],[.8,.1],[1,.3]]),kd([-1,-1.5,2,-1.5])),e=>XP(e,kd([[.6,.7],[.4,.2],[.2,-.1],[.9,.3]]),kd([-1,-1.5,2,-1.5]))],u=Array(l.length).fill([{origin:a,target:a}]);K((()=>{c()}));const c=()=>{var e=performance.now();Ap((()=>{Promise.all(l.map(((e,t)=>{let n=Gg(kd(a));return Promise.all(Oe()(o).map((t=>(s.minimize((()=>e(n).sum()),n),n.buffer()))))}))).then((t=>{n(4,u=t.map((e=>Oe()(e.length).map((t=>({origin:0==t?a:Array.from(e[t-1].values),target:Array.from(e[t].values)})))))),console.log(performance.now()-e)}))}))};return e.$$set=e=>{"theta"in e&&n(0,a=e.theta)},e.$$.update=()=>{14&e.$$.dirty&&(n(3,r=Math.pow(10,i/2)),n(2,o),n(1,i),n(3,r),s=tb.sgd(r),c())},[a,i,o,r,u,l,c,function(e){a=e,n(0,a)},function(e){a=e,n(0,a)},function(e){i=e,n(1,i)},function(e){o=e,n(2,o),n(1,i),n(3,r)},function(e){a=e,n(0,a)},function(e){a=e,n(0,a)}]}function XW(e,t,n){const r=e.slice();return r[7]=t[n],r[8]=t,r[9]=n,r}function YW(e,t,n){const r=e.slice();return r[7]=t[n],r[9]=n,r}function ZW(e,t,n){const r=e.slice();return r[7]=t[n],r[9]=n,r}function JW(e,t,n){const r=e.slice();return r[7]=t[n],r[9]=n,r}function QW(e,t,n){const r=e.slice();return r[7]=t[n],r[9]=n,r}function eV(e){let t,n,r,s,a,i,o,l,u,c,h,d=e[9]+1+"";return{c(){t=T("input"),s=_(),a=T("label"),i=R("\\( \\mathcal L_"),o=R(d),l=R(" \\)\n      "),M(t,"type","radio"),t.__value=n=e[9],t.value=t.__value,M(t,"id",r=`loss_${e[9]+1}`),e[4][0].push(t),M(a,"for",u=`loss_${e[9]+1}`)},m(n,r){C(n,t,r),t.checked=t.__value===e[2],C(n,s,r),C(n,a,r),N(a,i),N(a,o),N(a,l),c||(h=D(t,"change",e[3]),c=!0)},p(e,n){4&n&&(t.checked=t.__value===e[2])},d(n){n&&S(t),e[4][0].splice(e[4][0].indexOf(t),1),n&&S(s),n&&S(a),c=!1,h()}}}function tV(e){let t,n;return t=new OW({props:{lossFunc:e[7].loss,logScale:!0,opacity:e[9]==e[2]?1:0}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};1&n&&(r.lossFunc=e[7].loss),4&n&&(r.opacity=e[9]==e[2]?1:0),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function nV(e){let t,n;return t=new OW({props:{lossFunc:e[7].loss,logScale:!0,opacity:e[9]==e[2]?1:0}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};1&n&&(r.lossFunc=e[7].loss),4&n&&(r.opacity=e[9]==e[2]?1:0),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function rV(e){let t,n;return t=new iW({props:{origin:e[1],target:e[7].phi,trimStart:"0.1",trimEnd:"0.1",stroke:"#fff",fill:"#fff","stroke-width":"1"}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};2&n&&(r.origin=e[1]),1&n&&(r.target=e[7].phi),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function sV(e){let t,n,r;function s(t){e[6](t,e[7])}let a={value:"\\phi_"+e[9],offset:[0,-15]};return void 0!==e[7].phi&&(a.position=e[7].phi),t=new FW({props:a}),J.push((()=>Ne(t,"position",s))),{c(){Ce(t.$$.fragment)},m(e,n){Se(t,e,n),r=!0},p(r,s){e=r;const a={};!n&&1&s&&(n=!0,a.position=e[7].phi,se((()=>n=!1))),t.$set(a)},i(e){r||(me(t.$$.fragment,e),r=!0)},o(e){be(t.$$.fragment,e),r=!1},d(e){Ee(t,e)}}}function aV(e){let t,n,r,s,a,i,o,l,u=e[0],c=[];for(let t=0;t<u.length;t+=1)c[t]=tV(JW(e,u,t));const h=e=>be(c[e],1,1,(()=>{c[e]=null}));let d=e[0],p=[];for(let t=0;t<d.length;t+=1)p[t]=nV(ZW(e,d,t));const f=e=>be(p[e],1,1,(()=>{p[e]=null}));let g=e[0],m=[];for(let t=0;t<g.length;t+=1)m[t]=rV(YW(e,g,t));const b=e=>be(m[e],1,1,(()=>{m[e]=null}));function y(t){e[5](t)}let x={value:"\\theta",offset:[0,-15]};void 0!==e[1]&&(x.position=e[1]),s=new FW({props:x}),J.push((()=>Ne(s,"position",y)));let v=e[0],w=[];for(let t=0;t<v.length;t+=1)w[t]=sV(XW(e,v,t));const k=e=>be(w[e],1,1,(()=>{w[e]=null}));return{c(){for(let e=0;e<c.length;e+=1)c[e].c();t=_();for(let e=0;e<p.length;e+=1)p[e].c();n=_();for(let e=0;e<m.length;e+=1)m[e].c();r=_(),Ce(s.$$.fragment),i=_();for(let e=0;e<w.length;e+=1)w[e].c();o=F()},m(e,a){for(let t=0;t<c.length;t+=1)c[t].m(e,a);C(e,t,a);for(let t=0;t<p.length;t+=1)p[t].m(e,a);C(e,n,a);for(let t=0;t<m.length;t+=1)m[t].m(e,a);C(e,r,a),Se(s,e,a),C(e,i,a);for(let t=0;t<w.length;t+=1)w[t].m(e,a);C(e,o,a),l=!0},p(e,i){if(5&i){let n;for(u=e[0],n=0;n<u.length;n+=1){const r=JW(e,u,n);c[n]?(c[n].p(r,i),me(c[n],1)):(c[n]=tV(r),c[n].c(),me(c[n],1),c[n].m(t.parentNode,t))}for(fe(),n=u.length;n<c.length;n+=1)h(n);ge()}if(5&i){let t;for(d=e[0],t=0;t<d.length;t+=1){const r=ZW(e,d,t);p[t]?(p[t].p(r,i),me(p[t],1)):(p[t]=nV(r),p[t].c(),me(p[t],1),p[t].m(n.parentNode,n))}for(fe(),t=d.length;t<p.length;t+=1)f(t);ge()}if(3&i){let t;for(g=e[0],t=0;t<g.length;t+=1){const n=YW(e,g,t);m[t]?(m[t].p(n,i),me(m[t],1)):(m[t]=rV(n),m[t].c(),me(m[t],1),m[t].m(r.parentNode,r))}for(fe(),t=g.length;t<m.length;t+=1)b(t);ge()}const l={};if(!a&&2&i&&(a=!0,l.position=e[1],se((()=>a=!1))),s.$set(l),1&i){let t;for(v=e[0],t=0;t<v.length;t+=1){const n=XW(e,v,t);w[t]?(w[t].p(n,i),me(w[t],1)):(w[t]=sV(n),w[t].c(),me(w[t],1),w[t].m(o.parentNode,o))}for(fe(),t=v.length;t<w.length;t+=1)k(t);ge()}},i(e){if(!l){for(let e=0;e<u.length;e+=1)me(c[e]);for(let e=0;e<d.length;e+=1)me(p[e]);for(let e=0;e<g.length;e+=1)me(m[e]);me(s.$$.fragment,e);for(let e=0;e<v.length;e+=1)me(w[e]);l=!0}},o(e){c=c.filter(Boolean);for(let e=0;e<c.length;e+=1)be(c[e]);p=p.filter(Boolean);for(let e=0;e<p.length;e+=1)be(p[e]);m=m.filter(Boolean);for(let e=0;e<m.length;e+=1)be(m[e]);be(s.$$.fragment,e),w=w.filter(Boolean);for(let e=0;e<w.length;e+=1)be(w[e]);l=!1},d(e){E(c,e),e&&S(t),E(p,e),e&&S(n),E(m,e),e&&S(r),Ee(s,e),e&&S(i),E(w,e),e&&S(o)}}}function iV(e){let t,n;return t=new uW({props:{$$slots:{default:[aV]},$$scope:{ctx:e}}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};16391&n&&(r.$$scope={dirty:n,ctx:e}),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function oV(e){let t,n,r,s,a=e[0],i=[];for(let t=0;t<a.length;t+=1)i[t]=eV(QW(e,a,t));return r=new dW({props:{width:"600",height:"400",$$slots:{default:[iV]},$$scope:{ctx:e}}}),{c(){t=T("div");for(let e=0;e<i.length;e+=1)i[e].c();n=_(),Ce(r.$$.fragment)},m(e,a){C(e,t,a);for(let e=0;e<i.length;e+=1)i[e].m(t,null);C(e,n,a),Se(r,e,a),s=!0},p(e,[n]){if(5&n){let r;for(a=e[0],r=0;r<a.length;r+=1){const s=QW(e,a,r);i[r]?i[r].p(s,n):(i[r]=eV(s),i[r].c(),i[r].m(t,null))}for(;r<i.length;r+=1)i[r].d(1);i.length=a.length}const s={};16391&n&&(s.$$scope={dirty:n,ctx:e}),r.$set(s)},i(e){s||(me(r.$$.fragment,e),s=!0)},o(e){be(r.$$.fragment,e),s=!1},d(e){e&&S(t),E(i,e),e&&S(n),Ee(r,e)}}}function lV(e,t,n){let r=[{loss:ZP,phi:[.1,.2]},{loss:YP,phi:[.3,.8]}],s=[.5,.5],a=0;return[r,s,a,function(){a=this.__value,n(2,a)},[[]],function(e){s=e,n(1,s)},function(t,s){e.$$.not_equal(s.phi,t)&&(s.phi=t,n(0,r))}]}class uV{constructor(e=[.5,.5],t=[.1,.1]){this.trueParameters=((e,t)=>cf(e.map(((e,n)=>kg([1],e,t[n])))))(e,t),this.trueParameters.print();var n,r=Ig([10]),s=Bg([r,tg([10])]),a=Cf(this.trueParameters,s);this.loss=Ap((()=>e=>Nf(e,s).squaredDifference(a).sum(-1).div(Mp(20)))),this.lossGrad=(xo(Po(n=this.loss),(()=>"The f passed in grad(f) must be a function")),(e,t)=>{const r=bd(e,"x","tf.grad","string_or_numeric"),s=null!=t?bd(t,"dy","tf.grad"):null;return ud.tidy((()=>{const{value:e,grads:t}=ud.gradients((()=>n(r)),[r],s);return null!=s&&vo(e.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),function(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}(t),t[0]}))})}paramUpdate(e,t=.05,n=!1){return n&&(e=kd(e)),t=Mp(t),Ap((()=>e.sub(t.mul(this.lossGrad(e)))))}toArray(e){return e.bufferSync().values}}function cV(e){let t,n,r,s,a;function i(t){e[2](t)}t=new OW({props:{lossFunc:e[1]}});let o={};return void 0!==e[0]&&(o.position=e[0]),r=new yW({props:o}),J.push((()=>Ne(r,"position",i))),{c(){Ce(t.$$.fragment),n=_(),Ce(r.$$.fragment)},m(e,s){Se(t,e,s),C(e,n,s),Se(r,e,s),a=!0},p(e,n){const a={};2&n&&(a.lossFunc=e[1]),t.$set(a);const i={};!s&&1&n&&(s=!0,i.position=e[0],se((()=>s=!1))),r.$set(i)},i(e){a||(me(t.$$.fragment,e),me(r.$$.fragment,e),a=!0)},o(e){be(t.$$.fragment,e),be(r.$$.fragment,e),a=!1},d(e){Ee(t,e),e&&S(n),Ee(r,e)}}}function hV(e){let t,n;return t=new uW({props:{$$slots:{default:[cV]},$$scope:{ctx:e}}}),{c(){Ce(t.$$.fragment)},m(e,r){Se(t,e,r),n=!0},p(e,n){const r={};19&n&&(r.$$scope={dirty:n,ctx:e}),t.$set(r)},i(e){n||(me(t.$$.fragment,e),n=!0)},o(e){be(t.$$.fragment,e),n=!1},d(e){Ee(t,e)}}}function dV(e){let t,n,r;return n=new dW({props:{width:"400",height:"400",$$slots:{default:[hV]},$$scope:{ctx:e}}}),{c(){t=T("div"),Ce(n.$$.fragment),M(t,"class","chart-container svelte-ud9utc")},m(e,s){C(e,t,s),Se(n,t,null),r=!0},p(e,[t]){const r={};19&t&&(r.$$scope={dirty:t,ctx:e}),n.$set(r)},i(e){r||(me(n.$$.fragment,e),r=!0)},o(e){be(n.$$.fragment,e),r=!1},d(e){e&&S(t),Ee(n)}}}function pV(e,t,n){let r=new uV,{loss:s=r.loss}=t,{handlePosition:a}=t;return e.$$set=e=>{"loss"in e&&n(1,s=e.loss),"handlePosition"in e&&n(0,a=e.handlePosition)},e.$$.update=()=>{1&e.$$.dirty&&console.log("handle",a)},[a,s,function(e){a=e,n(0,a)}]}let fV;fV=document.querySelector("#teaser"),fV.innerHTML="",new class extends Ae{constructor(e){super(),Te(this,e,Ze,Xe,d,{})}}({target:fV}),fV=document.querySelector("#userOptimizedTheta"),fV.innerHTML="",new class extends Ae{constructor(e){super(),Te(this,e,KW,qW,d,{theta:0})}}({target:fV}),fV=document.querySelector("#metaGradient"),fV.innerHTML="",new class extends Ae{constructor(e){super(),Te(this,e,lV,oV,d,{})}}({target:fV}),fV=document.querySelector("#contourExample"),fV.innerHTML="",new class extends Ae{constructor(e){super(),Te(this,e,pV,dV,d,{loss:1,handlePosition:0})}}({target:fV})})()})();